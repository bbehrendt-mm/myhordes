security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        users:
            entity:
                class: 'App\Entity\User'
    encoders:
        App\Entity\User:
            algorithm: auto
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: lazy
            logout:
                path: auto_logout
                target: initial_landing
            guard:
                authenticators:
                    - App\Security\AjaxAuthenticator
            remember_me:
                secret: '%kernel.secret%'
                lifetime: 2629800 # 1 month
                path: /

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    role_hierarchy:
        ROLE_USER:  ROLE_REGISTERED
        ROLE_CROW:  ROLE_USER
        ROLE_ADMIN: ROLE_CROW

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # Web Access
        - { path: ^/$, roles: IS_AUTHENTICATED_ANONYMOUSLY }

        # AJAX Access
        - { path: ^/jx/landing,     roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/jx/public/,     roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/jx/ghost/,      roles: ROLE_USER }
        - { path: ^/jx/soul/,       roles: ROLE_USER }
        - { path: ^/jx/admin/dash,  roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/jx/admin/,      roles: ROLE_CROW }
        - { path: ^/admin/,         roles: ROLE_CROW }

        # API Access
        - { path: ^/api/public/login,  roles: ROLE_REGISTERED }
        - { path: ^/api/public/logout, roles: ROLE_REGISTERED }
        - { path: ^/api/soul/,         roles: ROLE_USER }
        - { path: ^/api/public/,       roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/admin/login,   roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/admin/,        roles: ROLE_CROW }
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
