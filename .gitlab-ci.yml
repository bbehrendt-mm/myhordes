# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/PHP.gitlab-ci.yml

# Select image from https://hub.docker.com/_/php/
image: chialab/php-dev:8.1

# Bring in any services we need http://docs.gitlab.com/ee/ci/docker/using_docker_images.html#what-is-a-service
# See http://docs.gitlab.com/ee/ci/services/README.html for examples.
services:
  - mariadb:10.7

# Set any variables we need
variables:
  # Configure mysql environment variables (https://hub.docker.com/r/_/mysql/)
  # MYSQL_DATABASE: myhordes
  MARIADB_ROOT_PASSWORD : MyH0rd3sD@tAbaze!
  DATABASE_URL: mysql://root:MyH0rd3sD@tAbaze!@mariadb:3306/myhordes
  XDEBUG_MODE: coverage

stages:
  - build
  - test-translate
  - deploy

build:
  stage: build
  script:
    # Add NodeJS repo
    - curl -fsSL https://deb.nodesource.com/setup_16.x | bash -
    # Installing some dependancies
    - apt install -yqq git imagemagick curl unzip nodejs
    # Changing php's maximum memory to 256M
    - mv "$PHP_INI_DIR/php.ini-production" "$PHP_INI_DIR/php.ini"
    - sed -Ei 's/memory_limit = (.*)/memory_limit = 256M/' "$PHP_INI_DIR/php.ini"
    - npm install --global yarn
    # Run Composer
    - composer install
    # Install assets
    - yarn install
    - yarn encore dev
    # Install default DB
    - php bin/console app:migrate -i -vvv
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: push
    paths:
      - vendor
      - node_modules
      - public/build
  rules:
    - changes:
        - composer.json
        - package.json
        - composer.lock
        - yarn.lock
        - assets/**/*

translate:
  stage: test-translate
  dependencies:
    - build
  script:
    # We install crowdin CLI
    - apt update
    - apt install default-jre -yqq
    - curl https://artifacts.crowdin.com/repo/deb/crowdin3.deb -o /root/crowdin.deb
    - dpkg -i ~/crowdin.deb
    # Changing php's maximum memory to 256M
    - mv "$PHP_INI_DIR/php.ini-production" "$PHP_INI_DIR/php.ini"
    - sed -Ei 's/memory_limit = (.*)/memory_limit = 256M/' "$PHP_INI_DIR/php.ini"
    # Install a DB
    - php bin/console app:migrate -i -vvv --skip-optional
    # Let's generate source strings
    - bin/console app:translation:update de
    # And we send it to Crowdin
    - crowdin upload sources -b translation-main
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - vendor
      - node_modules
      - public/build
  except:
    changes:
      - "*.md"
    refs:
      - merge_requests
      - translation-main
      - i18n_translation-main
  variables:
    CROWDIN_API_TOKEN: $CROWDIN_API_TOKEN
    CROWDIN_PROJECT_ID: $CROWDIN_PROJECT_ID

# Run our tests
# If Xdebug was installed you can generate a coverage report and see code coverage metrics.
test:
  stage: test-translate
  dependencies:
    - build
  script:
    # Changing php's maximum memory to 256M
    - mv "$PHP_INI_DIR/php.ini-production" "$PHP_INI_DIR/php.ini"
    - sed -Ei 's/memory_limit = (.*)/memory_limit = 256M/' "$PHP_INI_DIR/php.ini"
    # Install a DB
    - php bin/console app:migrate -i -vvv
    # Run tests
    - vendor/bin/phpunit # --coverage-text --colors=never
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - vendor
      - node_modules
      - public/build

deploy_staging:
  stage: deploy
  dependencies:
    - test
  script:
    - apt-get update -yqq
    - apt-get install -yqq sshpass
    - export SSHPASS=$SSH_PASSWORD
    - sshpass -e ssh -p 2244 -o stricthostkeychecking=no deployer@newhope.aifesdespets.fr 'cd /var/www/chehtan.dev/myhordes/www && bin/console app:migrate -g --remote origin --branch Dev-Ludofloria --environment dev --phar'
    - unset SSHPASS
  only:
    - Dev-Ludofloria
  environment:
    name: ludo-staging
    url: https://myhordes.chehtan.dev