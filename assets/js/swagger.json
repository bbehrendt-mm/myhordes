{
  "openapi": "3.0.2",
  "info": {
    "title": "MyHordes External API",
    "description": "This documentation describes the MyHordes external API. There are two APIs available to use - JSON and XML. Although it's possible to mix them, this is not recommended.",
    "license": {
      "name": "AGPL3",
      "url": "https://spdx.org/licenses/AGPL-3.0-or-later.html"
    },
    "version": "1.0.0.63"
  },
  "servers": [
    {
      "url": "/api/x/",
      "description": "MyHordes API Server"
    }
  ],
  "tags": [
    {
      "name": "XML API",
      "description": "Implements the older XML API"
    },
    {
      "name": "JSON API",
      "description": "Implements the newer Twinoid JSON API"
    }
  ],
  "paths": {
    "/v2/xml": {
      "get": {
        "tags": [
          "XML API"
        ],
        "summary": "Returns a list of available endpoints",
        "responses": {
          "200": {
            "description": "List",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/XMLEndpointList"
                }
              }
            }
          }
        },
        "security": [
          {"secret_key":[]},
          {"user_key":[]}
        ]
      }
    },
    "/v2/xml/user": {
      "get": {
        "tags": [
          "XML API"
        ],
        "summary": "User information.",
        "responses": {
          "200": {
            "description": "List",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/XMLUserResponse"
                }
              }
            }
          }
        },
        "security": [
          {"secret_key":[]},
          {"user_key":[]}
        ]
      }
    },
    "/v2/xml/items": {
      "get": {
        "tags": [
          "XML API"
        ],
        "summary": "Item information.",
        "responses": {
          "200": {
            "description": "List",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/XMLItemResponse"
                }
              }
            }
          }
        },
        "security": [
          {"secret_key":[]},
          {"user_key":[]}
        ]
      }
    },
    "/v2/xml/buildings": {
      "get": {
        "tags": [
          "XML API"
        ],
        "summary": "Building information.",
        "responses": {
          "200": {
            "description": "List",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/XMLBuildingResponse"
                }
              }
            }
          }
        },
        "security": [
          {"secret_key":[]},
          {"user_key":[]}
        ]
      }
    },
    "/v2/xml/ruins": {
      "get": {
        "tags": [
          "XML API"
        ],
        "summary": "Ruin information.",
        "responses": {
          "200": {
            "description": "List",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/XMLRuinResponse"
                }
              }
            }
          }
        },
        "security": [
          {"secret_key":[]},
          {"user_key":[]}
        ]
      }
    },
    "/v2/xml/pictos": {
      "get": {
        "tags": [
          "XML API"
        ],
        "summary": "Picto information.",
        "responses": {
          "200": {
            "description": "List",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/XMLPictoResponse"
                }
              }
            }
          }
        },
        "security": [
          {"secret_key":[]},
          {"user_key":[]}
        ]
      }
    },
    "/v2/xml/town": {
      "get": {
        "tags": [
          "XML API"
        ],
        "summary": "Town information.",
        "responses": {
          "200": {
            "description": "List",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/XMLTownResponse"
                }
              }
            }
          }
        },
        "security": [
          {"secret_key":[]},
          {"user_key":[]}
        ]
      }
    },

    "/json/status": {
      "get": {
        "tags": [
          "JSON API"
        ],
        "summary": "Server status",
        "responses": {
          "200": {
            "description": "List",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JSONServerStatusResponse"
                }
              }
            }
          }
        }
      }
    },
    "/json/items": {
      "get": {
        "tags": [
          "JSON API"
        ],
        "summary": "Prototypes API (item types)",
        "parameters": [
          {"$ref": "#/components/parameters/JSONParameterFields"},
          {"$ref": "#/components/parameters/JSONParameterFilter"},
          {"$ref": "#/components/parameters/JSONParameterLanguage"}
        ],
        "responses": {
          "200": {
            "description": "List",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JSONPrototypeItemsResponse"
                }
              }
            }
          }
        },
        "security": [
          {"secret_key":[]},
          {"user_key":[]}
        ]
      }
    },
    "/json/buildings": {
      "get": {
        "tags": [
          "JSON API"
        ],
        "summary": "Prototypes API (buildings)",
        "parameters": [
          {"$ref": "#/components/parameters/JSONParameterFields"},
          {"$ref": "#/components/parameters/JSONParameterFilter"},
          {"$ref": "#/components/parameters/JSONParameterLanguage"}
        ],
        "responses": {
          "200": {
            "description": "List",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JSONBuildingPrototypeObject"
                }
              }
            }
          }
        },
        "security": [
          {"secret_key":[]},
          {"user_key":[]}
        ]
      }
    },
    "/json/pictos": {
      "get": {
        "tags": [
          "JSON API"
        ],
        "summary": "Prototypes API (distinctions)",
        "parameters": [
          {"$ref": "#/components/parameters/JSONParameterFields"},
          {"$ref": "#/components/parameters/JSONParameterFilter"},
          {"$ref": "#/components/parameters/JSONParameterLanguage"}
        ],
        "responses": {
          "200": {
            "description": "List",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JSONPictoPrototypeObject"
                }
              }
            }
          }
        },
        "security": [
          {"secret_key":[]},
          {"user_key":[]}
        ]
      }
    },
    "/json/ruins": {
      "get": {
        "tags": [
          "JSON API"
        ],
        "summary": "Prototypes API (ruins)",
        "parameters": [
          {"$ref": "#/components/parameters/JSONParameterFields"},
          {"$ref": "#/components/parameters/JSONParameterFilter"},
          {"$ref": "#/components/parameters/JSONParameterLanguage"}
        ],
        "responses": {
          "200": {
            "description": "List",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JSONRuinPrototypeObject"
                }
              }
            }
          }
        },
        "security": [
          {"secret_key":[]},
          {"user_key":[]}
        ]
      }
    },
    "/json/me": {
      "get": {
        "tags": [
          "JSON API"
        ],
        "summary": "Information about the current user.",
        "parameters": [
          {"$ref": "#/components/parameters/JSONParameterFields"},
          {"$ref": "#/components/parameters/JSONParameterLanguage"}
        ],
        "responses": {
          "200": {
            "description": "List",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JSONUserObject"
                }
              }
            }
          }
        },
        "security": [
          {"secret_key":[]},
          {"user_key":[]}
        ]
      }
    },
    "/json/user": {
      "get": {
        "tags": [
          "JSON API"
        ],
        "summary": "Information about the current user.",
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "description": "User ID",
            "schema": {
              "type": "integer"
            },
            "required": true
          },
          {"$ref": "#/components/parameters/JSONParameterFields"},
          {"$ref": "#/components/parameters/JSONParameterLanguage"}
        ],
        "responses": {
          "200": {
            "description": "List",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JSONUserObject"
                }
              }
            }
          }
        },
        "security": [
          {"secret_key":[]},
          {"user_key":[]}
        ]
      }
    },
    "/json/users": {
      "get": {
        "tags": [
          "JSON API"
        ],
        "summary": "Information about multiple users at once.",
        "parameters": [
          {
            "in": "query",
            "name": "ids",
            "description": "Comma-separated list of user IDs",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {"$ref": "#/components/parameters/JSONParameterFields"},
          {"$ref": "#/components/parameters/JSONParameterLanguage"}
        ],
        "responses": {
          "200": {
            "description": "List",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/JSONUserObject" }
                }
              }
            }
          }
        },
        "security": [
          {"secret_key":[]},
          {"user_key":[]}
        ]
      }
    },
    "/json/map": {
      "get": {
        "tags": [
          "JSON API"
        ],
        "summary": "Information about a current game.",
        "parameters": [
          {
            "in": "query",
            "name": "mapId",
            "description": "Map ID",
            "schema": {
              "type": "integer"
            },
            "required": true
          },
          {"$ref": "#/components/parameters/JSONParameterFields"},
          {"$ref": "#/components/parameters/JSONParameterLanguage"}
        ],
        "responses": {
          "200": {
            "description": "List",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JSONGameObject"
                }
              }
            }
          }
        },
        "security": [
          {"secret_key":[]},
          {"user_key":[]}
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "XMLGeneralResponse": {
        "description": "This schema has not been defined yet.",
        "type": "object",
        "properties": {},
        "xml": {
          "name": "hordes"
        }
      },
      "XMLEndpointList": {
        "description": "List of available endpoints",
        "type": "object",
        "properties": {
          "user": {
            "type": "string",
            "example": "https:/myhordes.de/api/x/v2/xml/user"
          },
          "items": {
            "type": "string",
            "example": "https:/myhordes.de/api/x/v2/xml/items"
          },
          "buildings": {
            "type": "string",
            "example": "https:/myhordes.de/api/x/v2/xml/buildings"
          },
          "ruins": {
            "type": "string",
            "example": "https:/myhordes.de/api/x/v2/xml/ruins"
          },
          "pictos": {
            "type": "string",
            "example": "https:/myhordes.de/api/x/v2/xml/pictos"
          },
          "town": {
            "type": "string",
            "example": "https:/myhordes.de/api/x/v2/xml/town"
          }
        },
        "xml": {
          "name": "hordes"
        }
      },
      "XMLUserResponse": {
        "description": "Contains information regarding the current user.",
        "type": "object",
        "properties": {
          "headers": {
            "$ref": "#/components/schemas/XMLHeaderObject"
          },
          "data": {
            "type": "object",
            "properties": {
              "cache-date": {
                "type": "string",
                "format": "datetime",
                "description": "Date at which this object was generated",
                "example": "2022-07-16 20:00:00",
                "xml": {
                  "attribute": true
                }
              },
              "cache-fast": {
                "type": "integer",
                "minimum": 0,
                "maximum": 0,
                "example": 0,
                "description": "Will usually be 0.",
                "xml": {
                  "attribute": true
                }
              },
              "rewards": {
                "$ref": "#/components/schemas/XMLRewardListObject"
              },
              "maps": {
                "$ref": "#/components/schemas/XMLMapListObject"
              },
              "imported-maps": {
                "$ref": "#/components/schemas/XMLImportedMapListObject"
              }
            }
          }
        },
        "xml": {
          "name": "hordes"
        }
      },
      "XMLItemResponse": {
        "description": "Contains information about all available items on MyHordes",
        "type": "object",
        "properties": {
          "headers": {
            "$ref": "#/components/schemas/XMLHeaderObject"
          },
          "data": {
            "type": "object",
            "properties": {
              "cache-date": {
                "type": "string",
                "format": "datetime",
                "description": "Date at which this object was generated",
                "example": "2022-07-16 20:00:00",
                "xml": {
                  "attribute": true
                }
              },
              "cache-fast": {
                "type": "integer",
                "minimum": 0,
                "maximum": 0,
                "example": 0,
                "description": "Will usually be 0.",
                "xml": {
                  "attribute": true
                }
              },
              "items": {
                "$ref": "#/components/schemas/XMLItemPrototypeListObject"
              }
            }
          }
        },
        "xml": {
          "name": "hordes"
        }
      },
      "XMLBuildingResponse": {
        "description": "Contains information about all available constructions on MyHordes",
        "type": "object",
        "properties": {
          "headers": {
            "$ref": "#/components/schemas/XMLHeaderObject"
          },
          "data": {
            "type": "object",
            "properties": {
              "cache-date": {
                "type": "string",
                "format": "datetime",
                "description": "Date at which this object was generated",
                "example": "2022-07-16 20:00:00",
                "xml": {
                  "attribute": true
                }
              },
              "cache-fast": {
                "type": "integer",
                "minimum": 0,
                "maximum": 0,
                "example": 0,
                "description": "Will usually be 0.",
                "xml": {
                  "attribute": true
                }
              },
              "items": {
                "$ref": "#/components/schemas/XMLBuildingPrototypeListObject"
              }
            }
          }
        },
        "xml": {
          "name": "hordes"
        }
      },
      "XMLRuinResponse": {
        "description": "Contains information about all ruin types on MyHordes",
        "type": "object",
        "properties": {
          "headers": {
            "$ref": "#/components/schemas/XMLHeaderObject"
          },
          "data": {
            "type": "object",
            "properties": {
              "cache-date": {
                "type": "string",
                "format": "datetime",
                "description": "Date at which this object was generated",
                "example": "2022-07-16 20:00:00",
                "xml": {
                  "attribute": true
                }
              },
              "cache-fast": {
                "type": "integer",
                "minimum": 0,
                "maximum": 0,
                "example": 0,
                "description": "Will usually be 0.",
                "xml": {
                  "attribute": true
                }
              },
              "items": {
                "$ref": "#/components/schemas/XMLRuinPrototypeListObject"
              }
            }
          }
        },
        "xml": {
          "name": "hordes"
        }
      },
      "XMLPictoResponse": {
        "description": "Contains information about picto types on MyHordes",
        "type": "object",
        "properties": {
          "headers": {
            "$ref": "#/components/schemas/XMLHeaderObject"
          },
          "data": {
            "type": "object",
            "properties": {
              "cache-date": {
                "type": "string",
                "format": "datetime",
                "description": "Date at which this object was generated",
                "example": "2022-07-16 20:00:00",
                "xml": {
                  "attribute": true
                }
              },
              "cache-fast": {
                "type": "integer",
                "minimum": 0,
                "maximum": 0,
                "example": 0,
                "description": "Will usually be 0.",
                "xml": {
                  "attribute": true
                }
              },
              "items": {
                "$ref": "#/components/schemas/XMLPictoPrototypeListObject"
              }
            }
          }
        },
        "xml": {
          "name": "hordes"
        }
      },
      "XMLTownResponse": {
        "description": "Contains information regarding the user's current town.",
        "type": "object",
        "properties": {
          "headers": {
            "$ref": "#/components/schemas/XMLHeaderObject"
          },
          "data": {
            "type": "object",
            "properties": {
              "cache-date": {
                "type": "string",
                "format": "datetime",
                "description": "Date at which this object was generated",
                "example": "2022-07-16 20:00:00",
                "xml": {
                  "attribute": true
                }
              },
              "cache-fast": {
                "type": "integer",
                "minimum": 0,
                "maximum": 0,
                "example": 0,
                "description": "Will usually be 0.",
                "xml": {
                  "attribute": true
                }
              },
              "city": {
                "$ref": "#/components/schemas/XMLCityObject"
              },
              "bank": {
                "$ref": "#/components/schemas/XMLBankObject"
              },
              "expeditions": {
                "$ref": "#/components/schemas/XMLExpeditionListObject"
              },
              "citizens": {
                "$ref": "#/components/schemas/XMLCitizenListObject"
              },
              "cadavers": {
                "$ref": "#/components/schemas/XMLCadaverListObject"
              },
              "map": {
                "$ref": "#/components/schemas/XMLChartObject"
              }
            }
          }
        },
        "xml": {
          "name": "hordes"
        }
      },

      "XMLCitizenObject": {
        "description": "Describes a citizen.",
        "type": "object",
        "properties": {
          "dead": {
            "type": "integer",
            "minimum": 0,
            "maximum": 1,
            "example": 0,
            "description": "Is this citizen dead (1) or alive (0)",
            "xml": {
              "attribute": true
            }
          },
          "hero": {
            "type": "integer",
            "minimum": 0,
            "maximum": 1,
            "example": 0,
            "description": "Does this citizen play with a heroic profession (1) or not (0)",
            "xml": {
              "attribute": true
            }
          },
          "name": {
            "type": "string",
            "description": "Player name",
            "example": "Dayan",
            "xml": {
              "attribute": true
            }
          },
          "avatar": {
            "type": "string",
            "description": "Avatar URL",
            "example": "42/e8b3ac08be0c72dba1a9731fc48c4eff.jpeg",
            "xml": {
              "attribute": true
            }
          },
          "id": {
            "type": "integer",
            "description": "Unique user ID",
            "example": 42,
            "xml": {
              "attribute": true
            }
          },
          "ban": {
            "type": "integer",
            "minimum": 0,
            "maximum": 1,
            "example": 0,
            "description": "Is this citizen shunned (1) or not (0)",
            "xml": {
              "attribute": true
            }
          },
          "job": {
            "type": "string",
            "description": "Job identifier",
            "example": "collec",
            "enum": ["none", "basic", "collec", "guardian", "hunter", "tamer", "tech", "shaman", "survivalist"],
            "xml": {
              "attribute": true
            }
          },
          "out": {
            "type": "integer",
            "minimum": 0,
            "maximum": 1,
            "example": 0,
            "description": "Is this citizen outside (1) or in town (0)",
            "xml": {
              "attribute": true
            }
          },
          "x": {
            "type": "integer",
            "description": "X Position on the map (when outside)",
            "example": 5,
            "xml": {
              "attribute": true
            }
          },
          "y": {
            "type": "integer",
            "description": "Y Position on the map (when outside)",
            "example": -2,
            "xml": {
              "attribute": true
            }
          }
        },
        "xml": {
          "name": "citizen"
        }
      },
      "XMLOwnerObject": {
        "description": "Describes the current user.",
        "type": "object",
        "properties": {
          "citizen": {
            "$ref": "#/components/schemas/XMLCitizenObject"
          },
          "myZone": {
            "$ref": "#/components/schemas/XMLMyZoneObject"
          }
        },
        "xml": {
          "name": "owner"
        }
      },
      "XMLItemObject": {
        "description": "An item",
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "Number of items in this stack.",
            "example": 1,
            "xml": {
              "attribute": true
            }
          },
          "id": {
            "type": "integer",
            "description": "Item type ID",
            "example": 2,
            "xml": {
              "attribute": true
            }
          },
          "cat": {
            "type": "string",
            "description": "Item category",
            "example": "Rsc",
            "enum": ["Armor","Box","Drug","Food","Furniture","Misc","Rsc","Weapon"],
            "xml": {
              "attribute": true
            }
          },
          "img": {
            "type": "string",
            "description": "Item icon",
            "example": "item/item_pile.gif",
            "xml": {
              "attribute": true
            }
          },
          "broken": {
            "type": "integer",
            "minimum": 0,
            "maximum": 1,
            "example": 0,
            "description": "Is this item broken (1) or not (0)",
            "xml": {
              "attribute": true
            }
          },
          "name": {
            "type": "string",
            "description": "Item name (depends on language)",
            "example": "Batterie",
            "xml": {
              "attribute": true
            }
          }
        },
        "xml": {
          "name": "item"
        }
      },
      "XMLMyZoneObject": {
        "description": "Current zone",
        "type": "object",
        "properties": {
          "dried": {
            "type": "integer",
            "minimum": 0,
            "maximum": 1,
            "example": 0,
            "description": "Is this zone dried (1) or not (0)",
            "xml": {
              "attribute": true
            }
          },
          "h": {
            "type": "integer",
            "description": "Human control points",
            "example": 2,
            "xml": {
              "attribute": true
            }
          },
          "z": {
            "type": "integer",
            "description": "Number of zombies",
            "example": 1,
            "xml": {
              "attribute": true
            }
          },
          "item": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/XMLItemObject"
            },
            "xml": {
              "wrapped": false
            }
          }
        },
        "xml": {
          "name": "myZone"
        }
      },
      "XMLShortGameObject": {
        "description": "Information about the current town.",
        "type": "object",
        "properties": {
          "days": {
            "type": "integer",
            "example": 4,
            "description": "Current day",
            "xml": {
              "attribute": true
            }
          },
          "quarantine": {
            "type": "integer",
            "minimum": 0,
            "maximum": 1,
            "example": 0,
            "description": "Will usually be 0. In case of a game error, this may be set to 1. We recommend to cease further processing of this stream in case this property is set to 1.",
            "xml": {
              "attribute": true
            }
          },
          "datetime": {
            "type": "string",
            "format": "datetime",
            "description": "Current date",
            "example": "2022-07-16 20:00:00",
            "xml": {
              "attribute": true
            }
          },
          "id": {
            "type": "integer",
            "description": "Unique town ID",
            "example": 1467,
            "xml": {
              "attribute": true
            }
          }
        },
        "xml": {
          "name": "game"
        }
      },
      "XMLHeaderObject": {
        "description": "Common information about the API and the current user",
        "type": "object",
        "properties": {
          "link": {
            "type": "string",
            "description": "The current API endpoint",
            "example": "https:///myhordes.localhost/api/x/v2/xml/user",
            "xml": {
              "attribute": true
            }
          },
          "iconurl": {
            "type": "string",
            "description": "Prefix for icon URLs",
            "example": "https:///myhordes.localhost/build/images",
            "xml": {
              "attribute": true
            }
          },
          "avatarurl": {
            "type": "string",
            "description": "Prefix for avatar URLs",
            "example": "https:///myhordes.localhost/build/images",
            "xml": {
              "attribute": true
            }
          },
          "secure": {
            "type": "integer",
            "minimum": 0,
            "maximum": 1,
            "example": 1,
            "description": "Is this API call authorized (1) or not (0). For non-authorized requests, the amount of available information is limited.",
            "xml": {
              "attribute": true
            }
          },
          "author": {
            "type": "string",
            "description": "Name of the API generator",
            "example": "MyHordes",
            "xml": {
              "attribute": true
            }
          },
          "language": {
            "type": "string",
            "description": "Current language",
            "example": "de",
            "enum": ["de","en","fr","es"],
            "xml": {
              "attribute": true
            }
          },
          "version": {
            "type": "string",
            "description": "API version",
            "example": "0.1",
            "xml": {
              "attribute": true
            }
          },
          "generator": {
            "type": "string",
            "description": "API framework",
            "example": "symfony",
            "xml": {
              "attribute": true
            }
          },
          "owner": {
            "$ref": "#/components/schemas/XMLOwnerObject"
          },
          "game": {
            "$ref": "#/components/schemas/XMLShortGameObject"
          }
        },
        "xml": {
          "name": "headers"
        }
      },
      "XMLRewardObject": {
        "description": "Earned reward",
        "type": "object",
        "properties": {
          "rare": {
            "type": "integer",
            "minimum": 0,
            "maximum": 1,
            "example": 0,
            "description": "Is this reward rare (1) or not (0).",
            "xml": {
              "attribute": true
            }
          },
          "n": {
            "type": "integer",
            "example": 10,
            "description": "Picto count",
            "xml": {
              "attribute": true
            }
          },
          "img": {
            "type": "string",
            "description": "Picto URL",
            "example": "pictos/r_pande.gif",
            "xml": {
              "attribute": true
            }
          },
          "name": {
            "type": "string",
            "description": "Picto name (depends on language)",
            "example": "Überlebende der Hölle!",
            "xml": {
              "attribute": true
            }
          },
          "desc": {
            "type": "string",
            "description": "Picto description (depends on language)",
            "example": "Sie sind ein wahrer Überlebenskünstler der Hölle.",
            "xml": {
              "attribute": true
            }
          },
          "title": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Title name (depends on language)",
                  "example": "Hölle, das esse ich jeden Morgen.",
                  "xml": {
                    "attribute": true
                  }
                }
              }
            },
            "xml": {
              "name": "title",
              "wrapped": false
            }
          }
        },
        "xml": {
          "name": "r"
        }
      },
      "XMLRewardListObject": {
        "description": "List of pictos",
        "type": "object",
        "properties": {
          "r": {
            "type": "array",
            "items": {"$ref": "#/components/schemas/XMLRewardObject"}
          }
        },
        "xml": {
          "name": "rewards"
        }
      },
      "XMLMapObject": {
        "description": "Played map",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Town name",
            "example": "Gespenstische Soldaten",
            "xml": {
              "attribute": true
            }
          },
          "season": {
            "type": "integer",
            "example": 15,
            "minimum": 0,
            "description": "Town season",
            "xml": {
              "attribute": true
            }
          },
          "score": {
            "type": "integer",
            "example": 21,
            "minimum": 0,
            "description": "Town score",
            "xml": {
              "attribute": true
            }
          },
          "d": {
            "type": "integer",
            "example": 6,
            "minimum": 0,
            "description": "Survived days",
            "xml": {
              "attribute": true
            }
          },
          "id": {
            "type": "integer",
            "example": 2,
            "minimum": 0,
            "description": "Unique Town ID",
            "xml": {
              "attribute": true
            }
          },
          "v1": {
            "type": "integer",
            "example": 0,
            "minimum": 0,
            "maximum": 1,
            "description": "Old town; can only be true for imported towns.",
            "xml": {
              "attribute": true
            }
          },
          "origin": {
            "type": "string",
            "description": "Origin of an imported town",
            "example": "de",
            "enum": ["de","en","fr","es"],
            "xml": {
              "attribute": true
            }
          },
          "phase": {
            "type": "string",
            "description": "Describes the origin of the town.",
            "example": "alpha",
            "enum": ["alpha","beta","native","import"],
            "xml": {
              "attribute": true
            }
          }
        },
        "xml": {
          "name": "m"
        }
      },
      "XMLMapListObject": {
        "description": "List of maps",
        "type": "object",
        "properties": {
          "m": {
            "type": "array",
            "items": {"$ref": "#/components/schemas/XMLMapObject"}
          }
        },
        "xml": {
          "name": "maps"
        }
      },
      "XMLImportedMapListObject": {
        "description": "List of imported maps (imported into MyHordes, but for the primary soul)",
        "type": "object",
        "properties": {
          "m": {
            "type": "array",
            "items": {"$ref": "#/components/schemas/XMLMapObject"}
          }
        },
        "xml": {
          "name": "imported-maps"
        }
      },
      "XMLItemPrototypeObject": {
        "description": "An item type",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Item type ID",
            "example": 2,
            "xml": {
              "attribute": true
            }
          },
          "cat": {
            "type": "string",
            "description": "Item category",
            "example": "Rsc",
            "enum": ["Armor","Box","Drug","Food","Furniture","Misc","Rsc","Weapon"],
            "xml": {
              "attribute": true
            }
          },
          "img": {
            "type": "string",
            "description": "Item icon",
            "example": "item/item_pile.gif",
            "xml": {
              "attribute": true
            }
          },
          "name": {
            "type": "string",
            "description": "Item name (depends on language)",
            "example": "Batterie",
            "xml": {
              "attribute": true
            }
          },
          "deco": {
            "type": "integer",
            "description": "Items decoration value",
            "example": 0,
            "xml": {
              "attribute": true
            }
          },
          "heavy": {
            "type": "integer",
            "description": "Is the item heavy (1) or not (0)",
            "example": 0,
            "minimum": 0,
            "maximum": 1,
            "xml": {
              "attribute": true
            }
          },
          "guard": {
            "type": "integer",
            "description": "Watchman defense",
            "example": 0,
            "xml": {
              "attribute": true
            }
          }
        },
        "xml": {
          "name": "item"
        }
      },
      "XMLItemPrototypeListObject": {
        "description": "List of item types available on MyHordes",
        "type": "object",
        "properties": {
          "item": {
            "type": "array",
            "items": {"$ref": "#/components/schemas/XMLItemPrototypeObject"}
          }
        },
        "xml": {
          "name": "items"
        }
      },
      "XMLBuildingPrototypeObject": {
        "description": "A construction site",
        "type": "object",
        "properties": {
          "temporary": {
            "type": "integer",
            "description": "Is the building temporary (1) or not (0)",
            "example": 0,
            "minimum": 0,
            "maximum": 1,
            "xml": {
              "attribute": true
            }
          },
          "id": {
            "type": "integer",
            "description": "Construction type ID",
            "example": 1,
            "xml": {
              "attribute": true
            }
          },
          "img": {
            "type": "string",
            "description": "Construction site icon",
            "example": "building/small_waterhole.gif",
            "xml": {
              "attribute": true
            }
          },
          "name": {
            "type": "string",
            "description": "Construction name (depends on language)",
            "example": "Wassergraben",
            "xml": {
              "attribute": true
            }
          },
          "parent": {
            "type": "integer",
            "description": "Parent construction type ID",
            "example": 2,
            "xml": {
              "attribute": true
            }
          }
        },
        "xml": {
          "name": "building"
        }
      },
      "XMLBuildingPrototypeListObject": {
        "description": "List of construction sites available on MyHordes",
        "type": "object",
        "properties": {
          "item": {
            "type": "array",
            "items": {"$ref": "#/components/schemas/XMLBuildingPrototypeObject"}
          }
        },
        "xml": {
          "name": "buildings"
        }
      },
      "XMLRuinPrototypeObject": {
        "description": "A ruin",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Ruin ID",
            "example": 1,
            "xml": {
              "attribute": true
            }
          },
          "explorable": {
            "type": "integer",
            "minimum": 0,
            "maximum": 1,
            "example": 0,
            "description": "Is it possible to enter the ruin (1) or not (0)",
            "xml": {
              "attribute": true
            }
          },
          "name": {
            "type": "string",
            "description": "Ruin name (depends on language)",
            "example": "Abgelegenes Haus",
            "xml": {
              "attribute": true
            }
          }
        },
        "xml": {
          "name": "ruin"
        }
      },
      "XMLRuinPrototypeListObject": {
        "description": "List of ruins that can spawn on MyHordes",
        "type": "object",
        "properties": {
          "item": {
            "type": "array",
            "items": {"$ref": "#/components/schemas/XMLRuinPrototypeObject"}
          }
        },
        "xml": {
          "name": "ruins"
        }
      },
      "XMLPictoPrototypeObject": {
        "description": "A picto",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Picto ID",
            "example": 1,
            "xml": {
              "attribute": true
            }
          },
          "name": {
            "type": "string",
            "description": "Picto name (depends on language)",
            "example": "Heldentaten",
            "xml": {
              "attribute": true
            }
          }
        },
        "xml": {
          "name": "picto"
        }
      },
      "XMLPictoPrototypeListObject": {
        "description": "List of pictos that can be obtained on MyHordes",
        "type": "object",
        "properties": {
          "item": {
            "type": "array",
            "items": {"$ref": "#/components/schemas/XMLPictoPrototypeObject"}
          }
        },
        "xml": {
          "name": "pictos"
        }
      },
      "XMLCityObject": {
        "description": "City details",
        "type": "object",
        "properties": {
          "city": {
            "type": "string",
            "description": "City name",
            "example": "Alberner Seelenfänger",
            "xml": {
              "attribute": true
            }
          },
          "door": {
            "type": "integer",
            "description": "Is the door open (1) or closed (0)",
            "minimum": 0,
            "maximum": 1,
            "example": 0,
            "xml": {
              "attribute": true
            }
          },
          "water": {
            "type": "integer",
            "description": "Amount of water rations in the well",
            "minimum": 0,
            "example": 120,
            "xml": {
              "attribute": true
            }
          },
          "chaos": {
            "type": "integer",
            "description": "Has chaos erupted in town (1) or not (0)",
            "minimum": 0,
            "maximum": 1,
            "example": 0,
            "xml": {
              "attribute": true
            }
          },
          "devast": {
            "type": "integer",
            "description": "Is the town destroyed (1) or not (0)",
            "minimum": 0,
            "maximum": 1,
            "example": 0,
            "xml": {
              "attribute": true
            }
          },
          "hard": {
            "type": "integer",
            "description": "Is this a pandemonium town (1) or not (0)",
            "minimum": 0,
            "maximum": 1,
            "example": 0,
            "xml": {
              "attribute": true
            }
          },
          "x": {
            "type": "integer",
            "description": "Town position on the map (x)",
            "example": 16,
            "xml": {
              "attribute": true
            }
          },
          "y": {
            "type": "integer",
            "description": "Town position on the map (y)",
            "example": 7,
            "xml": {
              "attribute": true
            }
          },
          "region": {
            "type": "string",
            "description": "City language",
            "example": "de",
            "enum": ["de","en","fr","es"],
            "xml": {
              "attribute": true
            }
          },
          "defense": {
            "description": "Town defense details",
            "type": "object",
            "properties": {
              "base": {
                "type": "integer",
                "description": "Base defense",
                "minimum": 0,
                "example": 10,
                "xml": {
                  "attribute": true
                }
              },
              "items": {
                "type": "integer",
                "description": "Item defense",
                "minimum": 0,
                "example": 0,
                "xml": {
                  "attribute": true
                }
              },
              "guardian_citizens": {
                "type": "integer",
                "description": "Defense by guardians",
                "minimum": 0,
                "example": 30,
                "xml": {
                  "attribute": true
                }
              },
              "citizen_homes": {
                "type": "integer",
                "description": "Defense from homes",
                "minimum": 0,
                "example": 27,
                "xml": {
                  "attribute": true
                }
              },
              "upgrades": {
                "type": "integer",
                "description": "Upgrade defense",
                "minimum": 0,
                "example": 0,
                "xml": {
                  "attribute": true
                }
              },
              "buildings": {
                "type": "integer",
                "description": "Building defense",
                "minimum": 0,
                "example": 10,
                "xml": {
                  "attribute": true
                }
              },
              "total": {
                "type": "integer",
                "description": "Total defense",
                "minimum": 0,
                "example": 67,
                "xml": {
                  "attribute": true
                }
              },
              "itemsMul": {
                "type": "number",
                "description": "Item defense multiplier",
                "minimum": 0,
                "example": 1,
                "xml": {
                  "attribute": true
                }
              }
            },
            "xml": {
              "name": "defense"
            }
          }
        },
        "xml": {
          "name": "city"
        }
      },
      "XMLBankObject": {
        "description": "Town bank",
        "type": "object",
        "properties": {
          "item": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/XMLItemObject"
            },
            "xml": {
              "wrapped": false
            }
          }
        },
        "xml": {
          "name": "bank"
        }
      },
      "XMLCitizenListObject": {
        "description": "Lists all citizens of the town",
        "type": "object",
        "properties": {
          "citizen": {
            "type": "array",
            "items": {"$ref": "#/components/schemas/XMLCitizenObject"}
          }
        },
        "xml": {
          "name": "citizens"
        }
      },
      "XMLCadaverListObject": {
        "description": "Lists all cadavers of the town",
        "type": "object",
        "properties": {
          "cadaver": {
            "type": "array",
            "items": {
              "description": "A cadaver",
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Player name",
                  "example": "Dayan",
                  "xml": {
                    "attribute": true
                  }
                },
                "id": {
                  "type": "integer",
                  "description": "Unique user ID",
                  "example": 42,
                  "xml": {
                    "attribute": true
                  }
                },
                "dtype": {
                  "type": "integer",
                  "description": "ID of the death type",
                  "example": 21,
                  "xml": {
                    "attribute": true
                  }
                },
                "day": {
                  "type": "integer",
                  "description": "Day of death",
                  "example": 2,
                  "xml": {
                    "attribute": true
                  }
                }
              },
              "xml": {
                "name": "cadaver"
              }
            }
          }
        },
        "xml": {
          "name": "cadavers"
        }
      },
      "XMLExpeditionObject": {
        "description": "An expedition",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Expedition name",
            "example": "Brain's schlimme Nachtwanderung",
            "xml": {
              "attribute": true
            }
          },
          "author": {
            "type": "string",
            "description": "Expedition creator name",
            "example": "Brainbox",
            "xml": {
              "attribute": true
            }
          },
          "length": {
            "type": "integer",
            "description": "Length of the route in AP",
            "example": 18,
            "xml": {
              "attribute": true
            }
          },
          "authorId": {
            "type": "integer",
            "description": "Expedition creator user ID",
            "example": 94,
            "xml": {
              "attribute": true
            }
          },
          "point": {
            "type": "array",
            "items": {
              "description": "A route point of the expedition",
              "type": "object",
              "properties": {
                "x": {
                  "type": "integer",
                  "description": "X position",
                  "example": 16,
                  "xml": {
                    "attribute": true
                  }
                },
                "y": {
                  "type": "integer",
                  "description": "Y position",
                  "example": 7,
                  "xml": {
                    "attribute": true
                  }
                }
              },
              "xml": {
                "name": "point"
              }
            }
          }
        },
        "xml": {
          "name": "expedition"
        }
      },
      "XMLExpeditionListObject": {
        "description": "List of current expeditions in this town",
        "type": "object",
        "properties": {
          "item": {
            "type": "array",
            "items": {"$ref": "#/components/schemas/XMLExpeditionObject"}
          }
        },
        "xml": {
          "name": "expeditions"
        }
      },
      "XMLChartObject": {
        "description": "Town map",
        "type": "object",
        "properties": {
          "hei": {
            "type": "integer",
            "description": "Map height",
            "example": 25,
            "xml": {
              "attribute": true
            }
          },
          "wid": {
            "type": "integer",
            "description": "Map height",
            "example": 25,
            "xml": {
              "attribute": true
            }
          },
          "zone": {
            "type": "array",
            "items": {
              "description": "A cadaver",
              "type": "object",
              "properties": {
                "x": {
                  "type": "integer",
                  "description": "X position",
                  "example": 16,
                  "xml": {
                    "attribute": true
                  }
                },
                "y": {
                  "type": "integer",
                  "description": "Y position",
                  "example": 7,
                  "xml": {
                    "attribute": true
                  }
                },
                "nvt": {
                  "type": "integer",
                  "description": "\"Not visited today\", 1 if the zone has been uncovered, but nobody has visited it on the current day",
                  "example": 0,
                  "xml": {
                    "attribute": true
                  }
                }
              },
              "xml": {
                "name": "zone"
              }
            }
          }
        },
        "xml": {
          "name": "map"
        }
      },

      "JSONServerStatusResponse": {
        "description": "Server status",
        "type": "object",
        "properties": {
          "attack": {
            "type": "boolean",
            "example": true,
            "description": "True if the nightly attack is currently being processed."
          },
          "maintain": {
            "type": "boolean",
            "example": false,
            "description": "True if the server is in maintenance mode. WARNING: At this moment, the API is not available in maintenance mode!"
          }
        }
      },
      "JSONPrototypeItemsResponse": {
        "description": "List of item types known to the server.",
        "type": "object",
        "additionalProperties": {"$ref": "#/components/schemas/JSONItemPrototypeObject"}
      },

      "JSONLanguageDependantField": {
        "description": "Localizable string",
        "oneOf": [
          {
            "type": "string",
            "example": "A string",
            "description": "Localized string (in the single selected language)"
          },
          {
            "type": "object",
            "properties": {
              "de": {
                "type": "string",
                "example": "DE",
                "description": "German localization",
                "required": false
              },
              "en": {
                "type": "string",
                "example": "EN",
                "description": "English localization",
                "required": false
              },
              "fr": {
                "type": "string",
                "example": "FR",
                "description": "French localization",
                "required": false
              },
              "es": {
                "type": "string",
                "example": "ES",
                "description": "Spanish localization",
                "required": false
              }
            }
          }
        ]
      },

      "JSONItemPrototypeObject": {
        "description": "Item type",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Numeric item ID",
            "example": 1
          },
          "uid": {
            "type": "string",
            "description": "Internal item descriptor.",
            "example": "water"
          },
          "img": {
            "type": "string",
            "description": "Path to item icon",
            "example": "item/item_water.85230dbb.gif"
          },
          "heavy": {
            "type": "boolean",
            "description": "Is the item heavy?",
            "example": false
          },
          "deco": {
            "type": "integer",
            "description": "Decoration value",
            "example": 0
          },
          "guard": {
            "type": "integer",
            "description": "Guardian strength",
            "example": 0
          },
          "name": {
            "$ref": "#/components/schemas/JSONLanguageDependantField"
          },
          "desc": {
            "$ref": "#/components/schemas/JSONLanguageDependantField"
          },
          "cat": {
            "$ref": "#/components/schemas/JSONLanguageDependantField"
          }
        }
      },
      "JSONItemResourceObject": {
        "type": "object",
        "description": "An item resource needed for an action.",
        "properties": {
          "amount": {
            "type": "integer",
            "description": "Required amount",
            "example": 12
          },
          "rsc": {
            "$ref": "#/components/schemas/JSONItemPrototypeObject"
          }
        }
      },
      "JSONBuildingPrototypeObject": {
        "description": "Building type",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Numeric building ID",
            "example": 1
          },
          "img": {
            "type": "string",
            "description": "Path to building icon",
            "example": "building/small_waterhole.467957af.gif"
          },
          "name": {
            "$ref": "#/components/schemas/JSONLanguageDependantField"
          },
          "desc": {
            "$ref": "#/components/schemas/JSONLanguageDependantField"
          },
          "pa": {
            "type": "integer",
            "description": "AP requirement",
            "example": 100
          },
          "maxLife": {
            "type": "integer",
            "description": "HP count",
            "example": 100
          },
          "breakable": {
            "type": "boolean",
            "description": "Can take damage and be destroyed.",
            "example": true
          },
          "def": {
            "type": "integer",
            "description": "Defense value",
            "example": 10
          },
          "hasUpgrade": {
            "type": "boolean",
            "description": "Can be voted for a daily improvement.",
            "example": true
          },
          "rarity": {
            "type": "integer",
            "description": "Blueprint level (0 if no blueprint, 5 if not unlockable by blueprint)",
            "example": 0
          },
          "temporary": {
            "type": "boolean",
            "description": "Always breaks during the nightly attack.",
            "example": true
          },
          "parent": {
            "type": "integer",
            "description": "ID of parent building (0 if no parent)",
            "example": 0
          },
          "resources": {
            "type": "array",
            "items": {"$ref": "#/components/schemas/JSONItemResourceObject"}
          }
        }
      },
      "JSONPictoPrototypeObject": {
        "description": "Distinction type",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Numeric distinction ID",
            "example": 1
          },
          "img": {
            "type": "string",
            "description": "Path to distinction icon",
            "example": "pictos/r_heroac.2a464a9d.gif"
          },
          "name": {
            "$ref": "#/components/schemas/JSONLanguageDependantField"
          },
          "desc": {
            "$ref": "#/components/schemas/JSONLanguageDependantField"
          },
          "community": {
            "type": "boolean",
            "description": "Can be awarded by a Crow.",
            "example": true
          },
          "rare": {
            "type": "boolean",
            "description": "Is considered rare.",
            "example": true
          }
        }
      },
      "JSONRuinPrototypeObject": {
        "description": "Ruin type",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Numeric ruin ID",
            "example": 1
          },
          "img": {
            "type": "string",
            "description": "Path to ruin icon",
            "example": "building/small_waterhole.467957af.gif"
          },
          "name": {
            "$ref": "#/components/schemas/JSONLanguageDependantField"
          },
          "desc": {
            "$ref": "#/components/schemas/JSONLanguageDependantField"
          },
          "explorable": {
            "type": "boolean",
            "description": "Can this ruin be entered.",
            "example": true
          }
        }
      },

      "JSONCitizenUserObject": {
        "description": "A MyHordes user",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Numeric user ID",
            "example": 1
          },
          "twinId": {
            "type": "integer",
            "description": "Twinoid ID if user has a connected Twinoid Account.",
            "example": 250
          },
          "etwinId": {
            "type": "string",
            "description": "Eternal Twin ID if user has a connected ET Account.",
            "example": ""
          },
          "name": {
            "type": "string",
            "description": "User name",
            "example": "Brainbox"
          },
          "locale": {
            "type": "string",
            "description": "User language",
            "example": "de"
          },
          "avatar": {
            "type": "string",
            "description": "User avatar path",
            "example": ""
          },
          "isGhost": {
            "type": "boolean",
            "description": "User is currently NOT incarnated.",
            "example": true
          },
          "playedMaps": {
            "type": "array",
            "description": "List of previous games played by this user.",
            "items": { "$ref": "#/components/schemas/JSONMapObject" }
          },
          "contacts": {
            "type": "array",
            "description": "Friend list",
            "items": { "$ref": "#/components/schemas/JSONUserObject" }
          },
          "rewards": {
            "type": "array",
            "description": "List of distinctions",
            "items": { "$ref": "#/components/schemas/JSONPictoObject" }
          },
          "homeMessage": {
            "type": "string",
            "description": "Current home message (if incarnated)"
          },
          "hero": {
            "type": "boolean",
            "description": "User is a hero (if incarnated)",
            "example": true
          },
          "dead": {
            "type": "boolean",
            "description": "User is dead (if incarnated)",
            "example": false
          },
          "out": {
            "type": "boolean",
            "description": "User is outside of town (if incarnated)",
            "example": true
          },
          "ban": {
            "type": "boolean",
            "description": "User is shunned (if incarnated)",
            "example": false
          },
          "baseDef": {
            "type": "integer",
            "description": "Home base defense (if incarnated)",
            "example": 5
          },
          "x": {
            "type": "integer",
            "description": "X position on map (town position if in town, if incarnated)",
            "example": 12
          },
          "y": {
            "type": "integer",
            "description": "Y position on map (town position if in town, if incarnated)",
            "example": 10
          },
          "mapId": {
            "type": "integer",
            "description": "Town ID (if incarnated)",
            "example": 1
          },
          "job": {
            "$ref": "#/components/schemas/JSONJobObject"
          }
        }
      },
      "JSONUserObject": {
        "allOf": [
          { "$ref": "#/components/schemas/JSONCitizenUserObject" },
          {
            "type": "object",
            "properties": {
              "map": {
                "$ref": "#/components/schemas/JSONGameObject"
              }
            }
          }
        ],
        "description": "A MyHordes user"
      },
      "JSONPictoObject": {
        "description": "Information about distinctions for a user.",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Numeric distinction ID",
            "example": 1
          },
          "rare": {
            "type": "boolean",
            "description": "Is considered rare.",
            "example": true
          },
          "number": {
            "type": "integer",
            "description": "Number of distinctions.",
            "example": 1
          },
          "img": {
            "type": "string",
            "description": "Path to distinction icon",
            "example": "pictos/r_heroac.2a464a9d.gif"
          },
          "name": {
            "$ref": "#/components/schemas/JSONLanguageDependantField"
          },
          "desc": {
            "$ref": "#/components/schemas/JSONLanguageDependantField"
          },
          "titles": {
            "type": "array",
            "description": "List of unlocked titles.",
            "items": { "$ref": "#/components/schemas/JSONLanguageDependantField" }
          }
        }
      },
      "JSONMapObject": {
        "description": "A MyHordes game",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Numeric user ID",
            "example": 1
          },
          "twinId": {
            "type": "integer",
            "description": "Twinoid ID if user has a connected Twinoid Account.",
            "example": 250
          },
          "etwinId": {
            "type": "string",
            "description": "Eternal Twin ID if user has a connected ET Account.",
            "example": ""
          },
          "mapId": {
            "type": "integer",
            "description": "Numeric map ID",
            "example": 1
          },
          "survival": {
            "type": "integer",
            "description": "Number of survived days.",
            "example": 1
          },
          "day": {
            "type": "integer",
            "description": "Number of survived days for the entire town.",
            "example": 1
          },
          "avatar": {
            "type": "string",
            "description": "User avatar path",
            "example": ""
          },
          "name": {
            "type": "string",
            "description": "User name",
            "example": "Brainbox"
          },
          "mapName": {
            "type": "string",
            "description": "Map name",
            "example": "A Town"
          },
          "origin": {
            "type": "string",
            "description": "If this town is imported from Twinoid, contains the import source and season.",
            "example": "de-10"
          },
          "season": {
            "type": "integer",
            "description": "Season",
            "example": 15
          },
          "dtype": {
            "type": "integer",
            "description": "Death type ID",
            "example": 1
          },
          "v1": {
            "type": "integer",
            "description": "Is always zero (exists for backwards compatibility)",
            "example": 0
          },
          "score": {
            "type": "integer",
            "description": "Soul points earned for this town.",
            "example": 1
          },
          "msg": {
            "type": "string",
            "description": "Citizen's last words.",
            "example": 1
          },
          "comment": {
            "type": "string",
            "description": "Citizen's town comment.",
            "example": 1
          },
          "cleanup": {
            "type": "object",
            "description": "How was the body of this citizen cleaned up?",
            "properties": {
              "user": {
                "type": "string",
                "description": "Name of the player who did the clean up.",
                "example": "MisterD"
              },
              "type": {
                "type": "integer",
                "description": "Cleanup type ID",
                "example": 1
              }
            }
          }
        }
      },
      "JSONJobObject": {
        "description": "A profession",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Numeric profession ID",
            "example": 1
          },
          "uid": {
            "type": "string",
            "description": "Internal identifier",
            "example": ""
          },
          "name": {
            "$ref": "#/components/schemas/JSONLanguageDependantField"
          },
          "desc": {
            "$ref": "#/components/schemas/JSONLanguageDependantField"
          }
        }
      },
      "JSONEstimationObject": {
        "type": "object",
        "properties": {
          "days": {
            "type": "integer",
            "description": "Estimation day",
            "example": 1
          },
          "min": {
            "type": "integer",
            "description": "Estimation min",
            "example": 10
          },
          "max": {
            "type": "integer",
            "description": "Estimation max",
            "example": 20
          },
          "maxed": {
            "type": "boolean",
            "description": "Has the estimation reached max precision?",
            "example": true
          }
        }
      },
      "JSONItemListObject": {
        "type": "array",
        "items": {
          "allOf": [
            { "$ref": "#/components/schemas/JSONItemPrototypeObject" },
            {
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer",
                  "description": "Item count",
                  "example": 4
                },
                "broken": {
                  "type": "boolean",
                  "description": "Is this item broken?",
                  "example": false
                }
              }
            }
          ]
        }
      },
      "JSONGameObject": {
        "description": "A running MyHordes game",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Numeric user ID",
            "example": 1
          },
          "date": {
            "type": "string",
            "description": "Town start date"
          },
          "wid": {
            "type": "integer",
            "description": "Map width",
            "example": 25
          },
          "hei": {
            "type": "integer",
            "description": "Map height",
            "example": 25
          },
          "conspiracy": {
            "type": "boolean",
            "description": "Has an insurrection happened.",
            "example": false
          },
          "days": {
            "type": "integer",
            "description": "Current day",
            "example": 1
          },
          "season": {
            "type": "integer",
            "description": "Season",
            "example": 15
          },
          "phase": {
            "type": "string",
            "description": "Server phase (alpha, beta, import or native)",
            "example": "beta"
          },
          "source": {
            "type": "string",
            "description": "If this town is imported from Twinoid, contains the import source",
            "example": "www.dieverdammten.de"
          },
          "bonusPts": {
            "type": "integer",
            "description": "Bonus points for this town (usually 0)",
            "example": 0
          },
          "guide": {
            "type": "integer",
            "description": "User ID of the current guide",
            "example": 1
          },
          "shaman": {
            "type": "integer",
            "description": "User ID of the current shaman",
            "example": 1
          },
          "custom": {
            "type": "boolean",
            "description": "Town is a private town",
            "example": false
          },
          "citizens": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JSONCitizenUserObject"
            }
          },
          "city": {
            "type": "object",
            "properties": {
              "buildings": {
                "type": "array",
                "description": "Town buildings.",
                "items": {
                  "allOf": [
                    { "$ref": "#/components/schemas/JSONBuildingPrototypeObject" },
                    {
                      "type": "object",
                      "properties": {
                        "life": {
                          "type": "integer",
                          "description": "Current HP",
                          "example": 10
                        },
                        "votes": {
                          "type": "integer",
                          "description": "How many people have voted to improve this building (0 if non-upgradeable)",
                          "example": 0
                        },
                        "hasLevels": {
                          "type": "integer",
                          "description": "Current upgrade level (0 if non-upgradeable)",
                          "example": 0
                        }
                      }
                    }
                  ]
                }
              },
              "news": {
                "type": "object",
                "description": "Current news article",
                "properties": {
                  "z": {
                    "type": "integer",
                    "description": "Attack strength",
                    "example": 100
                  },
                  "def": {
                    "type": "integer",
                    "description": "Defense",
                    "example": 100
                  },
                  "water": {
                    "type": "integer",
                    "description": "Amount of lost water.",
                    "example": 0
                  },
                  "content": { "$ref": "#/components/schemas/JSONLanguageDependantField" },
                  "regenDir": { "$ref": "#/components/schemas/JSONLanguageDependantField" }
                }
              },
              "defense": {
                "type": "object",
                "description": "Current town defense",
                "properties": {
                  "total": {
                    "type": "integer",
                    "description": "Total defense",
                    "example": 0
                  },
                  "base": {
                    "type": "integer",
                    "description": "Base town defense",
                    "example": 0
                  },
                  "buildings": {
                    "type": "integer",
                    "description": "Defense from buildings",
                    "example": 0
                  },
                  "upgrades": {
                    "type": "integer",
                    "description": "Defense from upgrades",
                    "example": 0
                  },
                  "items": {
                    "type": "integer",
                    "description": "Defense from items",
                    "example": 0
                  },
                  "itemsMul": {
                    "type": "number",
                    "description": "Item defense multiplier",
                    "example": 1.0
                  },
                  "citizenHomes": {
                    "type": "integer",
                    "description": "Defense from citizen homes",
                    "example": 0
                  },
                  "citizenGuardians": {
                    "type": "integer",
                    "description": "Defense from guardians",
                    "example": 0
                  },
                  "watchmen": {
                    "type": "integer",
                    "description": "Defense from watchmen",
                    "example": 0
                  },
                  "souls": {
                    "type": "integer",
                    "description": "Defense from souls",
                    "example": 0
                  },
                  "temp": {
                    "type": "integer",
                    "description": "Temp defense",
                    "example": 0
                  },
                  "cadavers": {
                    "type": "integer",
                    "description": "Defense from the cemetery.",
                    "example": 0
                  },
                  "bonus": {
                    "type": "number",
                    "description": "Defense bonus multiplier",
                    "example": 0.0
                  }
                }
              },
              "upgrades": {
                "type": "object",
                "description": "Town building upgrades",
                "properties": {
                  "total": {
                    "type": "integer",
                    "description": "Total number of upgrades",
                    "example": 1
                  },
                  "list": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": { "$ref": "#/components/schemas/JSONLanguageDependantField" },
                        "level": {
                          "type": "integer",
                          "description": "Upgrade level",
                          "example": 1
                        },
                        "update": { "$ref": "#/components/schemas/JSONLanguageDependantField" },
                        "buildingId": {
                          "type": "integer",
                          "description": "The building ID",
                          "example": 1
                        }
                      }
                    }
                  }
                }
              },
              "estimations": { "$ref": "#/components/schemas/JSONEstimationObject" },
              "estimationsNext": { "$ref": "#/components/schemas/JSONEstimationObject" },
              "bank": { "$ref": "#/components/schemas/JSONItemListObject" }
            }
          },
          "expeditions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "author": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Author user ID",
                      "example": 1
                    },
                    "name": {
                      "type": "string",
                      "description": "Author name",
                      "example": "Brainbox"
                    },
                    "avatar": {
                      "type": "string",
                      "description": "Author avatar URL",
                      "example": ""
                    }
                  }
                },
                "name": {
                  "type": "string",
                  "description": "Route name"
                },
                "length": {
                  "type": "integer",
                  "description": "Route length (in AP)",
                  "example": 18
                },
                "points": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "x": {
                        "type": "integer",
                        "description": "X position"
                      },
                      "y": {
                        "type": "integer",
                        "description": "Y position"
                      }
                    }
                  }
                }
              }
            }
          },
          "zones": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "x": {
                  "type": "integer",
                  "description": "X Position on the map (when outside)",
                  "example": 5
                },
                "y": {
                  "type": "integer",
                  "description": "Y Position on the map (when outside)",
                  "example": -2
                },
                "km": {
                  "type": "integer",
                  "description": "Distance to town (in KM)",
                  "example": 10
                },
                "zombies": {
                  "type": "integer",
                  "description": "Number of zombies on this zone",
                  "example": 0
                },
                "is_town": {
                  "type": "boolean",
                  "description": "True if this is the town zone",
                  "example": false
                },
                "building": {
                  "type": "object",
                  "properties": {
                    "sandpile": {
                      "type": "integer",
                      "description": "Remaining number of sand piles that must be cleared to uncover the zone.",
                      "example": 0
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the ruin",
                      "example": "Abgelegenes Haus"
                    },
                    "id": {
                      "type": "integer",
                      "description": "Ruin type ID",
                      "example": 1
                    }
                  }
                },
                "items": {
                  "type": "array",
                  "items": {
                    "allOf": [
                      { "$ref": "#/components/schemas/JSONItemPrototypeObject" },
                      {
                        "type": "object",
                        "properties": {
                          "count": {
                            "type": "integer",
                            "description": "Item count",
                            "example": 4
                          },
                          "broken": {
                            "type": "boolean",
                            "description": "Is this item broken?",
                            "example": false
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "parameters": {
      "JSONParameterFields": {
        "in": "query",
        "name": "fields",
        "allowEmptyValue": true,
        "description": "Comma-separated list of fields to fetch for the result set. Check the example below for a list of valid fields.",
        "schema": {
          "type": "string"
        }
      },
      "JSONParameterFilter": {
        "in": "query",
        "name": "filters",
        "allowEmptyValue": true,
        "description": "Reduce the output list to the given UIDs. Multiple values can be separated by commas.",
        "schema": {
          "type": "string"
        }
      },
      "JSONParameterLanguage": {
        "in": "query",
        "name": "languages",
        "allowEmptyValue": true,
        "description": "Comma-separated list of languages to fetch the content in. Note that passing only a single language will turn all language-dependant fields to a single string.",
        "schema": {
          "type": "string"
        }
      }
    },
    "requestBodies": {
    },
    "securitySchemes": {
      "secret_key": {
        "type": "apiKey",
        "name": "appkey",
        "in": "query",
        "description": "Application key. You can obtain this key by contacting the Technical Support. For testing purposes, you may use the following key: <code>fefe0000fefe0000fefe0000fefe0000</code>. This key is only valid in combination with a test user key."
      },
      "user_key": {
        "type": "apiKey",
        "name": "userkey",
        "in": "query",
        "description": "User key. This key is transmitted to your application when users visit it over the Application Directory. For testing purposes, you may use the following key: <code>fefe0000fefe0000fefe0000fefe0000</code>. This key is only valid when you're actively logged into MyHordes and will resolve to your own user account. Together with the secret test key, it can be used to test the API without the need of registering for a secret key."
      }
    }
  }
}