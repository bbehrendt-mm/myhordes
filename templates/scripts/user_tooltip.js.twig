$.html.addEventListenerAll(".username", "click", function(event){
    event.stopPropagation();
    event.preventDefault();
    var source = event.target;
    while (!source.getAttribute("x-user-id")) {
        source = source.parentElement;
    }
    let target = document.getElementById("user-tooltip");
    if(!target) {
        target = document.createElement("div");
        document.getElementsByTagName("body")[0].appendChild(target);
    }
    target.setAttribute("id", "user-tooltip");
    target.innerHTML = '<div class="center small"><img src="{{ asset('build/images/anims/loading.gif') }}" alt=""/></div>';

    target.style.width = null;
    if (source.getBoundingClientRect().left + source.offsetWidth + target.offsetWidth > window.innerWidth) {

        const temp_left = Math.max(0,source.getBoundingClientRect().left + source.offsetWidth/2 - target.offsetWidth/2);
        if (temp_left + target.offsetWidth > window.innerWidth) {
            target.style.top = (source.getBoundingClientRect().top + document.documentElement.scrollTop + source.offsetHeight) + "px";
            target.style.left = "0px";
            target.style.width = '100%';
        } else {
            target.style.top = (source.getBoundingClientRect().top + document.documentElement.scrollTop + source.offsetHeight) + "px";
            target.style.left = temp_left + "px";
        }

    } else {
        target.style.top = (source.getBoundingClientRect().top + document.documentElement.scrollTop) + "px";
        target.style.left = source.getBoundingClientRect().left + source.offsetWidth + "px";
    }

    $.ajax.background().load(target, "{{ path('soul_tooltip') }}", false, {'id': source.getAttribute("x-user-id")}, function(){
        addActions(source.getAttribute("x-user-id"), target, source);
    });
})

var addActions = function(user_id, target, source){
    $.html.addEventListenerAll('a[x-action="block_user"]','click',(e,elem) => {
        e.preventDefault();
        if (confirm(
            '{{ 'Wenn du diesen Spieler blockierst, kann er dir keine neuen Nachrichten schicken. Werdet ihr beide von einer dritten Person in eine Gruppennachricht hinzugefügt, so werden Beiträge des blockierten Spielers standartmäßig für dich versteckt.'|trans({},'global')|e('js') }}' +
            '\n\n{{ 'Möchtest du fortfahren?'|trans({},'global')|e('js') }}'
        ))
            var url = '{{ path('soul_block_control', {id: 0, action: 1}) }}';
            url = url.replace("0", user_id);
            $.ajax.easySend( url, {},
                function () {
                    $.ajax.load(target, "{{ path('soul_tooltip') }}", false, {'id': user_id}, function(){
                        addActions(user_id, target, source);
                    });
                } );
    });

    $.html.addEventListenerAll('a[x-action="unblock_user"]','click',(e,elem) => {
        e.preventDefault();
        if (confirm('{{ 'Bestätigen?'|trans({},'global')|e('js') }}'))
            var url = '{{ path('soul_block_control', {id: 0, action: 0}) }}';
            url = url.replace("0", user_id);
            $.ajax.easySend( url, {},
                function () {
                    $.ajax.load(target, "{{ path('soul_tooltip') }}", false, {'id': user_id}, function(){
                        addActions(user_id, target, source);
                    });
                });
    });

    $.html.addEventListenerAll('a[x-action="add-friend"]', 'click', (e, elem) => {
        $.ajax.easySend( '{{ path('soul_friend_control', {action: 1}) }}', {'id': elem.getAttribute('x-friend-id')},
            function () {
                $.ajax.load(target, "{{ path('soul_tooltip') }}", false, {'id': user_id}, function(){
                    addActions(user_id, target, source);
                    let userElements = document.querySelectorAll('.username[x-user-id="' + user_id + '"]');
                    for(let i = 0 ; i < userElements.length ; i++)
                        userElements[i].classList.add("is-friend");
                });
            });
    });

    $.html.addEventListenerAll('a[x-action="remove-friend"]', 'click', (e, elem) => {
        $.ajax.easySend( '{{ path('soul_friend_control', {action: 0}) }}', {'id': elem.getAttribute('x-friend-id')},
            function () {
                $.ajax.load(target, "{{ path('soul_tooltip') }}", false, {'id': user_id}, function(){
                    addActions(user_id, target, source);
                    let userElements = document.querySelectorAll('.username[x-user-id="' + user_id + '"]');
                    for(let i = 0 ; i < userElements.length ; i++)
                        userElements[i].classList.remove("is-friend");
                });
            });
    });

    $.html.addEventListenerAll('a[x-action="send-pm"]', 'click', (e, elem) => {
        const p = document.getElementById('postbox');
        if (p) {
            p.setAttribute('x-post-command', elem.getAttribute('x-user-connect'));
            p.click();
        } else alert('{{ 'Fehler beim Laden des Posteingangs.'|trans({},'global') }}')
    });

    let removeTooltip = function(event,force=false) {
        var tooltip = document.getElementById("user-tooltip");
        if(tooltip) {
            if(event.target !== tooltip && (!event.target.closest("#user-tooltip") || force)) {
                tooltip.remove();
                document.removeEventListener("click", removeTooltip);
            }
        }
    }

    document.addEventListener("click", removeTooltip);
    $.html.addEventListenerAll('[x-ajax-href]', 'click', e => removeTooltip(e,true));
}