(function() {
    {% if base_element is not defined %}
    {% set base_element = 'document' %}
    {% endif %}
    let log_boxes = {{ base_element|raw }}.querySelectorAll('.log-container');
    for (let i = 0; i < log_boxes.length; i++) {
        let log = log_boxes[i].querySelector( '.log' );

        const has_preloaded_content = log.getAttribute('x-log-default-provided') == '1';
        const url = log.getAttribute('x-log-source');
        const params = log.getAttribute('x-log-params') ? JSON.parse( log.getAttribute('x-log-params') ) : {};
        let content_box = log.querySelectorAll('.log-content');

        const fun_refresh = function(d,bg) {
            let payload = {
                day: d
                {#  for the Admin section ! #}
                {% if town is defined %}
                , town: {{town.id}}
                {% endif %}
            };

            let filters = document.querySelectorAll("[x-filter-name]");
            for(let j = 0 ; j < filters.length ; j++) {
                payload[filters[j].getAttribute('x-filter-name')] = filters[j].value;
            }

            Object.getOwnPropertyNames(params).forEach( o => payload[o] = params[o] );

            if (bg) $.ajax.background().no_history().load( content_box[0], url, false, payload );
            else $.ajax.no_history().load( content_box[0], url, false, payload )
        };

        let refresh_button = log.querySelector('.log-complete-link');
        if (refresh_button) refresh_button.addEventListener('click', function() {
            let spinner = log.querySelector('.log-spinner');
            refresh_button.classList.add('hidden');
            if (spinner) spinner.classList.remove('hidden');

            fun_refresh(-1,true);
        });

        if (!has_preloaded_content) fun_refresh(-1,true);

        let control_tabs = log_boxes[i].querySelectorAll( '.log-day-select .tab' );

        if (control_tabs.length > 0) {
            for(var itab = 0 ; itab < control_tabs.length ; itab++)  {
                let control_tab = control_tabs[itab];
                const min = parseInt(control_tab.getAttribute( 'x-page-min' ));
                const max = parseInt(control_tab.getAttribute( 'x-page-max' ));
                let   cur = parseInt(control_tab.getAttribute( 'x-page-current' ));

                const fun_adjust = function(dif) {
                    if ((dif > 0 && cur <= (max-dif)) || (dif < 0 && cur >= (min-dif))) {
                        cur += dif;
                        label.innerText = ('' + cur);
                        control_tab.setAttribute( 'x-page-current', cur )
                        fun_refresh(cur,false);
                    }
                };

                control_tab.addEventListener('click', function() {
                    let olds = document.querySelectorAll(".log-day-select .tab.current");
                    for(var iold = 0 ; iold < olds.length ; iold++)
                        olds[iold].classList.remove("current");
                    this.classList.add("current");
                    fun_refresh(this.getAttribute('x-day'), false);
                });
            }
        }
    }
})();
