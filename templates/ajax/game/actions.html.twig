{% if scout is not defined %}
    {% set scout = false %}
{% endif %}
{% if hidden is not defined %}
    {% set hidden = false %}
{% endif %}
{% if prefix is not defined %}
    {% set prefix = '' %}
{% else %}
    {% set prefix = 'prefix-' ~ prefix ~ ' prefixed ' %}
{% endif %}
{% if not hidden %}
    {% macro target_popup( action_id, provoking_id, targets, target_for, text_having, text_missing, close_button = false, big = false, confirm = false, confirmMsg = null, action_button = null, item_tooltip = false ) %}
        <div class="targets" x-target-selection-for="{{ target_for }}">
            {% if text_having is iterable %}
                {% set error = '' %}
                {% for key,text in text_having %}
                    {% if targets|filter(t => t[4] == key) is empty %}
                        {% set error = text_missing[key] %}
                    {% endif %}
                {% endfor %}

                {% if error is empty %}
                    {% for key,text in text_having %}
                        <span class="header">{{ text }}</span>
                        <ul>
                            {% for target in targets|filter(t => t[4] == key) %}
                                <li class="line line-check expanded">
                                    <input class="inline" type="radio" x-collection-for="{{ target_for }}" title="{{ target[1] }}" value="{{ key }}-{{ target[0] }}" id="{{ target_for }}-{{ key }}-{{ target[0] }}" name="{{ target_for }}-{{ key }}" />
                                    <label for="{{ target_for }}-{{ key }}-{{ target[0] }}">
                                        <div><img src="{{ asset(target[2]) }}" alt="{{ target[1] }}"> {{ target[1] }}</div>
                                    </label>
                                </li>
                            {% endfor %}
                        </ul>
                    {% endfor %}
                    <ul>
                        <li class="line expanded">
                            <div class="button small" x-action-id="{{ action_id }}" x-action-id="{{ action_id }}" {% if confirm %}x-action-confirm="1"{% endif%} {% if not confirmMsg is null %}x-confirm-msg="{{ confirmMsg }}"{% endif%} {% if provoking_id is not null %}x-provoking-id="{{ provoking_id }}"{% endif %} x-target-id="?" x-collection-target="{{ target_for }}">{{ 'Auswahl bestätigen'|trans({},'global') }}</div>
                        </li>
                    </ul>
                {% else %}
                    <span>{{ error|raw }}</span>
                {% endif %}
            {% else %}
                {% if targets|length > 0 %}
                <span>{{ text_having }}</span>
                <ul>
                    {% for target in targets %}
                        <li {{ {'line': action_button is not null, 'expanded': big is same as 'big'}|classes }} {% if action_button is null %}x-action-id="{{ action_id }}" {% if confirm %}x-action-confirm="1"{% endif%} {% if not confirmMsg is null %}x-confirm-msg="{{ confirmMsg|trans({'{target}':target[1] }, 'items') }}"{% endif%} {% if provoking_id is not null %}x-provoking-id="{{ provoking_id }}"{% endif %} x-target-id="{{ target[0] }}"{% endif %} >
                            {% if big or action_button is not null %}
                                <div><img src="{{ asset(target[2]) }}" alt="{{ target[1] }}"> {{ target[1] }}</div>
                                {% if action_button is not null %}
                                    <button class="inline small" x-action-id="{{ action_id }}" {% if confirm %}x-action-confirm="1"{% endif%} {% if not confirmMsg is null %}x-confirm-msg="{{ confirmMsg|trans({'{target}':target[1] }, 'items') }}"{% endif%} {% if provoking_id is not null %}x-provoking-id="{{ provoking_id }}"{% endif %} x-target-id="{{ target[0] }}">{{ action_button }}</button>
                                {% endif %}
                            {% else %}
                                <img src="{{ asset(target[2]) }}" alt="{{ target[1] }}">
                            {% endif %}
                            {% if item_tooltip %}{% embed "ajax/game/item_tooltip.html.twig" with {"item": target[3]} %}{% endembed %}{% endif %}
                        </li>
                    {% endfor %}
                </ul>
            {% else %}
                <span>{{ text_missing|raw }}</span>
            {% endif %}
            {% endif %}

            {% if close_button %}
                <div class="right"><span x-close-for="{{ target_for }}">{{ 'Schließen'|trans({},'global') }}</span></div>
            {% endif %}
        </div>
    {% endmacro %}

    {% macro inline_action_renderer(scout, actions) %}
        {% for entry in actions|sort((a,b) => ( b.item.essential <=> a.item.essential ?: a.item.inventory.id <=> b.item.inventory.id ?: a.item.prototype.label|trans({}, 'items') <=> b.item.prototype.label|trans({}, 'items') ?: a.action.label|trans({},'items') <=> b.action.label|trans({},'items') )) %}
            <span class="small action {% if entry.broken is defined and entry.broken %}broken-item{% else %}pointer{% endif %}" {% if entry.crossed %}disabled{% elseif entry.broken is defined and entry.broken %}{% else %}x-action-id="{{ entry.id }}" {% if entry.action.confirm %}x-action-confirm="1"{% endif %} x-provoking-id="{{ entry.item.id }}"{% endif %}>

                {% if scout and entry.action.keepsCover %}
                    <img class="float-right" src="{{ asset('build/images/icons/small_stealthy.gif') }}" alt="">
                {% endif %}

                {{ entry.action.label|trans({},'items') }}

                {% if entry.message is defined and entry.message is not null and not (entry.broken is defined and entry.broken) %}
                    <div class="tooltip normal">{{ entry.message|raw }}</div>
                {% endif %}
            </span>
            {% if entry.crossed and entry.message %}
                <div class="tooltip normal">{{ entry.message|raw }}</div>
            {% endif %}
        {% endfor %}
    {% endmacro %}

    {% macro target_macro_renderer( scout, renderer, target_for, actions ) %}
        <div class="targets rendered-targets" x-target-selection-for="{{ target_for }}">

            {% if renderer == 'tamer_dog_popup' %}

                <div>
                    {{ 'Befiehl {dogname}, deinen Rucksackinhalt in die Stadt zu bringen:'|trans({'dogname': app.user|dogname}, 'items') }}
                    <div>{{ _self.inline_action_renderer( scout, actions|filter(a => a.action.name == 'hero_tamer_1' or a.action.name == 'hero_tamer_2' ) ) }}</div>
                    <div>{{ _self.inline_action_renderer( scout, actions|filter(a => a.action.name == 'hero_tamer_1b' or a.action.name == 'hero_tamer_2b' ) ) }}</div>
                </div>

                {% if actions|filter(a => a.action.name == 'hero_tamer_3' ) is not empty %}
                    <div>
                        {{ 'Du kannst ihn auch mit Drogen dopen:'|trans({}, 'items') }}
                        <div><img alt="" src="{{ asset('build/images/item/item_drug.gif') }}"> {{ _self.inline_action_renderer( scout, actions|filter(a => a.action.name == 'hero_tamer_3' ) ) }}</div>
                    </div>
                {% endif %}

                <div class="help">
                    {{ 'Achtung: Entferne alle Gegenstände aus deinem Rucksack, die du NICHT in die Stadt senden möchtest!'|trans({}, 'items') }}
                </div>

            {% elseif renderer == 'survivalist_popup' %}

                <div>
                    {{ 'Erhalten:'|trans({}, 'items') }}
                    <div>{{ _self.inline_action_renderer( scout, actions|filter(a => a.action.name == 'hero_surv_1' ) ) }}</div>
                    <div>{{ _self.inline_action_renderer( scout, actions|filter(a => a.action.name == 'hero_surv_2' ) ) }}</div>
                </div>
                
            {% else %}
                [ WARNING: UNKNOWN ACTION ACCUMULATOR "{{ renderer }}" ]
            {% endif %}

            <div class="right"><span x-close-for="{{ target_for }}">{{ 'Schließen'|trans({},'global') }}</span></div>
        </div>
    {% endmacro %}

    {% if (item_action_list is defined and item_action_list|length > 0) or (recipe_list is defined and recipe_list.recipes|length > 0)  %}
        {% if iec is defined and iec %}
            <button x-item-action-toggle="1" class="mb-1">
                <img src="{{ asset('build/images/item/item_bag.gif') }}" alt="">
                {{ 'Gegenstand verwenden'|trans({},'items')  }}
                {% if scout %}
                    <img class="icon right" alt="" src="{{ asset('build/images/icons/small_stealthy.gif') }}" />
                {% endif %}
            </button>
            <button x-item-action-toggle="0" class="mb-1" style="display:none;">
                <img src="{{ asset('build/images/icons/small_remove.gif') }}" alt="">
                {{'Abbrechen'|trans({}, 'global')  }}
            </button>
        {% endif %}
        <ul class="{{ prefix }}actions">
            {% if (item_action_list is defined) %}
                {% set processed_renderers = [] %}
                {% for entry in item_action_list|sort((a,b) => ( b.item.essential <=> a.item.essential ?: a.item.inventory.id <=> b.item.inventory.id ?: a.item.prototype.label|trans({}, 'items') <=> b.item.prototype.label|trans({}, 'items') ?: a.action.label|trans({},'items') <=> b.action.label|trans({},'items') )) %}

                    {% if entry.renderer is null or entry.renderer not in processed_renderers %}

                        {% if entry.renderer is not null %}
                            {% set processed_renderers = processed_renderers|merge([entry.renderer]) %}
                        {% endif %}

                        {% if entry.renderer is not null %}
                        <li class="action" x-target-definition="{{ entry.id }}--{{ entry.item.id }}">
                        {% else %}
                        <li class="action {% if entry.broken is defined and entry.broken %}broken-item{% endif %}" {% if entry.crossed %}disabled{% elseif entry.broken is defined and entry.broken %}{% elseif entry.targets is null %}x-action-id="{{ entry.id }}" {% if entry.action.confirm %}x-action-confirm="1"{% endif %} x-provoking-id="{{ entry.item.id }}"{% else %}x-target-definition="{{ entry.id }}--{{ entry.item.id }}"{% endif %}>
                        {% endif %}
                            <img src="{{ asset('build/images/item/item_' ~ entry.item.prototype.icon ~ '.gif') }}" alt="{{ entry.item.prototype.label|trans({},'items') }}">
                            {% if scout and entry.action.keepsCover %}
                                <img class="float-right" src="{{ asset('build/images/icons/small_stealthy.gif') }}" alt="">
                            {% endif %}
                            {% if entry.renderer is not null %}
                                <span>
                                    {{ '{action}: {item}'|trans({'{action}': 'Verwenden'|trans({},'items')|e('html'), '{item}': '<b>' ~ entry.item.prototype.label|trans({},'items')|e('html') ~ '</b>'},'items')|raw }}
                                    {% if entry.renderer == 'tamer_dog_popup' %}
                                        ({{ app.user|dogname }})
                                    {% endif %}
                                </span>
                            {% else %}
                                <span>{{ '{action}: {item}'|trans({'{action}': entry.action.label|trans({},'items')|e('html'), '{item}': '<b>' ~ entry.item.prototype.label|trans({},'items')|e('html') ~ '</b>'},'items')|raw }}</span>
                            {% endif %}
                            {% if entry.renderer is not null %}
                                {{ _self.target_macro_renderer( scout, entry.renderer, entry.id ~ '--' ~ entry.item.id, item_action_list|filter(a => a.renderer == entry.renderer) ) }}
                            {% elseif entry.targets is not null and not entry.crossed and not ( entry.broken is defined and entry.broken ) %}
                                {% if entry.target_mode == 1 %}
                                    {{ _self.target_popup( entry.id, entry.item.id, entry.targets, entry.id ~ '--' ~ entry.item.id, 'Bitte wähle einen Gegenstand:'|trans({},'game'), 'Du verfügst über keine geeigneten Gegenstände'|trans({},'game'), true, false, entry.action.confirm, entry.action.confirmMsg, null, true ) }}
                                {% elseif entry.target_mode in [2,3,4,5] %}
                                    {{ _self.target_popup( entry.id, entry.item.id, entry.targets|sort((a,b) => a[1]|lower <=> b[1]|lower), entry.id ~ '--' ~ entry.item.id, 'Bitte wähle einen Bürger:'|trans({},'game'), 'Es ist kein Bürger in der Nähe...'|trans({},'game'), true, true, entry.action.confirm, entry.action.confirmMsg ) }}
                                {% elseif entry.target_mode == 6 %}
                                    {% set target_poison = 'can_poison'|items|map(i => '<span class="highlight"><img src="' ~ asset('build/images/item/item_' ~ i.icon ~ '.gif')  ~ '" alt="">' ~ i.label|trans({},'items') ~ '</span>') %}
                                    {{ _self.target_popup( entry.id, entry.item.id, entry.targets, entry.id ~ '--' ~ entry.item.id, 'Bitte wähle einen Gegenstand:'|trans({},'game'), 'Du hast nichts, womit du {poison} kombinieren kannst. Du benötigst einen der folgenden Gegenstände:<br />{list_head} oder {list_tail}.'|trans({'poison': '<span class="highlight"><img src="' ~ asset('build/images/item/item_' ~ entry.item.prototype.icon ~ '.gif')  ~ '" alt="">' ~ entry.item.prototype.label|trans({},'items') ~ '</span>', 'list_head': target_poison|slice(0,-1)|join(', '), 'list_tail': target_poison|slice(-1,1)|join(', ')},'game')|raw, true, false, entry.action.confirm, entry.action.confirmMsg ) }}
                                {% else %}
                                    {{ _self.target_popup( entry.id, entry.item.id, entry.targets, entry.id ~ '--' ~ entry.item.id, 'Bitte wähle einen Gegenstand:'|trans({},'game'), 'Du verfügst über keine geeigneten Gegenstände'|trans({},'game'), true, false, entry.action.confirm, entry.action.confirmMsg ) }}
                                {% endif %}
                            {% endif %}

                            {% if entry.renderer is null %}
                                {% if entry.message is defined and entry.message is not null and not (entry.broken is defined and entry.broken) %}
                                    <div class="tooltip normal">{{ entry.message|raw }}</div>
                                {% elseif entry.broken is defined and entry.broken %}
                                    <div class="tooltip normal">{{ 'Dieser Gegenstand ist <strong class="red">kaputt</strong>. Du kannst ihn zur Zeit nicht gebrauchen. Vielleicht findest du in der Stadt eine gütige Seele, der ihn reparieren kann?'|trans({},'items')|raw }}</div>
                                {% elseif not entry.crossed %}
                                    {% embed "ajax/game/item_tooltip.html.twig" with {"item": entry.item} %}{% endembed %}
                                {% endif %}
                            {% endif %}
                        </li>
                    {% endif %}
                {% endfor %}
            {% endif %}
            {% if recipe_list is defined %}
                {% for recipe in recipe_list.recipes %}
                    <li class="action" x-recipe-id="{{ recipe.id }}">
                        {# @var recipe \App\Entity\Recipe #}
                        {% if recipe.result.entries.count == 1 %}
                            {% if recipe.source and not conf.get(constant('App\\Structures\\TownConf::CONF_MODIFIER_PRE_ASSEMBLY'),false) %}
                                <img src="{{ asset('build/images/item/item_' ~ recipe.provoking[0].icon ~ '.gif') }}" alt="{{ recipe.provoking[0].label|trans({},'items') }}">
                                {% if scout and recipe.stealthy %}
                                    <img class="float-right" src="{{ asset('build/images/icons/small_stealthy.gif') }}" alt="">
                                {% endif %}
                                <span>{{ 'Zusammenbauen'|trans({},'game') }}:
                                    {{ recipe.provoking[0].label|trans({}, 'items') }}
                                    {% if not app.user.expert %}
                                    {% for entry in recipe.source.entries %}
                                        {# @var entry \App\Entity\ItemGroupEntry #}
                                        {% for n in 1..entry.chance %}
                                            <img class="{% if n > recipe_list.source_items[entry.prototype.id] %}unavailable{% endif %}" src="{{ asset('build/images/item/item_' ~ entry.prototype.icon ~ '.gif') }}" alt="{{ entry.prototype.label|trans({},'items') }}">
                                        {% endfor %}
                                    {% endfor %}
                                    {% endif %}
                                </span>
                            {% else %}
                                <img src="{{ asset('build/images/item/item_' ~ recipe.result.entries[0].prototype.icon ~ '.gif') }}" alt="{{ recipe.result.entries[0].prototype.label|trans({},'items') }}">
                                {% if scout and recipe.stealthy %}
                                    <img class="float-right" src="{{ asset('build/images/icons/small_stealthy.gif') }}" alt="">
                                {% endif %}
                                <span>{{ 'Herstellen'|trans({},'game') }}: <b>{{ recipe.result.entries[0].prototype.label|trans({},'items') }}</b></span>
                                {% if recipe.source %}
                                    <span>
                                    {{ 'aus'|trans({},'game') }}:
                                    {% for entry in recipe.source.entries %}
                                        {# @var entry \App\Entity\ItemGroupEntry #}
                                        {% for n in 1..entry.chance %}
                                            <img class="{% if n > recipe_list.source_items[entry.prototype.id] %}unavailable{% endif %}" src="{{ asset('build/images/item/item_' ~ entry.prototype.icon ~ '.gif') }}" alt="{{ entry.prototype.label|trans({},'items') }}">
                                        {% endfor %}
                                    {% endfor %}
                                </span>
                                {% endif %}
                            {% endif %}

                        {% else %}
                            {% if recipe.source %}
                                {% if scout and not recipe.stealthy %}
                                    <img class="float-right" src="{{ asset('build/images/icons/uncloak.gif') }}" alt="">
                                {% endif %}
                                <span>
                                    {{ 'Kombinieren'|trans({},'game') }}:
                                    {% for entry in recipe.source.entries %}
                                        {# @var entry \App\Entity\ItemGroupEntry #}
                                        {% for n in 1..entry.chance %}
                                            <img class="{% if n > recipe_list.source_items[entry.prototype.id] %}unavailable{% endif %}" src="{{ asset('build/images/item/item_' ~ entry.prototype.icon ~ '.gif') }}" alt="{{ entry.prototype.label|trans({},'items') }}">
                                        {% endfor %}
                                    {% endfor %}
                                </span>
                            {% endif %}
                        {% endif %}
                    </li>
                {% endfor %}
            {% endif %}
        </ul>
    {% endif %}

    {% if special_action_list is defined and special_action_list|length > 0 %}
        <ul class="{{ prefix }}special_actions">
            {% for entry in special_action_list %}
                <li class="heroic_action" {% if entry.crossed %}disabled{% elseif entry.targets is null %}x-action-id="{{ entry.id }}" {% if entry.action.confirm %}x-action-confirm="1"{% endif %} {% else %}x-target-definition="{{ entry.id }}--special"{% endif %}>
                    <img src="{{ asset('build/images/actions/' ~ entry.icon ~ '.gif') }}" alt="">
                    <span>
                        <b>
                            {{ entry.action.label|trans({},'items') }}
                            {% if entry.action.results|length > 0 %}
                                {% set ap = 0 %}{% set pm = 0 %}
                                {% for result in entry.action.results %}
                                    {% if not result.ap is null %}
                                        {% set ap = ap + result.ap.ap|abs %}
                                    {% endif %}
                                    {% if not result.pm is null %}
                                        {% set pm = pm + result.pm.pm|abs %}
                                    {% endif %}
                                {% endfor %}
                                {% if ap > 0 %}
                                    (<div class="ap">{{ap}}</div>)
                                {% endif %}
                                {% if pm > 0 %}
                                    (<div class="pm">{{pm}}</div>{% if entry.action.name == 'brew_shamanic_potion' %}+<img src="{{ asset('build/images/item/item_water.gif') }}">{% endif %})
                                {% endif %}
                            {% endif %}
                        </b>
                    </span>
                    {% if entry.targets is not null and not entry.crossed %}
                        {% if entry.target_mode == 2 %}
                            {{ _self.target_popup( entry.id, null, entry.targets|sort((a,b) => a[1]|lower <=> b[1]|lower), entry.id ~ '--special', 'Einen Bürger heimbringen:'|trans({},'game'), 'Niemand ist in der Nähe der Stadt (maximal 2 Felder).'|trans({},'game'), true, 'big', entry.action.confirm, entry.action.confirmMsg ) }}
                        {% elseif entry.target_mode == 0 %}
                            {{ _self.target_popup( entry.id, null, entry.targets, entry.id ~ '--special', 'Bitte wähle einen Gegenstand:'|trans({},'game'), 'Du verfügst über keine geeigneten Gegenstände'|trans({},'game'), true, false, entry.action.confirm, entry.action.confirmMsg ) }}
                        {% elseif entry.target_mode == 1 %}
                            {{ _self.target_popup( entry.id, null, entry.targets, entry.id ~ '--special', 'Bitte wähle einen Gegenstand:'|trans({},'game'), 'Du verfügst über keine geeigneten Gegenstände'|trans({},'game'), true, false, entry.action.confirm, entry.action.confirmMsg, null, true ) }}
                        {% elseif entry.target_mode in [3,4,5] %}
                            {{ _self.target_popup( entry.id, null, entry.targets|sort((a,b) => a[1]|lower <=> b[1]|lower), entry.id ~ '--special', 'Bitte wähle einen Bürger:'|trans({},'game'), 'Es ist kein Bürger in der Nähe...'|trans({},'game'), true, true, entry.action.confirm, entry.action.confirmMsg ) }}
                        {% elseif entry.target_mode == 7 %}
                            {{ _self.target_popup( entry.id, null, entry.targets|sort((a,b) => a[1]|lower <=> b[1]|lower), entry.id ~ '--special', 'Bitte wähle einen Bürger:'|trans({},'game'), 'Es ist kein Bürger in der Nähe...'|trans({},'game'), true, true, entry.action.confirm, entry.action.confirmMsg, 'Abstimmen'|trans({},'game') ) }}
                        {% endif %}
                    {% endif %}
                    {% if not entry.action.tooltip is null %}
                        <div class="tooltip help">{{ entry.action.tooltip|trans({}, 'items')|raw }}</div>
                    {% endif %}
                </li>
            {% endfor %}
        </ul>
    {% endif %}

    {% if heroic_action_list is defined and heroic_action_list|length > 0 %}
        <button x-heroic-toggle="1" class="mb-1"><img src="{{ asset('build/images/icons/star.gif') }}" alt="">
            {{ 'Heldentaten'|trans({},'items') }}
            {# {% if scout %}
                <img class="icon right" alt="" src="{{ asset('build/images/icons/small_stealthy.gif') }}" />
            {% endif %} #}
        </button>
        <ul class="{{ prefix }}heroic_actions">
            <li class="heroic_action help">
                <img src="{{ asset('build/images/icons/star.gif') }}" alt="">
                <span>{{'Du kannst <strong>pro Tag eine Heldentat</strong> vollbringen und jede dieser Aktionen kann nur <strong>einmal</strong> pro Partie ausgeführt werden:'|trans({}, 'game')|raw}}</span>
            </li>
            {% for entry in heroic_action_list %}
                <li     {{ { 'heroic_action': true, 'already': entry.used is defined and entry.used }|classes }}
                        {% if entry.crossed %}disabled{% elseif entry.targets is null %}x-action-id="{{ entry.id }}" x-action-confirm="1" {% else %}x-target-definition="{{ entry.id }}--hero"{% endif %}
                        {% if entry.used is defined and entry.used %}data-used-message="{{ entry.used_message|trans({},'items') }}"{% endif %}
                >
                    <img src="{{ asset('build/images/icons/tickOff.gif') }}" alt="">
                    <span class="label"><b>{{ entry.action.label|trans({},'items') }}</b></span>
                    {% if entry.targets is not null and not entry.crossed %}
                        {% if entry.target_mode == 2 %}
                            {{ _self.target_popup( entry.id, null, entry.targets|sort((a,b) => a[1]|lower <=> b[1]|lower), entry.id ~ '--hero', 'Einen Bürger heimbringen:'|trans({},'game'), 'Niemand ist in der Nähe der Stadt (maximal 2 Felder).'|trans({},'game'), true, 'big', entry.action.confirm, entry.action.confirmMsg ) }}
                        {% elseif entry.target_mode == 0 %}
                            {{ _self.target_popup( entry.id, null, entry.targets, entry.id ~ '--hero', 'Bitte wähle einen Gegenstand:'|trans({},'game'), 'Du verfügst über keine geeigneten Gegenstände'|trans({},'game'), true, false, entry.action.confirm, entry.action.confirmMsg ) }}
                        {% elseif entry.target_mode == 1 %}
                            {{ _self.target_popup( entry.id, null, entry.targets, entry.id ~ '--hero', 'Bitte wähle einen Gegenstand:'|trans({},'game'), 'Du verfügst über keine geeigneten Gegenstände'|trans({},'game'), true, false, entry.action.confirm, entry.action.confirmMsg, null, true ) }}
                        {% elseif entry.target_mode in [3,4,5,7] %}
                            {{ _self.target_popup( entry.id, null, entry.targets|sort((a,b) => a[1]|lower <=> b[1]|lower), entry.id ~ '--hero', 'Bitte wähle einen Bürger:'|trans({},'game'), 'Es ist kein Bürger in der Nähe...'|trans({},'game'), true, true, entry.action.confirm, entry.action.confirmMsg ) }}
                        {% elseif entry.target_mode == 8 %}
                            {{ _self.target_popup( entry.id, null, entry.targets|sort((a,b) => a[1]|lower <=> b[1]|lower), entry.id ~ '--hero', {'Action': 'Bitte wähle eine Heldentat:'|trans({},'game'), 'Player': 'Bitte wähle einen Bürger:'|trans({},'game')}, {'Action': 'Du hast keine Heldentaten mehr, die du spenden könntest...'|trans({},'game'), 'Player': 'Es ist kein Bürger in der Nähe...'|trans({},'game')}, true, true, entry.action.confirm, entry.action.confirmMsg ) }}
                        {% endif %}
                    {% endif %}
                    {% if entry.used is defined and entry.used %}
                        <div class="tooltip normal">{{ 'Diese Aktion wurde in dieser Partie schon ausgeführt.'|trans({}, 'items') }}</div>
                    {% endif %}
                    {% if not entry.action.tooltip is null %}
                        <em class="em" style="font-variant: none;">{{ entry.action.tooltip|trans({}, 'items')|raw }}</em>
                    {% endif %}
                </li>
            {% endfor %}
            <li><div class="button" x-heroic-toggle="0">{{ 'Schließen'|trans({},'global') }}</div></li>
        </ul>

    {% endif %}
{% else %}
    <ul class="{{ prefix }}actions">
        <li class="no-interaction">{{ 'Du kannst keine Aktionen ausführen, während du dich versteckst.'|trans({},'game')  }}</li>
    </ul>
{% endif %}