{% extends "ajax/game/town/town.html.twig" %}
{% block title %}{{'Bauprojekte der Stadt'|trans({}, 'game')}}{% endblock %}
{% block content %}
    {% set hour = "now"|date("G") %}
    <div class="row">
        <div class="cell rw-12 town-banner town-banner-construction time-{{ hour }} {% if town.isNight %}night{% endif %}"></div>
    </div>

    <div class="help">
        {% trans from 'game' %}
            In diesem Bereich kannst du an der <strong>Errichtung neuer Gebäude und Bauprojekte mitarbeiten</strong>. Dazu musst du zunächst die dafür notwendigen Materialien in der Wüste einsammeln (Holz, Metall,...). Anschließend kannst du deine Aktionspunkte (AP) für das Gebäude ausgeben, das dich am meisten interessiert.
        {% endtrans %}
    </div>

    {% if banished %}
        {% if slavery %}
            <div class="note">
                {% trans from 'game' %}
                    Die Stadt hat Sklaverei legalisiert. Ab sofort kannst du trotz deiner Verbannung auf einer Baustelle
                    arbeiten und erhälst sogar einen Bonus von 50% auf alle investierten <div class="ap"></div>.
                {% endtrans %}
            </div>
        {% else %}
            <div class="note note-warning">
                {% trans from 'game' %}
                    Du wurdest verbannt und kannst daher nicht länger auf einer Baustelle arbeiten.
                {% endtrans %}
            </div>
        {% endif %}
    {% endif %}

    <div class="forum-preview-container fix-height hide-sm">
        <div id="forum-content">
            <div class="center"><i class="fa fa-spin fa-circle-notch"></i> {{ 'Lade Forum...'|trans({},'game') }}</div>
        </div>
    </div>

    {% if canvote %}
        <div class="hero-help">{{'Du kannst den Bürgern der Stadt die Errichtung eines bestimmten Gebäudes empfehlen. Bewege dafür den Mauszeiger über das Bauprojekt, das du empfehlen willst und klicke auf den Link <strong>Abstimmen</strong>, der darüber erscheint.'|trans({}, 'game')|raw}}</div>
    {% endif %}
    

    {% if not voted_building is null %}
        <div class="voted-building">
            {{'Das folgende Bauprojekt wurde empfohlen:'|trans({}, 'game')}}<br />
            <strong class="name">{{voted_building.prototype.label|trans({}, 'buildings')}}</strong>
            <div class="tooltip help">
            {{ 'Diese Empfehlung stammt von einem oder mehreren Helden deiner Stadt.'|trans({}, 'game') }}
            </div>
        </div>
    {% endif %}

    {% macro building_entry(building, buildable, n, dict, items, disable_all, workshopBonus, hpToAp, canvote, votedBuilding) %}
        {# @var building \App\Entity\Building #}
        <div class="row {% if not buildable %}locked{% elseif building.complete %}complete{% endif %} {% if building == votedBuilding %}voted{% endif %} {% if n > 0 %}lv-{{ min(n,6) }}{% else %}root{% endif %}">
            <div class="padded cell rw-5 rw-lg-12">
                {% if buildable %}
                    <img alt="" src="{{ asset('build/images/building/' ~ building.prototype.icon ~ '.gif' ) }}" >
                {% else %}
                    <img alt="" src="{{ asset('build/images/icons/lock.gif' ) }}" >
                {% endif %}
                <span>{{ building.prototype.label|trans({},'buildings') }}</span>
                {% if building.prototype.temp %}
                    <span>
                        <img alt="(!)" src="{{ asset('build/images/icons/small_warning.gif') }}" />
                        <div class="tooltip temp-building">
                            <h1>{{ 'Temporäre Konstruktion!'|trans({}, 'buildings') }}</h1>
                            {{ 'Diese Konstruktion kann nur einmal verwendet werden. Sie wird nach dem Angriff der Zombiehorde wieder abgerissen.'|trans({}, 'buildings') }}<br /><em>{{'Wenn ihr wollt, könnt irh sie morgen nochmal bauen.'|trans({}, 'buildings')}}</em>
                        </div>
                    </span>
                {% endif %}
                {% if canvote and not building.complete %}
                    <span class="vote" x-building-id="{{ building.id }}">[ <span class="link">{{'Abstimmen'|trans({}, 'game')}}</span> ]</span>
                {% endif %}
                {% if (building.complete and building.defense > 0) or (not building.complete and building.prototype.defense > 0) %}
                    <div class="float-right defense{% if building.complete and building.defense != building.prototype.defense %}-broken{% endif %}">
                    	{% if (building.complete and building.defense > 0) %}
                        	{{ building.defense }}
                        {% elseif not building.complete%}
                        	{{ building.prototype.defense }}
                        {% endif %}
                        {% if building.complete and building.defense != building.prototype.defense and building.prototype.description is empty %}
                            <div class="tooltip">
                                {{"Beschädigte Verteidigung: %defense% / %max%"|trans({"%defense%": building.defense, "%max%": building.prototype.defense}, 'game')}}
                            </div>
                        {% endif %}
                    </div>
                {% endif %}
                {% if building.prototype.description is not empty %}
                    <div class="tooltip help">
                        {% if building.complete and building.defense != building.prototype.defense %}
                            <b>{{"Beschädigte Verteidigung: %defense% / %max%"|trans({"%defense%": building.defense, "%max%": building.prototype.defense}, 'game')}}</b>
                            <hr />
                        {% endif %}
                        {{ building.prototype.description|trans({}, 'buildings') }}
                    </div>
                {% endif %}
            </div>
            <div class="padded cell rw-6 rw-lg-10 rw-sm-12 no-ws">
                {% set res_ok = true %}
                {# initial test: building.ap > 0 and (building.ap < ((building.prototype.ap * workshopBonus)|round) or not building.complete) #}
                {% if building.ap > 0 and not building.complete %}
                    <div class="ap-bar">
                        <div class="bar" style="width: {{ 100*(building.ap/((building.prototype.ap * workshopBonus)|round)) }}%"></div>
                    </div>
                {% elseif building.complete and building.hp < building.prototype.hp %}
                    <div class="ap-bar">
                        <div class="bar" style="width: {{ 100*(building.hp/((building.prototype.hp)|round)) }}%"></div>
                        <div class="tooltip"><em>{{"Zustand:"|trans({}, 'game')}}</em> {{building.hp}}/{{building.prototype.hp}}<br />
                            {{"Jeder %divap%, der in die Reparatur investiert wird, beseitigt %hprepair% Schadenspunkte an einem Bauwerk."|trans({"%divap%": "<div class='ap'></div>", "%hprepair%": "<b>" ~ hpToAp ~ "</b>"}, "game")|raw}}<br /><br />
                            {{"Die Reparatur verbraucht keine Ressourcen."|trans({}, 'game')}}
                        </div>
                    </div>
                {% endif %}
                
                {% if buildable and building.ap < ((building.prototype.ap * workshopBonus)|round) %}
                    <div class="build-req">
                        <div class="ap">{{ ((building.prototype.ap * workshopBonus)|round) - building.ap }}</div>
                    </div>
                {% elseif (building.complete and building.hp < building.prototype.hp) %}
                    <div class="build-req">
                        <div class="ap">{{ ((building.prototype.hp - building.hp)/hpToAp)|round(0, 'ceil') }}</div>
                    </div>
                {% endif %}
                {% if not building.complete and building.prototype.resources is not null and buildable %}
                    {% for itemgroup in building.prototype.resources.entries %}
                        {% if items[ itemgroup.prototype.id ] < itemgroup.chance %}
                            {% set res_ok = false %}
                        {% endif %}
                        <div class="build-req">
                            <img alt="" src="{{ asset('build/images/item/item_' ~ itemgroup.prototype.icon ~ '.gif' ) }}" />
                            <span class="resource current {% if items[ itemgroup.prototype.id ] < itemgroup.chance %}low{% endif %}">{{ items[ itemgroup.prototype.id ] }}/</span><span class="resource needed">{{ itemgroup.chance }}</span>
                            <div class="tooltip">
                                {{ itemgroup.prototype.label|trans({}, 'items') }}
                            </div>
                        </div>
                    {% endfor %}
                {% endif %}
            </div>
            <div class="padded cell rw-1 rw-lg-2 rw-sm-12 right">
                {% if buildable and (building.ap < ((building.prototype.ap * workshopBonus)|round) or not building.complete) or (building.complete and building.hp < building.prototype.hp) %}
                    <button class="inline build-btn" {% if (not res_ok) or disable_all %}disabled{% else %}x-building-id="{{ building.id }}"{% endif %}>{% if not building.complete %}<i class="fa fa-plus"></i>{% else %}<img src="{{ asset('build/images/icons/small_refine.gif') }}" alt="" style="margin-right: 0px;" />{% endif %}</button>
                {% endif %}
            </div>
        </div>
        {% if n < 20 and dict[building.prototype.id] is not empty %}
            {% for sub_building in dict[building.prototype.id] %}
                {{ _self.building_entry(sub_building, buildable and building.complete, n+1, dict, items, disable_all, workshopBonus, hpToAp, canvote, votedBuilding) }}
            {% endfor %}
        {% endif %}
    {% endmacro %}

    {# @var root_cats \App\Entity\Building[] #}
    <div>
        <ul class="buildings-tabs tabs plain" x-tab-group="buildings" x-tab-control>
            <li class="tab" x-tab-id="all">
                <div class="tab-link">
                    <img class="hide-desktop" alt="*" src="{{ asset( 'build/images/icons/small_new.gif' ) }}" >
                    <span class="hide-lg hide-md hide-sm">{{ 'Alle'|trans({},'game') }}</span>
                </div>
            </li>
            {% for building in root_cats %}
                <li class="tab" x-tab-id="type_{{ building.prototype.icon }}">
                    <div class="tab-link">
                        <img class="hide-desktop" alt="" src="{{ asset('build/images/building/' ~ building.prototype.icon ~ '.gif' ) }}" >
                        {% set label = building.prototype.label|trans({}, 'buildings') %}
                        <span class="hide-lg hide-md hide-sm">{{ label|length > 12 ? (label|slice(0,10) ~ '...') : label }}</span>
                    </div>
                </li>
            {% endfor %}
        </ul>
    </div>


    {% for building in root_cats %}
        <div x-tab-group="buildings" x-tab-id="type_{{ building.prototype.icon }}" x-tab-target class="buildings type_{{ building.prototype.icon }}">{{ _self.building_entry(building, true, 0, dictionary, bank, banished and not slavery, workshopBonus, hpToAp, canvote, voted_building) }}</div>
    {% endfor %}

    <div class="help">
    {{ 'Bauprojekte, die mit dem Symbol "<img alt="(!)" src="%path%" />" gekennzeichnet sind, können nur einmal verwendet werden. Sie werden nach dem Angriff der Zombiehorde wieder abgerissen. Wenn ihr wollt, könnt ihr sie morgen nochmal bauen.'|trans({"%path%": asset('build/images/icons/small_warning.gif')},'game')|raw }}  
    </div>

    <div class="row">
        <h5>{{ 'Baustellenregister'|trans({},'game') }}</h5>
        <div class="cell rw-12">
            {% embed "ajax/game/log.html.twig" with {'log_content': log, 'log_source': path('town_constructions_log_controller') } %}
            {% endembed %}
        </div>
    </div>
{% endblock %}
{% block js %}
    {{ parent() }}
    <script>
        {% embed "scripts/log.js.twig" %}{% endembed %}

        const send_build_request = function(id) {
            let ap = null, valid = false;
            do {
                ap = window.prompt("{{ 'Wie viele Aktionspunkte möchtest du in den Bau investieren?'|trans({},'game')|e('js') }}", "1");
                if (ap === null) valid = true;
                else {
                    ap = parseInt(ap);
                    valid = !isNaN(ap) && ap >= 0;
                }
            } while (!valid);

            if (!ap) return;

            $.ajax.easySend( '{{ path('town_constructions_build_controller') }}', {id: id, ap: ap},
                function () {
                    $.ajax.load(null, '{{ path('town_constructions') }}', true);
            } );
        };

        let buttons = document.querySelectorAll('.build-btn[x-building-id]');
        for (let i = 0; i < buttons.length; i++)
            buttons[i].addEventListener('click', function() { send_build_request( this.getAttribute('x-building-id') ); })

        const send_vote_request = function(id){
            if (!confirm('{{ 'Bestätigen?'|trans({},'global')|e('js') }}'))
                return;

            $.ajax.easySend( '{{ path('town_constructions_vote_controller') }}', {id: id},
                function () {
                    $.ajax.load(null, '{{ path('town_constructions') }}', true);
            } );
        }

        let voteButtons = document.querySelectorAll('.vote[x-building-id]');
        for(let i = 0 ; i < voteButtons.length ; i++) {
            voteButtons[i].addEventListener('click', function(){ send_vote_request(this.getAttribute('x-building-id')); });
        }

        $.ajax.background().no_history().load( document.getElementById('forum-content'), '{{ path('forum_previewer_controller', {fid: town.forum.id, sem: constant('App\\Entity\\Thread::SEMANTIC_CONSTRUCTIONS') })|e('js') }}', false, {}, function() {
            let container = document.querySelector('.forum-preview-container');
            container.scrollTop = container.scrollHeight;
        } );
    </script>
{% endblock %}