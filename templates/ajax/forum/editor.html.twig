{% extends "ajax/ajax_plain.html.twig" %}

{# @var permission \App\Structures\ForumPermissionAccessor #}

{% set preview_name = 'forum-editor-preview' %}
{% set og_editor = type is defined and type == 'global-og-pm' %}
{% if og_editor %}{% set type = 'global-pm' %}{% endif %}
{% if type is defined and type == 'global-pm' %}
    {% set preview_name = 'pm-editor-preview' %}
{% endif %}

{% if type is not defined and forum %}{% set type = 'forum' %}{% endif %}
{% if target_data is not defined %}{% set target_data = [] %}{% endif %}

{% block ajax_base %}
    <div class="{% if type != 'global-pm' %}forum-editor{% else %}pm-editor{% endif %}">
        {% if type != 'global-pm' and type != 'numb' %}
            <div class="forum-editor-header">
                {% if tid is null %}
                    <i>{{ 'Neuer Thread'|trans({},'global') }}</i>
                {% elseif pid is null %}
                    <i>{{ 'Neuer Post'|trans({},'global') }}</i>
                {% else %}
                    <i>{{ 'Bearbeiten'|trans({},'global') }}</i>
                {% endif %}
                <b>
                {{ username }}
                </b>
            </div>
        {% endif %}
        {% if tid is null or (edit_title is defined and edit_title is not null) %}
            <div class="row">
                {% if type != 'global-pm' and type != 'numb' %}
                    <div class="cell rw-3 padded">
                        <label for="{{ type }}-forum-editor-title">{{ 'Titel'|trans({},'global') }}</label>
                    </div>
                    {% if tags is defined and tags is not empty and (current_tag is not defined or current_tag is empty) %}
                        <div class="cell rw-5 rw-sm-9 padded">
                            <input type="text" id="{{ type }}-forum-editor-title" {% if edit_title is defined and edit_title is not null %}value="{{ edit_title }}"{% endif%} />
                        </div>
                        <div class="cell rw-4 rw-sm-12 padded">
                            <span class="small pointer" id="{{ type }}-forum-editor-tag-toggle">{{ 'Tag hinzufügen (optional)'|trans({},'global') }}</span>
                        </div>
                    {% else %}
                        <div class="cell rw-9 padded">
                            <input type="text" id="{{ type }}-forum-editor-title" {% if edit_title is defined and edit_title is not null %}value="{{ edit_title }}"{% endif%} />
                        </div>
                    {% endif %}

                {% endif %}
                {% if type == "changelog" or type == "announcement" %}
                    {% if type == "changelog" %}
                        <div class="cell rw-3 padded">
                            <label for="{{ type }}-forum-editor-version">{{ 'Version'|trans({},'global') }}</label>
                        </div>
                        <div class="cell rw-9 padded">
                            <input type="text" id="{{ type }}-forum-editor-version" />
                        </div>
                    {% endif %}
                    <div class="cell rw-3 padded">
                        <label for="{{ type }}-forum-editor-lang">{{ 'Sprache'|trans({},'global') }}</label>
                    </div>
                    <div class="cell rw-9 padded">
                        <select id="{{ type }}-forum-editor-lang"></select>
                    </div>
                {% endif %}
            </div>
        {% endif %}
        {% if tags is defined and tags is not empty %}
            <div class="row {% if current_tag is not defined or current_tag is empty %}hidden{% endif %}" id="{{ type }}-forum-editor-tag-row">
                {% if type != 'global-pm' and type != 'numb' %}
                    <div class="cell rw-3 padded">
                        <label for="{{ type }}-forum-editor-tag">{{ 'Tag'|trans({},'global') }}</label>
                    </div>
                    <div class="cell rw-9 padded">
                        <select id="{{ type }}-forum-editor-tag">
                            <option value="-none-"></option>
                            {% for tag in tags %}
                                <option {% if current_tag is defined and current_tag == tag%}selected{% endif%} value="{{ tag.name }}">{{ tag.label|trans({},'global') }}</option>
                            {% endfor %}
                        </select>
                    </div>
                {% endif %}
                {% if type == "changelog" or type == "announcement" %}
                    {% if type == "changelog" %}
                        <div class="cell rw-4 padded">
                            <label for="{{ type }}-forum-editor-version">{{ 'Version'|trans({},'global') }}</label>
                        </div>
                        <div class="cell rw-8 padded">
                            <input type="text" id="{{ type }}-forum-editor-version" />
                        </div>
                    {% endif %}
                    <div class="cell rw-4 padded">
                        <label for="{{ type }}-forum-editor-lang">{{ 'Sprache'|trans({},'global') }}</label>
                    </div>
                    <div class="cell rw-8 padded">
                        <select id="{{ type }}-forum-editor-lang"></select>
                    </div>
                {% endif %}
            </div>
        {% endif %}
        <div class="row classic-editor">
            <div class="padded cell rw-12">
                {% if type != 'global-pm' %}
                    <label class="small pointer" id="{{ preview_name }}_toggle">{{ 'Vorschau'|trans({},'global') }}</label>
                    <div translate="no" id="{{ preview_name }}"></div>
                    <br />
                {% endif %}
                <label for="{{ type }}-forum-editor-text">{{ 'Deine Nachricht'|trans({},'global') }}</label>
                <a class="float-right" x-non-extended id="{{ type }}-forum-editor-extend" href="#">{{ 'Zum erweiterten Editor wechseln'|trans({},'global') }}</a>
                <div x-extended class="forum-button-bar">
                    <div x-forum-action="edit" x-text-wrap-node="b" x-control-shortcut="b" class="forum-button"><i class="fa fa-bold"></i><span class="forum-button-tooltip">{{ 'Fett'|trans({},'global') }}</span></div>
                    <div x-forum-action="edit" x-text-wrap-node="i" x-control-shortcut="i" class="forum-button"><i class="fa fa-italic"></i><span class="forum-button-tooltip">{{ 'Kursiv'|trans({},'global') }}</span></div>
                    <div x-forum-action="edit" x-text-wrap-node="u" x-control-shortcut="u" class="forum-button"><i class="fa fa-underline"></i><span class="forum-button-tooltip">{{ 'Unterstreichen'|trans({},'global') }}</span></div>
                    <div x-forum-action="edit" x-text-wrap-node="s" x-control-shortcut="s" class="forum-button"><i class="fa fa-strikethrough"></i><span class="forum-button-tooltip">{{ 'Durchstreichen'|trans({},'global') }}</span></div>
                    <div x-forum-action="edit" x-text-wrap-node="big" x-control-shortcut="+" class="forum-button"><i class="fa fa-expand-alt"></i><span class="forum-button-tooltip">{{ 'Groß'|trans({},'global') }}</span></div>
                    <div x-forum-action="edit" x-text-wrap-node="bad" class="forum-button"><i class="fas fa-tint"></i><span class="forum-button-tooltip">{{ 'Verräter'|trans({},'global') }}</span></div>
                    <div x-forum-action="modal" x-text-modal-node="link" class="forum-button"><i class="fa fa-link"></i><span class="forum-button-tooltip">{{ 'Link einfügen'|trans({},'global') }}</span></div>
                    {% if permission.format_admin() %}
                        <div x-forum-action="modal" x-text-modal-node="image" class="forum-button"><i class="fa fa-image"></i><span class="forum-button-tooltip">{{ 'Bild einfügen'|trans({},'global') }}</span></div>
                        <div x-forum-action="edit" x-text-wrap-node="admannounce" class="forum-button"><i class="fas fa-bullhorn"></i><span class="forum-button-tooltip">{{ 'Admin Ankündigung'|trans({},'global') }}</span></div>
                    {% endif %}
                    {% if permission.format_mod() %}
                        <div x-forum-action="edit" x-text-wrap-node="modannounce" class="forum-button"><i class="fas fa-gavel"></i><span class="forum-button-tooltip">{{ 'Mod Ankündigung'|trans({},'global') }}</span></div>
                    {% endif %}
                    {% if permission.format_oracle() %}
                        <div x-forum-action="edit" x-text-wrap-node="announce" class="forum-button"><i class="fas fa-rss"></i><span class="forum-button-tooltip">{{ 'Orakel Ankündigung'|trans({},'global') }}</span></div>
                    {% endif %}
                    <div x-forum-action="edit" x-text-insert-list-node="*" class="forum-button"><i class="fa fa-star-of-life"></i><span class="forum-button-tooltip">{{ 'Listenpunkt'|trans({},'global') }}</span></div>
                    <div x-forum-action="edit" x-text-insert-list-node="0" class="forum-button"><i class="fa fa-list-ol"></i><span class="forum-button-tooltip">{{ 'Num. Listenpunkt'|trans({},'global') }}</span></div>
                    <div x-forum-action="edit" x-text-wrap-node="quote" class="forum-button"><i class="fa fa-quote-left"></i><span class="forum-button-tooltip">{{ 'Zitat'|trans({},'global') }}</span></div>
                    <div x-forum-action="edit" x-text-wrap-node="spoiler" class="forum-button"><i class="fa fa-eye-slash"></i><span class="forum-button-tooltip">{{ 'Spoiler'|trans({},'global') }}</span></div>
                    <div x-forum-action="edit" x-text-wrap-node="aparte" x-control-shortcut="-" class="forum-button"><i class="fas fa-compress-alt"></i><span class="forum-button-tooltip">{{ 'Vertraulich'|trans({},'global') }}</span></div>
                    {% if app.user|has_unlocked('f_glory') %}
                        <div x-forum-action="edit" x-text-wrap-node="glory" class="forum-button"><i class="fa fa-crown"></i><span class="forum-button-tooltip">{{ 'Ruhm'|trans({},'global') }}</span></div>
                    {% endif %}
                    <div x-forum-action="edit" x-text-wrap-node="code" class="forum-button"><i class="fa fa-code"></i><span class="forum-button-tooltip">{{ 'Code'|trans({},'global') }}</span></div>
                    <div x-forum-action="edit" x-text-insert-node="hr" class="forum-button"><i class="fa fa-grip-lines"></i><span class="forum-button-tooltip">{{ 'Linie'|trans({},'global') }}</span></div>
                    <div x-forum-action="modal" x-text-modal-node="rp" class="forum-button"><i class="fas fa-scroll"></i><span class="forum-button-tooltip">{{ 'Rollenspiel'|trans({},'global') }}</span></div>
                    {% if permission.format_oracle() and type == 'forum' %}
                        <div x-forum-action="modal" x-text-modal-node="poll" class="forum-button"><i class="fa fa-poll"></i><span class="forum-button-tooltip">{{ 'Umfrage einfügen'|trans({},'global') }}</span></div>
                    {% endif %}

                    <div class="forum-toggle" style="max-width: 200px; vertical-align: top;">
                        <div class="row-flex toggle-target">
                            <div class="cell"><div x-forum-action="toggle" x-text-modal-node="@" class="forum-button"><i class="fas fa-user"></i><span class="forum-button-tooltip">{{ 'Spielernamen einfügen'|trans({},'global') }}</span></div></div>
                            <div class="cell hidden">
                                <div id="{{ type }}-editor-add-friend-list-container" class="add-users-list-container">
                                    <div style="margin-right: 5px;" x-forum-action="friendlist" x-text-modal-node="@" class="forum-button" id="{{ type }}-editor-open-friendlist">
                                        <i class="fas fa-address-book"></i><span class="forum-button-tooltip">{{ 'Kontaktliste'|trans({},'global') }}</span>
                                    </div>
                                    <div id="{{ type }}-editor-add-friend-list" class="add-users-list" style="display: none;">
                                        {% embed "ajax/soul/users_list.html.twig" with {
                                            'var': '',
                                            'single_entry': false,
                                            'users': app.user.friends,
                                            'route': ''
                                        } %}{% endembed %}
                                    </div>
                                </div>
                            </div>
                            <div class="cell hidden">
                                <div id="{{ type }}-editor-add-users-list-container" class="add-users-list-container">
                                    <div>
                                        <label><input type="text" id="{{ type }}-editor-add-users-search" class="add-users-search" /></label>
                                        <div class="tooltip help">{{ 'Gib den Pseudo des Bürgers ein.'|trans({},'soul') }}</div>
                                    </div>
                                    <div id="{{ type }}-editor-add-users-list" class="add-users-list"></div>
                                </div>
                            </div>
                            <div class="cell hidden">
                                <div style="margin-left: 5px;" x-forum-action="toggle" x-text-modal-node="@" class="forum-button" id="{{ type }}-editor-add-users-close">
                                    <i class="fas fa-times"></i><span class="forum-button-tooltip">{{ 'Abbrechen'|trans({},'global') }}</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <textarea tabindex="0" id="{{ type }}-forum-editor-text" {% if type == 'global-pm' %}style="min-height: 90px; height: 90px;"{% endif %}></textarea>

            <div class="row">
                <div x-extended class="padded cell rw-12">
                    <ul class="tabs plain no-bottom-margin" x-tab-group="forum-classic-editor-toolbox" x-tab-control>
                        <li class="tab" x-tab-id="emotes"><div class="tab-link"><i class="fa fa-smile"></i></div></li>
                        <li class="tab" x-tab-id="games"><div class="tab-link"><i class="fa fa-dice"></i></div></li>
                        {% if town_controls %}
                            <li class="tab" x-tab-id="rp_player"><div class="tab-link"><i class="fa fa-user"></i></div></li>
                        {% endif %}
                        {% if snippets is not empty %}
                            {% set langs = ['de','en','fr','es'] %}
                            {% for lang in langs %}
                                <li class="tab" x-tab-id="mod-snip-{{ lang }}"><div class="tab-link"><img alt="mod" src="{{ asset('build/images/assets/img/icons/mod.png') }}" /> <span class="small">{{ lang }}</span></div></li>
                            {% endfor %}
                        {% endif %}
                    </ul>
                    {% set emote_lang = (app.request.locale|e('html_attr')|split('_', 2))[0] %}
                    {% if not emote_lang in ['de','en','es','fr'] %}
                        {% set emote_lang = 'en' %}
                    {% endif %}
                    <div class="lightbox" x-tab-group="forum-classic-editor-toolbox" x-tab-id="emotes" x-tab-target>
                        <div class="forum-button-bar">
                            {% for tag,url in emotes %}
                                <div x-forum-action="edit" x-text-emote="{% if url['i18n'] %}{{ asset(url['display']|replace({'{lang}': emote_lang})) }}{% else %}{{ asset(url['display']) }}{% endif %}" x-text-insert-emote="{{ tag }}" class="forum-button-inline"><img alt="{{ tag }}" src="{% if url['i18n'] %}{{ asset(url['display']|replace({'{lang}': emote_lang })) }}{% else %}{{ asset(url['display']) }}{% endif %}"></div>
                            {% endfor %}
                        </div>
                    </div>
                    <div class="lightbox" x-tab-group="forum-classic-editor-toolbox" x-tab-id="games" x-tab-target>
                        <div class="forum-button-bar">
                            <div x-forum-action="edit" x-text-insert-node="d4" class="forum-button-inline"><img alt="" src="{{ asset('build/images/forum/dice4.png') }}"></div>
                            <div x-forum-action="edit" x-text-insert-node="d6" class="forum-button-inline"><img alt="" src="{{ asset('build/images/forum/dice6.png') }}"></div>
                            <div x-forum-action="edit" x-text-insert-node="d8" class="forum-button-inline"><img alt="" src="{{ asset('build/images/forum/dice8.png') }}"></div>
                            <div x-forum-action="edit" x-text-insert-node="d10" class="forum-button-inline"><img alt="" src="{{ asset('build/images/forum/dice10.png') }}"></div>
                            <div x-forum-action="edit" x-text-insert-node="d12" class="forum-button-inline"><img alt="" src="{{ asset('build/images/forum/dice12.png') }}"></div>
                            <div x-forum-action="edit" x-text-insert-node="d20" class="forum-button-inline"><img alt="" src="{{ asset('build/images/forum/dice20.png') }}"></div>
                            <div x-forum-action="edit" x-text-insert-node="d100" class="forum-button-inline"><img alt="" src="{{ asset('build/images/forum/dice100.png') }}"></div>
                            <div x-forum-action="edit" x-text-insert-node="{{ 'letter'|trans({}, 'forum') }}" class="forum-button-inline"><img alt="" src="{{ asset('build/images/forum/lta.png') }}"></div>
                            <div x-forum-action="edit" x-text-insert-node="{{ 'consonant'|trans({}, 'forum') }}" class="forum-button-inline"><img alt="" src="{{ asset('build/images/forum/ltc.png') }}"></div>
                            <div x-forum-action="edit" x-text-insert-node="{{ 'vowel'|trans({}, 'forum') }}" class="forum-button-inline"><img alt="" src="{{ asset('build/images/forum/ltv.png') }}"></div>
                            <div x-forum-action="edit" x-text-insert-node="{{ 'rps'|trans({}, 'forum') }}" class="forum-button-inline"><img alt="" src="{{ asset('build/images/forum/rps.png') }}"></div>
                            <div x-forum-action="edit" x-text-insert-node="{{ 'coin'|trans({}, 'forum') }}" class="forum-button-inline"><img alt="" src="{{ asset('build/images/forum/coin.png') }}"></div>
                            <div x-forum-action="edit" x-text-insert-node="{{ 'card'|trans({}, 'forum') }}" class="forum-button-inline"><img alt="" src="{{ asset('build/images/forum/card.png') }}"></div>
                        </div>
                    </div>
                    {% if town_controls %}
                        <div class="lightbox" x-tab-group="forum-classic-editor-toolbox" x-tab-id="rp_player" x-tab-target>
                            <div class="row">
                                <div class="cell rw-11 rw-lg-10 rw-sm-8">
                                    <div class="forum-button-bar">
                                        <div x-forum-action="edit" x-text-insert-node="{{ 'rnduser'|trans({}, 'forum') }},any" class="forum-button-inline"><img alt="" src="{{ asset('build/images/icons/small_human.gif') }}"></div>
                                        <div x-forum-action="edit" x-text-insert-node="{{ 'rnduser'|trans({}, 'forum') }},hero" class="forum-button-inline"><img alt="" src="{{ asset('build/images/professions/hero.gif') }}"></div>
                                        <div x-forum-action="edit" x-text-insert-node="{{ 'rnduser'|trans({}, 'forum') }},dead" class="forum-button-inline"><img alt="" src="{{ asset('build/images/professions/death.gif') }}"></div>
                                        <div x-forum-action="edit" x-text-insert-node="{{ 'rnduser'|trans({}, 'forum') }},shunned" class="forum-button-inline"><img alt="" src="{{ asset('build/images/icons/banished.gif') }}"></div>
                                        <div x-forum-action="edit" x-text-insert-node="{{ 'rnduser'|trans({}, 'forum') }},basic" class="forum-button-inline"><img alt="" src="{{ asset('build/images/professions/basic.gif') }}"></div>
                                        <div x-forum-action="edit" x-text-insert-node="{{ 'rnduser'|trans({}, 'forum') }},hunter" class="forum-button-inline"><img alt="" src="{{ asset('build/images/professions/vest.gif') }}"></div>
                                        <div x-forum-action="edit" x-text-insert-node="{{ 'rnduser'|trans({}, 'forum') }},collec" class="forum-button-inline"><img alt="" src="{{ asset('build/images/professions/dig.gif') }}"></div>
                                        <div x-forum-action="edit" x-text-insert-node="{{ 'rnduser'|trans({}, 'forum') }},guardian" class="forum-button-inline"><img alt="" src="{{ asset('build/images/professions/shield.gif') }}"></div>
                                        <div x-forum-action="edit" x-text-insert-node="{{ 'rnduser'|trans({}, 'forum') }},survivalist" class="forum-button-inline"><img alt="" src="{{ asset('build/images/professions/book.gif') }}"></div>
                                        <div x-forum-action="edit" x-text-insert-node="{{ 'rnduser'|trans({}, 'forum') }},tamer" class="forum-button-inline"><img alt="" src="{{ asset('build/images/professions/tamer.gif') }}"></div>
                                        <div x-forum-action="edit" x-text-insert-node="{{ 'rnduser'|trans({}, 'forum') }},tech" class="forum-button-inline"><img alt="" src="{{ asset('build/images/professions/tech.gif') }}"></div>
                                        <div x-forum-action="edit" x-text-insert-node="{{ 'rnduser'|trans({}, 'forum') }},shaman" class="forum-button-inline"><img alt="" src="{{ asset('build/images/professions/shaman.gif') }}"></div>
                                        <div x-forum-action="edit" x-text-insert-node="{{ 'rnduser'|trans({}, 'forum') }},none" class="forum-button-inline"><img alt="" src="{{ asset('build/images/professions/looser.gif') }}"></div>
                                    </div>
                                </div>
                                <div class="cell rw-1 rw-lg-2 rw-sm-4">
                                    <a class="help-button">{{ 'Hilfe'|trans({},'global') }}
                                        <div class="tooltip help">
                                            <h1>{{ 'Zufälliger Bürger'|trans({},'game') }}</h1>
                                            <em>
                                                {% trans from 'game' %}
                                                    Hiermit kannst du den Namen eines zufälligen Bürgers in deinen Post anfügen.
                                                    Bei Bedarf kannst du die Auswahl auf bestimmte Berufe, Helden oder bereits gestorbene Bürger eingrenzen.
                                                {% endtrans %}
                                            </em>
                                            <em>
                                                {% trans from 'game' %}
                                                Wenn zu den gleichen zufällig gewählten Bürger mehrfach in deinem Text verwenden willst, kannst du ihm eine Nummer zuweisen, beispielsweise:
                                                {% endtrans %}<code>{rnduser,tamer,1}</code>
                                            </em>

                                        </div>

                                    </a>
                                </div>
                            </div>
                        </div>
                    {% endif %}
                    {% if snippets is not empty %}
                        {% for lang in langs %}
                            <div class="lightbox" x-tab-group="forum-classic-editor-toolbox" x-tab-id="mod-snip-{{ lang }}" x-tab-target>
                                {% for snippet in snippets %}
                                    {# @var snippet \App\Entity\ForumModerationSnippet #}
                                    {% if snippet.lang == lang %}
                                        <div class="row">
                                            {% set current_snippet = lang == app.user.language ? ('%%' ~ snippet.short) : ('%' ~ lang ~ '%' ~ snippet.short) %}
                                            <div class="cell padded rw-3"><span class="small" style="color: white">
                                                    <strong class="pointer" x-forum-action="edit" x-text-insert-raw="{{ current_snippet }}">{{ current_snippet }}</strong>
                                                </span></div>
                                            <div class="cell padded rw-9"><span class="small pointer" x-forum-action="edit" x-text-insert-raw="{{ current_snippet }}" style="display:block; font-size: 0.8em;">{{ snippet.text }}</span></div>
                                        </div>
                                    {% endif %}
                                {% endfor %}
                            </div>
                        {% endfor %}
                    {% endif %}
                </div>
            </div>
        </div>
        <div class="row">
            <div class="padded cell rw-12 right">
                {% if forum and (permission.alt_post_mode()) and pid is null %}
                    <div id="crowpost" class="forum-checkbox">
                        <div>
                            <input class="forum-checkbox" type="radio" id="radio-user" name="post-type" value="USER" x-display-as="{{ app.user.name }}" {% if app.user.postAsDefault != "DEV" %}checked{% endif %}>
                            {% if permission.post_as_animacteur() %}
                                <input class="forum-checkbox" type="radio" id="radio-anim" name="post-type" value="ANIM" x-display-as="{{ 'Animateur'|trans({},'admin') }}">
                            {% endif %}
                            {% if permission.post_as_crow() %}
                                <input class="forum-checkbox" type="radio" id="radio-crow" name="post-type" value="CROW" x-display-as="{{ 'Der Rabe'|trans({},'global') }}">
                            {% endif %}
                            {% if permission.post_as_dev() %}
                                <input class="forum-checkbox" type="radio" id="radio-dev" name="post-type" value="DEV" x-display-as="{{ 'Entwickler'|trans({},'global') }}" {% if app.user.postAsDefault == "DEV" %}checked{% endif %}>
                            {% endif %}
                        </div>
                        <span id="crow_answer_content">{% if not permission.post_as_dev() or app.user.postAsDefault != "DEV" %}{{ app.user.name }}{% else %}{{ 'Dev'|trans({},'global') }}{% endif %}</span>
                    </div>
                {% endif %}
                {% if type != 'numb' %}
                    <div x-forum-action="send" class="forum-button" tabindex="0">{{ 'Absenden'|trans({},'global') }}</div>
                {% endif %}
            </div>
        </div>
    </div>
{% endblock %}
{% block js %}
    <script>
        (function() {

            {% if type == 'global-pm' or type == 'numb' %}
                if ($.client.config.advancedPMEditor.get()) {
                    $.html.forEach('#{{ type }}-forum-editor *[x-extended]', elem => elem.classList.remove('hidden'));
                    $.html.forEach('#{{ type }}-forum-editor *[x-non-extended]', elem => elem.classList.add('hidden'));
                } else {
                    $.html.forEach('#{{ type }}-forum-editor *[x-extended]', elem => elem.classList.add('hidden'));
                    $.html.forEach('#{{ type }}-forum-editor *[x-non-extended]', elem => elem.classList.remove('hidden'));
                }
            {% else %}
                $.html.forEach('#{{ type }}-forum-editor *[x-extended]', elem => elem.classList.remove('hidden') );
                $.html.forEach('#{{ type }}-forum-editor *[x-non-extended]', elem => elem.classList.add('hidden') );
            {% endif %}

            $.html.addEventListenerAll('#{{ type }}-forum-editor-extend', 'click', function(e) {
                e.preventDefault();
                $.html.forEach('#{{ type }}-forum-editor *[x-extended]', elem => elem.classList.remove('hidden') );
                $.html.forEach('#{{ type }}-forum-editor *[x-non-extended]', elem => elem.classList.add('hidden') );
            });

            $.html.addEventListenerAll('#{{ type }}-forum-editor-tag-toggle', 'click', () => {
                $.html.forEach('#{{ type }}-forum-editor-tag-toggle', elem => elem.classList.add('hidden') );
                $.html.forEach('#{{ type }}-forum-editor-tag-row', elem => elem.classList.remove('hidden') );
            });

            let node_transfer_source = document.getElementById('{{ type }}-forum-editor-text');
            const get_preview = function() { return document.getElementById('{{ preview_name|raw }}'); }

            const transfer_to_preview = function() {

                {% if snippets is not empty %}
                {% for snippet in snippets %}
                {# @var snippet \App\Entity\ForumModerationSnippet #}
                node_transfer_source.value = node_transfer_source.value.replace('%{{ snippet.lang|e('js') }}%{{ snippet.short|e('js') }}','{{ snippet.text|e('js') }}');
                {% if snippet.lang == app.user.language %}
                node_transfer_source.value = node_transfer_source.value.replace('%%{{ snippet.short|e('js') }}','{{ snippet.text|e('js') }}');
                {% endif %}
                {% endfor %}
                {% endif %}

                $.html.twinoParser.AjaxUrl = "{{path('user_exists') }}";
                $.html.twinoParser.textEditor = "{{ preview_name }}";

                $.html.twinoParser.parseTo( node_transfer_source.value, get_preview(), function(s) {
                    switch (s) {
                        case ':)': s = ':smile:';    break;
                        case ':d': s = ':lol:';      break;
                        case ':(': s = ':sad:';      break;
                        case ';)': s = ':blink:';    break;
                        case ':o': s = ':surprise:'; break;
                    }
                    if (s.search('"') > -1) return [ null,s ];
                    let n = document.querySelector('[x-text-emote][x-text-insert-emote="' + s + '"]');
                    return [n ? n.getAttribute('x-text-emote') : null, s];
                }, {autoLinks: $.client.config.autoParseLinks.get()} );
            }

            node_transfer_source.addEventListener('input', () => {
                if ($.client.config.usePostBackup.get())
                    $.client.config.scopedEditorCache.set(['{{ type ~ (town_controls ? 'TC' : '')|e('js') }}',node_transfer_source.value]);
                transfer_to_preview();
            });
            node_transfer_source.addEventListener('keydown', e => {
                if (e.ctrlKey || e.metaKey) {
                    const button = document.querySelector('[x-forum-action="edit"][x-control-shortcut="' + e.key.toLowerCase() + '"]');
                    if (button) {
                        button.dispatchEvent( new Event('click', { bubbles: false, cancelable: true }) );
                        e.preventDefault();
                    }
                }
            });

            let closeModal = function() {
                document.getElementById('modal-backdrop').classList.remove('active');
                let form = document.getElementById('modal-form');
                form.parentNode.removeChild(form);
            };


            let cache = $.client.config.editorCache.get();
            if (!cache) {
                const s_cache = $.client.config.scopedEditorCache.get();
                if (s_cache[0] === '{{ (type ~ (town_controls ? 'TC' : ''))|e('js') }}') cache = s_cache[1];
            }

            if ( cache && $.client.config.usePostBackup.get() ) {
                node_transfer_source.value = cache;
                transfer_to_preview();
            }
            $.html.addEventListenerAll( '[x-forum-action="toggle"]', 'click', function (e,elem) {
                let parent = elem.parentElement;
                while (parent && !parent.classList.contains('toggle-target'))
                    parent = parent.parentElement;

                if (!parent) return;

                for (let i = 0; i < parent.children.length; i++)
                    if (parent.children[i].classList.contains('hidden'))
                        parent.children[i].classList.remove('hidden');
                    else parent.children[i].classList.add('hidden');

                const input = parent.querySelector('input[type="text"]');
                if (input && input.clientWidth > 0) input.focus();
            });
            $.html.addEventListenerAll( '[x-forum-action="modal"]', 'click', function (e,elem) {
                e.preventDefault();
                e.stopPropagation();

                const tag = elem.getAttribute('x-text-modal-node');
                const before = node_transfer_source.value.substr( 0, node_transfer_source.selectionStart );
                const selected = node_transfer_source.value.substr( node_transfer_source.selectionStart,  node_transfer_source.selectionEnd - node_transfer_source.selectionStart );
                const after = node_transfer_source.value.substr( node_transfer_source.selectionEnd );
                let title;

                let form = $.html.createElement('<div class="modal-form" id="modal-form" />');
                form.append($.html.createElement( '<input id="form-type" type="hidden" value="' + tag + '" />' ));

                let textInput, urlInput;

                if (tag === 'link') {
                    title = "{{ 'Link einfügen'|trans({},'global') }}";

                    let label = $.html.createElement('<label for="link-text">{{ 'Link-Text'|trans({},'global')|e('js') }}</label>');
                    let input = textInput = $.html.createElement('<input type="text" id="link-text" />');
                    input.value = selected;
                    form.append(label,input);

                    label = $.html.createElement('<label for="link-link">{{ 'Link-URL'|trans({},'global')|e('js') }}</label>');
                    input = urlInput = $.html.createElement('<input type="url" id="link-link" />');
                    form.append(label,input);
                } else if (tag === 'image') {
                    title = "{{ 'Bild einfügen'|trans({},'global') }}";

                    let label = $.html.createElement('<label for="image-text">{{ 'Bildtitel'|trans({},'global')|e('js') }}</label>');
                    let input = textInput = $.html.createElement('<input type="text" id="image-text" />');
                    input.value = selected;
                    form.append(label,input);

                    label = $.html.createElement('<label for="image-link">{{ 'Bild-URL'|trans({},'global')|e('js') }}</label>');
                    input = urlInput = $.html.createElement('<input type="url" id="image-link" />');
                    form.append(label,input);
                } else if (tag === 'rp') {
                    title = "{{ 'Wer?'|trans({},'global') }}";

                    let label = $.html.createElement('<label for="rp-text">{{ 'Namen eingeben'|trans({},'global')|e('js') }}</label>');
                    let input = textInput = $.html.createElement('<input type="text" id="rp-text" />');
                    form.append(label,input);
                } else if (tag === 'poll') {
                    title = "{{ 'Umfrage einfügen'|trans({},'global') }}";

                    form.append($.html.createElement('<div class="note note-critical" />', '{{ 'Kontrolliere deine Eingaben! Umfragen können nach dem Absenden des Posts nicht mehr bearbeitet werden!'|trans({},'global')|e('js') }}'))

                    let label = $.html.createElement('<label for="poll-q"><img alt="[I]" src="{{ asset('build/images/icons/small_help.gif') }}" /> {{ 'Fragetext eingeben (optional)'|trans({},'global')|e('js') }}</label>');
                    let input = textInput = $.html.createElement('<input type="text" id="poll-q" />');
                    input.value = selected;
                    form.append(label,input);

                    let row = $.html.createElement('<div/>');

                    let num_answer = 0, num_desc = 0;
                    let add_answer_btn = $.html.createElement('<button class="small inline">{{ 'Antwort hinzufügen'|trans({},'global')|e('js') }}</label>');
                    add_answer_btn.addEventListener('click',() => {
                        let addition = $.html.createElement('<label><img alt="[I]" src="{{ asset('build/images/forum/selected.png') }}" /> ' + '{{ 'Antwort'|trans({},'global')|e('js') }} ' + (++num_answer) + (num_answer > 1 ? ' {{ '(optional)'|trans({},'global')|e('js') }}' : '') + '<input type="text" x-poll-model="answer" /></label>');
                        form.insertBefore(addition,row);
                    });
                    let add_desc_btn   = $.html.createElement('<button class="small inline">{{ 'Info-Text hinzufügen'|trans({},'global')|e('js') }}</label>');
                    add_desc_btn.addEventListener('click',() => {
                        let addition = $.html.createElement('<label><img alt="[I]" src="{{ asset('build/images/icons/small_talk.gif') }}" /> ' + '{{ 'Info-Text'|trans({},'global')|e('js') }} ' + (++num_desc) + ' {{ '(optional)'|trans({},'global')|e('js') }}' + '<input type="text" x-poll-model="info" /></label>');
                        form.insertBefore(addition,row);
                    });

                    row.append(add_answer_btn,document.createTextNode(' '),add_desc_btn);
                    form.append(row);
                }

                const processModal = function(e,elem) {

                    if (tag === 'link' || tag === 'image') {
                        let tagText, tagUrl;

                        let doc = new DOMParser().parseFromString(textInput.value ? textInput.value : urlInput.value, 'text/html');
                        tagText = doc.body.textContent || "";

                        tagUrl = decodeURI(urlInput.value ? urlInput.value : textInput.value);
                        if (!/[a-zA-Z]+:\/\//.test(tagUrl)) tagUrl = 'https://' + tagUrl;

                        const components = /([a-zA-Z]+:\/\/)([^/?#\[\]@:$&'()*+,;=\t\r\n]{2,256})\.([^/?#\[\]@:$&'()*+,;=\t\r\n]{2,})([/?#\[\]@:$&'()*+,;=])?(.*)/g.exec(tagUrl);
                        if (!components) {
                            // Apparently not an Url.
                            // TODO: Add error message to Url field.
                            textInput.classList.add('error');
                            urlInput.classList.add('error');
                        }
                        else {
                            tagUrl = components[1] + $.vendor.punycode.toASCII(components[2] + '.' + components[3]) + ( components[4] ? encodeURI(components[4] + components[5]) : '' );

                            $.html.triggerPopupPop(elem);
                            textInput.classList.remove('error');
                            urlInput.classList.remove('error');

                            node_transfer_source.value =
                                before + '[' + tag + '=' + tagUrl + ']' + tagText + '[/' + tag + ']' + after;

                            node_transfer_source.setSelectionRange(
                                before.length + tag.length + 3 + tagUrl.length,
                                before.length + tag.length + 3 + tagUrl.length + tagText.length);
                            node_transfer_source.focus()
                            transfer_to_preview();
                        }
                    } else if (tag === 'rp') {
                        let tagText;

                        let doc = new DOMParser().parseFromString(textInput.value ? textInput.value : '', 'text/html');
                        tagText = doc.body.textContent || "";

                        $.html.triggerPopupPop(elem);

                        node_transfer_source.value =
                            before + '[' + tag + (tagText ? ('=' + tagText) : '') + ']' + selected + '[/' + tag + ']' + after;

                        node_transfer_source.setSelectionRange(
                            before.length + tag.length + 2 + (tagText ? tagText.length + 1 : 0),
                            before.length + tag.length + 2 + (tagText ? tagText.length + 1 : 0) + selected.length);
                        node_transfer_source.focus()
                        transfer_to_preview();
                    } else if (tag === 'poll') {

                        let answers = form.querySelectorAll('[x-poll-model="answer"]');
                        let answer_count = 0;

                        for (let i = 0; i < answers.length; i++)
                            if (answers[i].value) answer_count++;

                        if (answer_count <= 0) {
                            alert('{{ 'Du musst mindestens eine Antwort eingeben.'|trans({},'global') }}');
                            return;
                        }

                        let final = "[poll]\n";
                        if (textInput.value) final += ('[q]' + textInput.value.replace('[/q]','') + "[/q]\n")
                        let entries = form.querySelectorAll('[x-poll-model]');
                        for (let i = 0; i < entries.length; i++)
                            if (entries[i].value) {

                                if (entries[i].getAttribute('x-poll-model') === 'answer')
                                    final += '[*]' + entries[i].value + "\n";
                                else if (entries[i].getAttribute('x-poll-model') === 'info')
                                    final += '[desc]' + entries[i].value.replace('[/desc]','') + "[/desc]\n";
                            }
                        final += '[/poll]';

                        $.html.triggerPopupPop(elem);

                        node_transfer_source.value =
                            before + final + after;

                        node_transfer_source.setSelectionRange(
                            before.length + final.length,
                            before.length + final.length
                        );
                        node_transfer_source.focus()
                        transfer_to_preview();
                    }
                }

                textInput.addEventListener('keypress', function(e) {
                    if (e.key === "Enter") processModal(e,textInput);
                });
                if (urlInput) urlInput.addEventListener('keypress', function(e) {
                    if (e.key === "Enter") processModal(e,urlInput);
                });

                $.html.popup(title, form, 'tag'+tag, [
                    [ '{{ 'Einfügen'|trans({},'global')|e('js') }}',  [ ['click', processModal] ] ],
                    [ '{{ 'Abbrechen'|trans({},'global')|e('js') }}', [ ['click', (e, elem) => $.html.triggerPopupPop(elem)] ] ]
                ] );

                if (!textInput.value || !urlInput) textInput.focus();
                else urlInput.focus();
            } );

            $.html.addEventListenerAll( '[x-forum-action="edit"][x-text-wrap-node]', 'click', function (e,elem) {
                e.preventDefault();
                e.stopPropagation();

                let tag = elem.getAttribute('x-text-wrap-node');
                let content = node_transfer_source.value;
                let s_start = node_transfer_source.selectionStart;
                let s_end = node_transfer_source.selectionEnd;

                node_transfer_source.value =
                    content.substr( 0, s_start ) +
                    '[' + tag + ']' +
                    content.substr( s_start, s_end - s_start ) +
                    '[/' + tag + ']' +
                    content.substr( s_end );

                node_transfer_source.setSelectionRange( s_start + tag.length + 2, s_end + tag.length + 2 );
                node_transfer_source.focus();
                transfer_to_preview();
            } );
            $.html.addEventListenerAll( '[x-forum-action="edit"][x-text-insert-node]', 'click', function (e,elem) {
                e.preventDefault();
                e.stopPropagation();

                let tag = elem.getAttribute('x-text-insert-node');
                let content = node_transfer_source.value;
                let s_start = node_transfer_source.selectionStart;
                let s_end = node_transfer_source.selectionEnd;

                node_transfer_source.value =
                    content.substr( 0, s_start ) +
                    '{' + tag + '}' +
                    content.substr( s_start );

                node_transfer_source.setSelectionRange( s_start + tag.length + 2, s_end + tag.length + 2 );
                node_transfer_source.focus();
                transfer_to_preview();
            } );
            $.html.addEventListenerAll( '[x-forum-action="edit"][x-text-insert-list-node]', 'click', function (e,elem) {
                e.preventDefault();
                e.stopPropagation();

                let tag = elem.getAttribute('x-text-insert-list-node');
                let content = node_transfer_source.value;
                let s_start = node_transfer_source.selectionStart;
                let s_end = node_transfer_source.selectionEnd;

                let selection = content.substr( s_start, s_end - s_start );
                
                // Replace subsequent selected line returns to form a full list
                selection = selection.replaceAll('\n',`\n[${tag}]`);   

                let result = `\n[${tag}]${selection}`;


                node_transfer_source.value =
                    content.substr( 0, s_start ) +
                    result +
                    content.substr( s_end );

                // s_start + 1 -> ignore the added '\n' at the start
                node_transfer_source.setSelectionRange( s_start + 1, s_start + result.length );
                node_transfer_source.focus()
                transfer_to_preview();
            } );
            $.html.addEventListenerAll( '[x-forum-action="edit"][x-text-insert-raw]', 'click', function (e,elem) {
                e.preventDefault();
                e.stopPropagation();

                let tag = elem.getAttribute('x-text-insert-raw');
                let content = node_transfer_source.value;
                let s_start = node_transfer_source.selectionStart;
                let s_end = node_transfer_source.selectionEnd;

                node_transfer_source.value =
                    content.substr( 0, s_start ) + tag + content.substr( s_start );

                node_transfer_source.setSelectionRange( s_start + tag.length, s_end + tag.length );
                node_transfer_source.focus()
                transfer_to_preview();
            } );
            $.html.addEventListenerAll( '[x-forum-action="edit"][x-text-insert-emote][x-text-emote]', 'click', function (e,elem) {
                e.preventDefault();
                e.stopPropagation();

                let tag = elem.getAttribute('x-text-insert-emote');
                let content = node_transfer_source.value;
                let s_start = node_transfer_source.selectionStart;
                let s_end = node_transfer_source.selectionEnd;

                node_transfer_source.value = content.substr( 0, s_start ) + tag + content.substr( s_start );

                node_transfer_source.setSelectionRange( s_start + tag.length, s_end + tag.length );
                node_transfer_source.focus()
                transfer_to_preview();
            } );

            // Post as crow toggle
            {% if permission.alt_post_mode() and forum and not pid %}
                function changeHandler(){
                    let current_option = document.querySelector("input[name=post-type]:checked");
                    if (current_option === null) current_option = document.querySelector("input[name=post-type]").parentElement.firstElementChild;
                    let next_option = current_option.nextElementSibling ? current_option.nextElementSibling : current_option.parentElement.firstElementChild;

                    if (next_option === current_option) return;
                    current_option.checked = false;
                    next_option.checked = true;
                    document.getElementById('crow_answer_content').innerText = next_option.getAttribute('x-display-as') ? next_option.getAttribute('x-display-as') : next_option.value;
                }
                document.getElementById('crowpost').addEventListener('click', changeHandler);
            {% endif %}

            {% if type != 'numb' %}
                let send_buttons = document.querySelectorAll('[x-forum-action=send]');
                for (let i = 0; i < send_buttons.length; i++) {
                    send_buttons[i].addEventListener('click', function() {
                        let target_url, target_payload;
                        {% if forum %}
                        let type = document.querySelector("input[name=post-type]:checked") ? document.querySelector("input[name=post-type]:checked").value : null;
                        {% endif %}

                        // Replace proxies
                        let content_node = document.getElementById('{{ preview_name|raw }}').cloneNode(true);

                        let proxies = content_node.querySelectorAll('[x-foxy-proxy]');
                        for (let j = 0; j < proxies.length; j++) {
                            if (!proxies[j].parentNode) continue;
                            proxies[j].parentNode.insertBefore(document.createTextNode(proxies[j].getAttribute('x-foxy-proxy')), proxies[j]);
                            proxies[j].parentNode.removeChild(proxies[j]);
                        }

                        {% if not forum %}
                            target_url = '{{ target_url is not empty ? path(target_url, target_data) : '' }}';
                            target_payload = {
                                'content': content_node.innerHTML,
                                'type': "{{ type }}",
                            };
                            {% if tid is not null %}
                                target_payload.tid = {{ tid }};
                            {% else %}
                                let title_input = document.getElementById('{{ type }}-forum-editor-title');
                                target_payload.title = title_input ? title_input.value : null;
                                {% if type == 'pm' or type == 'global' %}
                                    const rc = document.getElementById('pmidrecipient');
                                    if (rc) target_payload.recipient = rc.value;
                                    let sent_items = document.querySelectorAll("#sent-items .item[x-item-id]");
                                    if(sent_items.length > 0) {
                                        target_payload.items = [];
                                        for (let i = 0; i < sent_items.length; i++) {
                                            console.log(sent_items[i]);
                                            target_payload.items.push(sent_items[i].attributes['x-item-id'].value);
                                        }
                                    }
                                {% elseif type == "global-pm" %}
                                    {% if not og_editor %}
                                        const pm_list = [];
                                        $.html.forEach('#pm-selected-users>li[x-soul-id]', function(elem) {
                                            pm_list.push( parseInt(elem.getAttribute('x-soul-id')) );
                                        });
                                        target_payload.users = pm_list;
                                        if (document.getElementById('pm-account-select'))
                                            target_payload.sender = document.getElementById('pm-account-select').value;
                                    {% else  %}
                                        let og_id = null, og_con = null;
                                        if ((og_con = document.querySelector('[x-og-resolved]')))
                                            og_id = og_con.getAttribute('x-og-resolved');
                                        target_payload.og = og_id;
                                    {% endif %}
                                {% elseif type == "changelog" %}
                                    target_payload.version = document.getElementById('{{ type }}-forum-editor-version').value;
                                    target_payload.lang = document.getElementById('{{ type }}-forum-editor-lang').value;
                                {% elseif type == "announcement" %}
                                    target_payload.lang = document.getElementById('{{ type }}-forum-editor-lang').value;
                                {% endif %}
                            {% endif %}
                        {% else %}
                            {% if tid is null %}
                                target_url = '{{ path('forum_new_thread_controller', {id: fid}) }}';
                                let tag = null;
                                if (document.getElementById('{{ type }}-forum-editor-tag'))
                                    tag = document.getElementById('{{ type }}-forum-editor-tag').value;
                                target_payload = {
                                    title: document.getElementById('{{ type }}-forum-editor-title').value,
                                    tag: tag,
                                    text: content_node.innerHTML,
                                    type: type
                                };
                            {% elseif (pid is null) %}
                                target_url = '{{ path('forum_new_post_controller', {fid: fid, tid: tid}) }}';
                                target_payload = {
                                    text: content_node.innerHTML,
                                    type: type,
                                };
                            {% else %}
                                target_url = '{{ path('forum_edit_post_controller', {fid: fid, tid: tid, pid: pid}) }}';
                                {% if edit_title is defined %}
                                    let tag_edit = null;
                                    if (document.getElementById('{{ type }}-forum-editor-tag'))
                                        tag_edit = document.getElementById('{{ type }}-forum-editor-tag').value;
                                {% endif %}
                                target_payload = {
                                    {% if edit_title is defined %}
                                        title: document.getElementById('{{ type }}-forum-editor-title') ? document.getElementById('{{ type }}-forum-editor-title').value : null,
                                        tag: tag_edit,
                                    {% endif %}
                                    text: content_node.innerHTML
                                };
                            {% endif %}
                        {% endif %}

                        $.ajax.easySend( target_url, target_payload,
                            function (data) {
                                $.client.config.editorCache.set('');
                                $.client.config.scopedEditorCache.set(['','']);
                                {% if type == 'global-pm' %}
                                    let selected = document.querySelector('.pm-conversation-list>li.selected');
                                    if (selected) selected.click();
                                    else $.ajax.load( document.getElementById('post-office-content'), data.url );
                                {% elseif type == 'announcement' %}
                                    $.ajax.load( null, data.url, true, {}, ()=>$.msg.execute() );
                                {% else %}
                                    $.ajax.load( null, data.url, true );
                                {% endif %}
                            }
                        );
                    });
                    send_buttons[i].addEventListener('keydown', function(event) {
                        if (event.keyCode === 13) {
                            event.preventDefault();
                            send_buttons[i].click();
                        }
                    });
                }
            {% endif %}

            {% if type == "changelog" or type == "announcement" %}
                let lang_selector = document.getElementById('{{ type }}-forum-editor-lang');
                if(lang_selector) {
                    for(let prop in window.c.langs) {
                        let option = document.createElement("option");
                        option.text = window.c.langs[prop];
                        option.value = prop;
                        lang_selector.add(option);
                    }
                }
            {% endif %}

            $.html.addEventListenerAll('#{{ preview_name }}_toggle', 'click', () => {
                let e = document.getElementById('{{ preview_name }}');
                if (e) {
                    if (e.classList.contains('hidden')) e.classList.remove('hidden');
                    else e.classList.add('hidden');
                }
            })

            let typingTimer, doneTypingInterval = 500;
            let searchBox = document.getElementById('{{ type }}-editor-add-users-search');
            const userSearchHandler = function() {
                if (searchBox.value.length >= 3) {
                    $.ajax.background().load(
                        document.getElementById('{{ type }}-editor-add-users-list'),
                        '{{ path('users_fuzzyfind', {url: 'post_add_users'}) }}',
                        false,
                        {'name': searchBox.value},
                        function () {
                            $.html.addEventListenerAll('#{{ type }}-editor-add-users-list>.users-list-entry>div', 'click', function (e, elem) {

                                const before = node_transfer_source.value.substr( 0, node_transfer_source.selectionStart );
                                const selected = node_transfer_source.value.substr( node_transfer_source.selectionStart,  node_transfer_source.selectionEnd - node_transfer_source.selectionStart );
                                const after = node_transfer_source.value.substr( node_transfer_source.selectionEnd );

                                const node = '@' + elem.getAttribute('x-soul-name').replace(/\W+/,'') + ':' + elem.getAttribute('x-soul-id');

                                node_transfer_source.value = before + node + after;
                                node_transfer_source.setSelectionRange( before.length + node.length, before.length + node.length );
                                node_transfer_source.focus();
                                transfer_to_preview();

                                searchBox.value = document.getElementById('{{ type }}-editor-add-users-list').innerHTML = '';
                                document.getElementById('{{ type }}-editor-add-users-close').click();
                            })
                        }
                    );
                }
                else document.getElementById('{{ type }}-editor-add-users-list').innerHTML = '';
            };

            const userSearchHandlerUp = function () {
                clearTimeout(typingTimer);
                typingTimer = setTimeout(userSearchHandler, doneTypingInterval);
            };

            const userSearchHandlerDown = function () {
                clearTimeout(typingTimer);
            };

            if (searchBox) {
                searchBox.addEventListener('keyup', userSearchHandlerUp);
                searchBox.addEventListener('keydown', userSearchHandlerDown);
                searchBox.addEventListener('focus', () => userSearchHandler());
                searchBox.addEventListener('blur', () => setTimeout( () => document.getElementById('{{ type }}-editor-add-users-list').innerHTML = '', 500));
            }

            let friendlistBtn = document.getElementById("{{ type }}-editor-open-friendlist");
            let friendlist = document.getElementById("{{ type }}-editor-add-friend-list");
            if (friendlistBtn) friendlistBtn.addEventListener('click', function(e){
                e.preventDefault();
                e.stopPropagation();
                if(friendlist.style.display === "none") {
                    friendlist.style.display = "";
                } else {
                    friendlist.style.display = "none";
                }
            })
            $.html.addEventListenerAll('#{{ type }}-editor-add-friend-list>.users-list-entry>div', 'click', function (e, elem) {

                const before = node_transfer_source.value.substr( 0, node_transfer_source.selectionStart );
                const selected = node_transfer_source.value.substr( node_transfer_source.selectionStart,  node_transfer_source.selectionEnd - node_transfer_source.selectionStart );
                const after = node_transfer_source.value.substr( node_transfer_source.selectionEnd );

                const node = '@' + elem.getAttribute('x-soul-name').replace(/\W+/,'') + ':' + elem.getAttribute('x-soul-id') + " ";

                node_transfer_source.value = before + node + after;
                node_transfer_source.setSelectionRange( node_transfer_source.value.length, node_transfer_source.value.length );
                node_transfer_source.focus();
                transfer_to_preview();

                document.getElementById('{{ type }}-editor-add-users-close').click();
                friendlist.style.display = "none";
            })

            $.html.forEach( '[x-control-shortcut]', elem => {
                const tooltip = elem.querySelector('.forum-button-tooltip');
                const modifierKey = navigator.platform.indexOf("Mac") === 0 ? '⌘' : '{{ 'STRG'|trans({},'global')|e('js') }}';
                if (tooltip) tooltip.innerHTML = '<div class="center">' + tooltip.innerText + '</div><div class="keyboard"><kbd>' + modifierKey + '</kbd> + <kbd>' + elem.getAttribute('x-control-shortcut').toUpperCase() + '</kbd></div>';
            } )
        })();
    </script>
{% endblock %}