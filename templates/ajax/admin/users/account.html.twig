{% extends "ajax/ajax.html.twig" %}
{% block title %}{% trans from 'admin' %}Account{% endtrans %}{%  endblock %}
{% block ajax %}
    {# @var user \App\Entity\User#}

    {% set has_main_soul = false %}
    {% for soul in user.twinoidImports %}
        {% if soul.main %}
            {% set has_main_soul = true %}
        {% endif %}
    {% endfor %}

    <div class="row soul">
        <div class="cell padded header rw-12">
            {% embed "ajax/admin/users/tabs.html.twig" %}{% endembed %}

            {% if user.deleteAfter is not null %}
                <div class="row">
                    <div class="cell padded rw-12">
                        <b style="color: red">{{ 'Account zur Löschung vorgemerkt!'|trans({}, 'admin') }}</b>
                    </div>
                </div>
            {% endif %}

            <div class="row">
                <div class="cell rw-12 padded">
                    <h5 style="position: relative">{{ 'Aktionen'|trans({}, 'admin') }}</h5>
                    <div class="row">
                        <div class="cell padded rw-3 rw-sm-12 note note-lightest">
                            <label for="administer-user">{{ 'User administrieren'|trans({}, 'admin') }}</label>
                        </div>
                        <div class="cell padded rw-9 rw-sm-12">
                            {% if (user_handler.admin_canAdminister(app.user,user)) %}
                                <select id="administer-user" style="width: 30rem;">
                                    <option value="">-</option>
                                    {% if user.eternalID is null %}
                                        <optgroup label="{{ 'Validierung'|trans({},'admin') }}">
                                            {% if is_granted("ROLE_ADMIN") %}
                                                {% if user.validated %}
                                                    <option value="{{ url('admin_users_account_manage', {action: 'invalidate', id: user.id}) }}">{{ 'Erneute Validierung erzwingen'|trans({},'admin') }}</option>
                                                {% else %}
                                                    <option value="{{ url('admin_users_account_manage', {action: 'validate', id: user.id}) }}">{{ 'Manuell validieren'|trans({},'admin') }}</option>
                                                {% endif %}
                                            {% endif %}
                                            {% if not is_granted("ROLE_ADMIN") or validations|length > 0 %}
                                                <option value="{{ url('admin_users_account_manage', {action: 'refresh_tokens', id: user.id}) }}">{{ 'Offene Token erneut ankündigen'|trans({},'admin') }}</option>
                                                <option value="{{ url('admin_users_account_manage', {action: 'regen_tokens', id: user.id}) }}">{{ 'Offene Token regenerieren'|trans({},'admin') }}</option>
                                            {% endif %}
                                        </optgroup>
                                    {% endif %}
                                    <optgroup label="{{ 'Profil'|trans({},'admin') }}">
                                        {% if is_granted("ROLE_ADMIN") %}
                                            <option value="{{ url('admin_users_account_manage', {action: 'rename', id: user.id}) }}" x-confirm="RENAME" x-query="{{ 'Neuen Namen eingeben.'|trans({},'admin') }}">{{ 'Umbenennen'|trans({},'admin') }}</option>
                                        {% endif %}
                                        <option value="{{ url('admin_users_account_manage', {action: 'rename_pseudo', id: user.id}) }}" x-confirm="RENAME PSEUDO" x-query="{{ 'Neuen Namen eingeben.'|trans({},'admin') }}">{{ 'Anzeigenamen ändern'|trans({},'admin') }}</option>
                                        {% if user.displayName %}
                                            <option value="{{ url('admin_users_account_manage', {action: 'rename_pseudo', id: user.id}) }}" x-confirm="REMOVE PSEUDO">{{ 'Anzeigenamen entfernen'|trans({},'admin') }}</option>
                                        {% endif %}
                                        {% if is_granted("ROLE_ADMIN") %}
                                            {% if user.eternalID is null %}
                                                <option value="{{ url('admin_users_account_manage', {action: 'delete', id: user.id}) }}" x-confirm="DELETE">{{ 'Löschen'|trans({},'admin') }}</option>
                                                <option value="{{ url('admin_users_account_manage', {action: 'change_mail', id: user.id}) }}" x-query="{{ 'E-Mail eingeben.'|trans({},'admin') }}">{{ 'E-Mail ändern'|trans({},'admin') }}</option>
                                            {% endif %}
                                            <option value="{{ url('admin_users_account_manage', {action: 'whitelist', id: user.id}) }}" x-confirm="WHITELIST" x-query="{{ 'Spieler-ID'|trans({},'admin') }}">{{ 'Multi-Account Whitelist-Eintrag hinzufügen'|trans({},'admin') }}</option>
                                        {% endif %}
                                        {% if user.avatar is not null %}
                                            <option value="{{ url('admin_users_account_manage', {action: 'clear_avatar', id: user.id}) }}" x-confirm="CLEAR AVATAR">{{ 'Avatar entfernen'|trans({},'admin') }}</option>
                                        {% endif %}
                                        {% if user_desc %}
                                            <option value="{{ url('admin_users_account_manage', {action: 'clear_desc', id: user.id}) }}" x-confirm="CLEAR DESCRIPTION">{{ 'Profilbeschreibung entfernen'|trans({},'admin') }}</option>
                                        {% endif %}
                                        {% if user.activeTitle or user.activeIcon %}
                                            <option value="{{ url('admin_users_account_manage', {action: 'clear_title', id: user.id}) }}" x-confirm="CLEAR TITLE">{{ 'Titel & Icon entfernen'|trans({},'admin') }}</option>
                                        {% endif %}
                                    </optgroup>
                                    {% if is_granted("ROLE_ADMIN") %}
                                        <optgroup label="{{ 'Sicherheit'|trans({},'admin') }}">
                                            <option value="{{ url('admin_users_account_manage', {action: 'initiate_pw_reset', id: user.id}) }}">{{ 'Passwort-Reset auslösen'|trans({},'admin') }}</option>
                                            <option value="{{ url('admin_users_account_manage', {action: 'enforce_pw_reset', id: user.id}) }}">{{ 'Passwort-Reset erzwingen'|trans({},'admin') }}</option>
                                            {% if user.eternalID is null %}
                                                <option value="{{ url('admin_users_account_manage', {action: 'overwrite_pw', id: user.id}) }}" x-query="{{ 'Neues Passwort eingeben.'|trans({},'admin') }}">{{ 'Neues Passwort setzen'|trans({},'admin') }}</option>
                                            {% endif %}
                                        </optgroup>
                                        <optgroup label="{{ 'Berechtigungen'|trans({},'admin') }}">
                                            {% for role in user_handler.admin_validRoles %}
                                                {% if user_handler.admin_canGrant(app.user,role) and not user_handler.hasRole( user,role ) %}
                                                    <option value="{{ url('admin_users_account_manage', {action: 'grant', id: user.id, param: role}) }}">{{ 'Gewähren: %role%'|trans({'%role%': role},'admin') }}</option>
                                                {% endif %}
                                            {% endfor %}
                                            {% if user.rightsElevation > 0 %}
                                                <option value="{{ url('admin_users_account_manage', {action: 'grant', id: user.id, param: 'NONE'}) }}">{{ 'Berechtigungsstufe zurücksetzen'|trans({},'admin') }}</option>
                                            {% endif %}
                                        </optgroup>
                                        {% if user.twinoidID is not null %}
                                            <optgroup label="{{ 'Twinoid-Integration'|trans({},'admin') }}">
                                                <option value="{{ url('admin_users_account_manage', {action: 'twin_full_reset', id: user.id}) }}">{{ 'Integrationen löschen'|trans({},'admin') }}</option>
                                                {% if has_main_soul %}
                                                    <option value="{{ url('admin_users_account_manage', {action: 'twin_main_reset', id: user.id}) }}">{{ 'Hauptseele zurücksetzen'|trans({},'admin') }}</option>
                                                {% endif %}
                                            </optgroup>
                                        {% endif %}
                                        {% if user.eternalID is not null %}
                                            <optgroup label="{{ 'EternalTwin-Integration'|trans({},'admin') }}">
                                                <option value="{{ url('admin_users_account_manage', {action: 'etwin_reset', id: user.id}) }}" x-query="{{ 'E-Mail eingeben.'|trans({},'admin') }}">{{ 'In lokalen Account umwandeln'|trans({},'admin') }}</option>
                                            </optgroup>
                                        {% endif %}
                                        {% if app.environment == 'dev' %}
                                            <optgroup label="Debug">
                                                <option value="{{ url('admin_users_account_manage', {action: 'dbg_herodays', id: user.id}) }}" x-query="{{ 'Neue Anzahl:'|trans({},'admin') }}">{{ 'Heldentage setzen'|trans({},'admin') }}</option>
                                            </optgroup>
                                        {% endif %}
                                    {% endif %}
                                </select>
                                <div id="execute_button" class="button inline small">{{ 'Ausführen'|trans({},'admin') }}</div>
                            {% else %}
                                <span class="critical">{{ 'Du hast keine Berechtigung, diesen Benutzer zu administrieren!'|trans({},'admin') }}</span>
                            {% endif %}
                        </div>
                    </div>

                    <h5>{{ 'Info'|trans({}, 'admin') }}</h5>
                    <div class="row">
                        <div class="cell padded rw-3 rw-sm-12 note note-lightest">
                            <label>{{ 'Avatar'|trans({}, 'admin') }}</label>
                        </div>
                        <div class="cell padded rw-3 rw-sm-12">
                            {% if user.avatar is not null %}
                                <div class="avatar no-arma">
                                    <img alt="" src="{{ path('app_web_avatar', {'uid': user.id, 'name': user.avatar.filename, 'ext': user.avatar.format}) }}">
                                </div>
                                {% if not user.avatar.classic %}
                                    <br/><br />
                                    <div class="avatar small no-arma">
                                        <img alt="" src="{{ path('app_web_avatar', {'uid': user.id, 'name': user.avatar.smallName, 'ext': user.avatar.format}) }}">
                                    </div>
                                {% endif %}

                            {% else %}
                                ---
                            {% endif %}
                        </div>

                        <div class="cell padded rw-3 rw-sm-12 note note-lightest">
                            <b><label>{{ 'Titel'|trans({}, 'admin') }}</label></b>
                        </div>

                        <div class="cell padded rw-3 rw-sm-12">
                            {% if user.activeTitle or user.activeIcon %}
                                <div>
                                    {% if user.activeIcon %}<img alt="" src="{{ asset('build/images/icons/title/' ~ user.activeIcon.prototype.icon ~ '.gif') }}" />{% endif %}
                                    {% if user.activeTitle %} {{ user.activeTitle.prototype.title|trans({},'game') }}{% endif %}
                                </div>
                            {% else %}
                                <div>---</div>
                            {% endif %}
                        </div>
                        {% if user_desc %}
                            <div class="cell padded {% if user.avatar is null %}ro-6 ro-sm-0{% endif%} rw-6 rw-sm-12">
                                <div class="personal_desc"><div>{{ 'Persönliche Beschreibung'|trans({},'game') }}</div><div>"{{ user_desc|raw }}"</div></div>
                            </div>
                        {% endif %}
                    </div>

                    <h5>{{ 'Kartei'|trans({}, 'admin') }}</h5>
                    <div class="row">
                        <div class="cell padded rw-3 rw-sm-12 note note-lightest">
                            {{ 'Benutzername'|trans({}, 'admin') }}
                        </div>
                        <div class="cell padded rw-3 rw-sm-12">
                            {{ user.username }}
                        </div>
                        <div class="cell padded rw-3 rw-sm-12 note note-lightest">
                            {{ 'Anzeigename'|trans({}, 'admin') }}
                        </div>
                        <div class="cell padded rw-3 rw-sm-12">
                            {{ user.displayName ?? '-' }}
                        </div>
                        <div class="cell padded rw-3 rw-sm-12 note note-lightest">
                            {{ 'Berechtigungsstufe'|trans({}, 'admin') }}
                        </div>
                        <div class="cell padded rw-9 rw-sm-12">
                            {% if     user.rightsElevation == 0 %} {{ 'Spieler'|trans({}, 'admin') }}
                            {% elseif user.rightsElevation == 2 %} {{ 'Orakel'|trans({}, 'admin') }}
                            {% elseif user.rightsElevation == 3 %} {{ 'Krähe'|trans({}, 'admin') }}
                            {% elseif user.rightsElevation == 4 %} {{ 'Admin'|trans({}, 'admin') }}
                            {% elseif user.rightsElevation == 5 %} {{ 'Admin'|trans({}, 'admin') }}[+]
                            {% else                             %} {{ user.rightsElevation }} {% endif %}
                        </div>
                        <div class="cell padded rw-3 rw-sm-12 note note-lightest">
                            {{ 'E-Mail'|trans({}, 'admin') }}
                        </div>
                        <div class="cell padded rw-9 rw-sm-12">
                            {% set parts = user.email|split('@',2) %}
                            {% if parts|length > 1 and parts[1] == 'localhost' %}
                                {% if is_granted("ROLE_ADMIN") %}
                                    {{ 'Lokal: %account%'|trans({'%account%': parts[0]}, 'admin') }}
                                {% else %}
                                    [{{ 'Nur für Administratoren sichtbar'|trans({}, 'admin') }}]
                                {% endif %}
                            {% elseif parts|length > 1 and parts[1] == 'user.eternal-twin.net' %}
                                [{{ 'Von EternalTwin verwaltet'|trans({}, 'admin') }}]
                            {% else %}
                                {% if is_granted("ROLE_ADMIN") %}
                                    {{ user.email }}
                                {% else %}
                                    [{{ 'Nur für Administratoren sichtbar'|trans({}, 'admin') }}]
                                {% endif %}
                            {% endif %}
                        </div>
                    </div>

                    <h5>{{ 'Verknüpfte Konten'|trans({}, 'admin') }}</h5>

                    <div class="row">
                        <div class="cell padded rw-3 rw-sm-12 note note-lightest">
                            {{ 'EternalTwin-Konto'|trans({}, 'admin') }}
                        </div>
                        <div class="cell padded rw-3 rw-sm-12">
                            {{ user.eternalID ?? '-' }}
                        </div>
                        <div class="cell padded rw-3 rw-sm-12 note note-lightest">
                            {{ 'Twinoid-Konto'|trans({}, 'admin') }}
                        </div>
                        <div class="cell padded rw-3 rw-sm-12">
                            {% if user.twinoidID is not null %}
                                <a target="_blank" href="https://twinoid.com/user/{{ user.twinoidID }}"><i class="fa fa-external-link-alt"></i> {{ user.twinoidID }}</a><br />
                                {% for soul in user.twinoidImports %}
                                    {% if soul.main %}
                                        <div><i class="fa fa-arrow-right"></i> <img alt="" src="{{ asset('build/images/icons/small_hero_up.gif') }}"> <b>{{ soul.scope }}</b></div>
                                    {% else %}
                                        <div><i class="fa fa-arrow-right"></i> <i>{{ soul.scope }}</i></div>
                                    {% endif %}
                                {% endfor %}
                            {% else %} - {% endif %}
                        </div>
                    </div>

                    <h5>{{ 'Sonstiges'|trans({}, 'admin') }}</h5>

                    <div class="row">
                        {% if user.eternalID is null %}
                            <div class="cell padded rw-3 rw-sm-12 note note-lightest">
                                {{ 'Validiert'|trans({}, 'admin') }}
                            </div>
                            <div class="cell padded rw-9 rw-sm-12">
                                {% if user.validated %}{{ 'Ja'|trans({}, 'admin') }}{% else %}{{ 'Nein'|trans({}, 'admin') }}{% endif %}
                            </div>
                        {% endif %}

                        {% if is_granted("ROLE_ADMIN") %}
                            {% if user.eternalID is null %}
                                <div class="cell padded rw-3 rw-sm-12 note note-lightest">
                                    {{ 'Validierungstokens'|trans({}, 'admin') }}
                                </div>
                                <div class="cell padded rw-9 rw-sm-12">
                                    {% if validations|length == 0 %}{{ 'Keine'|trans({}, 'admin') }}{% endif %}
                                    {% for token in validations %}
                                        {# @var token \App\Entity\UserPendingValidation #}
                                        <div>{{ token.pkey }}
                                            ({% if     token.type ==  constant('App\\Entity\\UserPendingValidation::EMailValidation') %} EMailValidation
                                        {% elseif token.type ==  constant('App\\Entity\\UserPendingValidation::ResetValidation') %} ResetValidation
                                        {% else                                                                                  %} {{ token.type }} {% endif %})
                                            <div x-delete-token="{{ token.id }}" class="button small inline"><i class="fa fa-trash"></i></div>
                                        </div>
                                    {% endfor %}
                                </div>
                            {% endif %}
                            <div class="cell padded rw-3 rw-sm-12 note note-lightest">
                                {{ 'Multi-Account Whitelist'|trans({}, 'admin') }}
                            </div>
                            <div class="cell padded rw-9 rw-sm-12">
                                {% if user.connectionWhitelists|length == 0 %}{{ 'Keine'|trans({}, 'admin') }}{% endif %}
                                {% for list in user.connectionWhitelists %}
                                    {% for other_user in list.users %}
                                        {% if other_user.id != user.id %}
                                            <div>{{ other_user.name }} <span class="pointer" x-unwhitelist="{{ other_user.id }}"><i class="fa fa-trash"></i></span></div>
                                        {% endif %}
                                    {% endfor %}
                                {% endfor %}
                            </div>
                        {% endif %}
                    </div>
                </div>
            </div>


        </div>
    </div>
    {% embed "ajax/admin/users/footer.html.twig" %}{% endembed %}
{% endblock %}
{% block js %}
    {{ parent() }}
    <script>
        {% if (user_handler.admin_canAdminister(app.user,user)) %}
            document.getElementById('execute_button').addEventListener('click', function() {
                const dropdown = document.getElementById('administer-user');
                const option = dropdown.querySelector('option:checked');
                if (!dropdown.value) return;

                const confirmation = option.getAttribute('x-confirm');
                const query        = option.getAttribute('x-query');

                let q_param = null;
                if (query) {
                    q_param = prompt(query, '');
                    if (q_param === null) return;
                }

                if (confirmation && !confirm( "{{ 'Bitte bestätige folgende Aktion:'|trans({},'admin')|e('js') }}\n" + confirmation + ( q_param === null ? '' : ("\n" + q_param) ) ))
                    return;

                $.ajax.easySend( document.getElementById('administer-user').value, {param: q_param},
                    function () {
                        $.ajax.load(null, '{{ path('admin_users_account_view', {id: user.id}) }}', true);
                    } );
            });
        {% endif %}

        {% if is_granted("ROLE_ADMIN") %}
            $.html.addEventListenerAll('[x-delete-token]', 'click', function(e,elem) {
                $.ajax.easySend( '{{ path('admin_users_account_manage', {id: user.id, action: 'delete_token'}) }}', {tid: elem.getAttribute('x-delete-token')},
                    function () {
                        $.ajax.load(null, '{{ path('admin_users_account_view', {id: user.id}) }}', true);
                    } );
            });
            $.html.addEventListenerAll('[x-unwhitelist]', 'click', function(e,elem) {
                $.ajax.easySend( '{{ path('admin_users_account_manage', {id: user.id, action: 'unwhitelist'}) }}', {param: elem.getAttribute('x-unwhitelist')},
                    function () {
                        $.ajax.load(null, '{{ path('admin_users_account_view', {id: user.id}) }}', true);
                    } );
            });
        {% endif %}
    </script>
{% endblock %}
