{% extends "ajax/ajax.html.twig" %}
{% block title %}{% trans from 'admin' %}Verbannung{% endtrans %} - {{ user.name }}{%  endblock %}
{% block ajax %}
    <div class="row soul">

        <div class="cell padded header rw-12">
            {% embed "ajax/admin/users/tabs.html.twig" %}{% endembed %}

            <div class="row">
                <div class="cell rw-12 padded">
                    <h5>{{ 'Existierende Beschränkungen'|trans({},'admin') }}</h5>
                    {% if existing is empty %}
                        <div class="note">{{ 'Dieser Spieler hat eine weiße Weste.'|trans({},'admin') }}</div>
                    {% else %}
                        <div class="row-table">
                            <div class="row header">
                                <div class="cell rw-2 rw-md-0 padded">{{ "Info" |trans({}, 'admin') }}</div>
                                <div class="cell rw-2 ro-md-2 rw-md-5 padded">{{ "Autor" |trans({}, 'admin') }}</div>
                                <div class="cell rw-2 rw-md-5 padded">{{ "Bestätigt von" |trans({}, 'admin') }}</div>
                                <div class="cell rw-2 hide-md hide-sm padded">{{ "Datum" |trans({}, 'admin') }}</div>
                                <div class="cell rw-2 hide-md hide-sm padded">{{ "Dauer" |trans({}, 'admin') }}</div>
                                <div class="cell rw-2 hide-md hide-sm padded">{{ "Endet" |trans({}, 'admin') }}</div>
                            </div>
                            {% for restriction in existing %}
                                {# @var restriction \App\Entity\AccountRestriction #}
                                <div class="row">
                                    <div class="cell rw-2 rw-sm-3 padded">
                                        {% if restriction.active %}
                                            {% if not restriction.confirmed %}
                                                <div class="inline-block">
                                                    <img alt="!" src="{{ asset('build/images/assets/img/icons/small_warning.gif') }}" />
                                                    <div class="tooltip">{{ 'Nicht bestätigt!'|trans({},'admin') }}</div>
                                                </div>
                                            {% elseif restriction.expires is not null and restriction.expires < 'now'|to_date %}
                                                <div class="inline-block">
                                                    <img alt="0" src="{{ asset('build/images/icons/player_offline.gif') }}" />
                                                    <div class="tooltip">{{ 'Abgelaufen'|trans({},'admin') }}</div>
                                                </div>
                                            {% else %}
                                                <div class="inline-block pointer"><img x-disable-url="{{ path('admin_users_ban_disable', {bid: restriction.id, uid: user.id}) }}" alt="0" src="{{ asset('build/images/icons/player_online.gif') }}" /></div>
                                            {% endif %}

                                        {% else %}
                                            <div class="inline-block">
                                                <img alt="0" src="{{ asset('build/images/icons/player_offline.gif') }}" />
                                                <div class="tooltip">{{ 'Deaktiviert'|trans({},'admin') }}</div>
                                            </div>
                                        {% endif %}

                                        <div class="inline-block">
                                            <img alt="?" src="{{ asset('build/images/icons/small_talk.gif') }}" />
                                            <div class="tooltip">
                                                <b>{{ 'Grund'|trans({},'admin') }}</b><br/>
                                                {{ restriction.publicReason }}<br /><br />
                                                {% if restriction.internalReason %}
                                                    <b>{{ 'Interner Vermerk'|trans({},'admin') }}</b><br/>
                                                    {{ restriction.internalReason }}<br /><br />
                                                {% endif %}
                                                <b>{{ 'Art'|trans({},'admin') }}</b> <i>({{ restriction.restriction }})</i><br/>
                                                {% if restriction.restriction|bin_contains(constant('App\\Entity\\AccountRestriction::RestrictionSocial')) %}
                                                    <div>{{ 'Sozial'|trans({},'admin') }}</div>
                                                {% else %}
                                                    {% if restriction.restriction|bin_contains(constant('App\\Entity\\AccountRestriction::RestrictionForum')) %}<div>{{ 'Forum'|trans({},'admin') }}</div>{% endif %}
                                                    {% if restriction.restriction|bin_contains(constant('App\\Entity\\AccountRestriction::RestrictionTownCommunication')) %}<div>{{ 'Stadt-Kom.'|trans({},'admin') }}</div>{% endif %}
                                                    {% if not restriction.restriction|bin_contains(constant('App\\Entity\\AccountRestriction::RestrictionTownCommunication')) and restriction.restriction|bin_contains(constant('App\\Entity\\AccountRestriction::RestrictionBlackboard')) %}<div>{{ 'Schwarzes Brett'|trans({},'admin') }}</div>{% endif %}
                                                    {% if restriction.restriction|bin_contains(constant('App\\Entity\\AccountRestriction::RestrictionGlobalCommunication')) %}<div>{{ 'Globale Kom.'|trans({},'admin') }}</div>{% endif %}
                                                    {% if restriction.restriction|bin_contains(constant('App\\Entity\\AccountRestriction::RestrictionComments')) %}<div>{{ 'Kommentare'|trans({},'admin') }}</div>{% endif %}
                                                    {% if restriction.restriction|bin_contains(constant('App\\Entity\\AccountRestriction::RestrictionOrganization')) %}<div>{{ 'Org.'|trans({},'admin') }}</div>{% endif %}
                                                {% endif %}
                                                {% if restriction.restriction|bin_contains(constant('App\\Entity\\AccountRestriction::RestrictionGameplay')) %}
                                                    <div>{{ 'Spiel'|trans({},'admin') }}</div>
                                                {% endif %}
                                                {% if restriction.restriction|bin_contains(constant('App\\Entity\\AccountRestriction::RestrictionProfile')) %}
                                                    <div>{{ 'Profil'|trans({},'admin') }}</div>
                                                {% else %}
                                                    {% if restriction.restriction|bin_contains(constant('App\\Entity\\AccountRestriction::RestrictionProfileAvatar')) %}<div>{{ 'Avatar'|trans({},'admin') }}</div>{% endif %}
                                                    {% if restriction.restriction|bin_contains(constant('App\\Entity\\AccountRestriction::RestrictionProfileDescription')) %}<div>{{ 'Profilbeschreibung'|trans({},'admin') }}</div>{% endif %}
                                                    {% if restriction.restriction|bin_contains(constant('App\\Entity\\AccountRestriction::RestrictionProfileTitle')) %}<div>{{ 'Titel'|trans({},'admin') }}</div>{% endif %}
                                                    {% if restriction.restriction|bin_contains(constant('App\\Entity\\AccountRestriction::RestrictionProfileDisplayName')) %}<div>{{ 'Spielername'|trans({},'admin') }}</div>{% endif %}
                                                {% endif %}
                                            </div>
                                        </div>
                                    </div>
                                    <div class="cell rw-2 rw-md-5 rw-sm-4 padded">{% if restriction.moderator|is_granted('ROLE_ADMIN') %}<img alt="[ADM]" src="{{ asset('build/images/icons/small_admin.gif') }}"> {% endif %}{{ restriction.moderator.name }}</div>
                                    <div class="cell rw-2 rw-md-5 padded">
                                        {% set confirmed_by_admin = false %}
                                        {% set confirmed_by_super = false %}
                                        {% if restriction.confirmedBy|filter(c => c != restriction.moderator) is empty %}<div>-</div>{% endif %}
                                        {% for confirmer in restriction.confirmedBy %}
                                            {% if confirmer|is_granted('ROLE_ADMIN') %}{% set confirmed_by_admin = true %}{% endif %}
                                            {% if confirmer|is_granted('ROLE_SUPER') %}{% set confirmed_by_super = true %}{% endif %}
                                            {% if confirmer != restriction.moderator %}<div>{% if confirmer|is_granted('ROLE_ADMIN') %}<img alt="[ADM]" src="{{ asset('build/images/icons/small_admin.gif') }}"> {% endif %}{{ confirmer.name }}</div>{% endif %}
                                        {% endfor %}
                                        {% set confirmation_is_useful = true %}
                                        {% if confirmed_by_super and is_granted('ROLE_SUPER') %}{% set confirmation_is_useful = false %}{% endif %}
                                        {% if confirmed_by_admin and is_granted('ROLE_ADMIN') and not is_granted('ROLE_SUPER') %}{% set confirmation_is_useful = false %}{% endif %}
                                        {% if restriction.active and (restriction.expires is null or restriction.expires > 'now'|to_date) and confirmation_is_useful and app.user not in restriction.confirmedBy %}
                                            <button x-confirm-url="{{ path('admin_users_ban_confirm', {bid: restriction.id, uid: user.id}) }}"><img src="{{ asset('build/images/icons/escort_on.gif') }}"> {{ 'Bestätigen'|trans({},'admin') }}</button>
                                        {% endif %}
                                    </div>
                                    <div class="cell rw-2 rw-md-4 rw-sm-6 padded"><span class="small">{{ restriction.created|format_datetime('medium', 'short') }}</span></div>
                                    <div class="cell rw-2 rw-md-4 rw-sm-6 padded">
                                        {% if is_granted('ROLE_ADMIN') and restriction.active %}
                                            <span class="small pointer" data-toggle-duration-for="{{ restriction.id }}">
                                                {% if restriction.originalDuration < 0 %}<b>∞</b>{% else %}{{ '{d} Tage'|trans({'{d}': (restriction.originalDuration/86400)|round},'admin') }}{% endif %}
                                            </span>
                                            <label class="hidden" data-duration-for="{{ restriction.id }}">
                                                <select data-update-url="{{ path('admin_users_ban_modify', {bid: restriction.id, uid: user.id}) }}">
                                                    <option {{ restriction.originalDuration == 86400 ? 'selected' : '' }} value="86400">{{ '24 Stunden'|trans({},'admin') }}</option>
                                                    {% for duration in [2,3,5,7,15,30,60,90,120,240] %}
                                                        <option {{ restriction.originalDuration == duration * 86400 ? 'selected' : '' }} value="{{ duration * 86400 }}">{{ '{d} Tage'|trans({'{d}': duration},'admin') }}{% if duration > 30 and not is_granted('ROLE_ADMIN') %} ({{ 'Bestätigung erforderlich'|trans({},'admin') }}){% endif %}</option>
                                                    {% endfor %}
                                                    <option {{ restriction.originalDuration == 31536000 ? 'selected' : '' }} value="31536000">{{ '1 Jahr'|trans({},'admin') }}{% if not is_granted('ROLE_ADMIN') %} ({{ 'Admin-Bestätigung erforderlich'|trans({},'admin') }}){% endif %}</option>
                                                    <option {{ restriction.originalDuration == 63072000 ? 'selected' : '' }} value="63072000">{{ '2 Jahre'|trans({},'admin') }}{% if not is_granted('ROLE_ADMIN') %} ({{ 'Admin-Bestätigung erforderlich'|trans({},'admin') }}){% endif %}</option>
                                                    <option {{ restriction.originalDuration == -1 ? 'selected' : '' }} value="-1">{{ 'Dauerhaft'|trans({},'admin') }}{% if not is_granted('ROLE_ADMIN') %} ({{ 'Admin-Bestätigung erforderlich'|trans({},'admin') }}){% endif %}</option>
                                                </select>
                                            </label>
                                        {% else %}
                                            <span class="small">
                                                {% if restriction.originalDuration < 0 %}<b>∞</b>{% else %}{{ '{d} Tage'|trans({'{d}': (restriction.originalDuration/86400)|round},'admin') }}{% endif %}
                                            </span>
                                        {% endif %}
                                    </div>
                                    <div class="cell rw-2 rw-md-4 rw-sm-6 padded">
                                        {% if restriction.originalDuration > 0 and restriction.expires is not null %}<span class="small">{{ restriction.expires|format_datetime('medium', 'short') }}</span>{% endif %}
                                    </div>
                                </div>
                            {% endfor %}
                        </div>
                    {% endif %}
                </div>

            </div>

            <div class="row">
                <div class="cell rw-12 padded">
                    <h5>{{ 'Neue Beschränkung hinzufügen'|trans({},'admin') }}</h5>
                    <div class="row">
                        <div class="cell rw-6 rw-md-12 padded">
                            <b><label for="rest_duration">{{ 'Dauer'|trans({},'admin') }}</label></b>
                            <select x-confirmation id="rest_duration">
                                <option value="86400">{{ '24 Stunden'|trans({},'admin') }}</option>
                                {% for duration in [2,3,5,7,15,30,60,90,120,240] %}
                                    <option {% if duration > 30%}x-confirmation="1"{% endif %} value="{{ duration * 86400 }}">{{ '{d} Tage'|trans({'{d}': duration},'admin') }}{% if duration > 30 and not is_granted('ROLE_ADMIN') %} ({{ 'Bestätigung erforderlich'|trans({},'admin') }}){% endif %}</option>
                                {% endfor %}
                                <option x-confirmation="2" value="31536000">{{ '1 Jahr'|trans({},'admin') }}{% if not is_granted('ROLE_ADMIN') %} ({{ 'Admin-Bestätigung erforderlich'|trans({},'admin') }}){% endif %}</option>
                                <option x-confirmation="2" value="63072000">{{ '2 Jahre'|trans({},'admin') }}{% if not is_granted('ROLE_ADMIN') %} ({{ 'Admin-Bestätigung erforderlich'|trans({},'admin') }}){% endif %}</option>
                                <option x-confirmation="2" value="-1">{{ 'Dauerhaft'|trans({},'admin') }}{% if not is_granted('ROLE_ADMIN') %} ({{ 'Admin-Bestätigung erforderlich'|trans({},'admin') }}){% endif %}</option>
                            </select>
                            <br /><br />
                            <b><label for="rest_public">{{ 'Grund'|trans({},'admin') }}</label></b>
                            <textarea style="min-height: 120px; height: 120px;" id="rest_public"></textarea>
                            <br />
                            <b><label for="rest_private">{{ 'Interner Vermerk'|trans({},'admin') }}</label></b>
                            <textarea style="min-height: 120px; height: 120px;" id="rest_private"></textarea>
                        </div>

                        <div class="cell rw-6 rw-md-12 padded">
                            <div class="row">
                                <b>{{ 'Art der Beschränkung'|trans({},'admin') }}</b>
                                <div class="cell rw-12"><label><input type="checkbox" x-restriction="{{ constant('App\\Entity\\AccountRestriction::RestrictionSocial') }}"> {{ 'Soziale Interaktion verbieten'|trans({},'admin') }}</label></div>
                                <div class="cell ro-1 rw-11"><label><input type="checkbox" x-restriction="{{ constant('App\\Entity\\AccountRestriction::RestrictionForum') }}"> {{ 'Posten in Foren verbieten'|trans({},'admin') }}</label></div>
                                <div class="cell ro-1 rw-11"><label><input type="checkbox" x-restriction="{{ constant('App\\Entity\\AccountRestriction::RestrictionTownCommunication') }}"> {{ 'Stadt-interne Kommunikation verbieten'|trans({},'admin') }}</label></div>
                                <div class="cell ro-2 rw-11"><label><input type="checkbox" x-restriction="{{ constant('App\\Entity\\AccountRestriction::RestrictionBlackboard') }}"> {{ 'Verwendung des Schwarzen Bretts verbieten'|trans({},'admin') }}</label></div>
                                <div class="cell ro-1 rw-11"><label><input type="checkbox" x-restriction="{{ constant('App\\Entity\\AccountRestriction::RestrictionGlobalCommunication') }}"> {{ 'Stadtübergreifende Kommunikation verbieten'|trans({},'admin') }}</label></div>
                                <div class="cell ro-1 rw-11"><label><input type="checkbox" x-restriction="{{ constant('App\\Entity\\AccountRestriction::RestrictionComments') }}"> {{ 'Kommentare verbieten'|trans({},'admin') }}</label></div>
                                <div class="cell ro-1 rw-11"><label><input type="checkbox" x-restriction="{{ constant('App\\Entity\\AccountRestriction::RestrictionOrganization') }}"> {{ 'Organisation in Gruppen verbieten'|trans({},'admin') }}</label></div>
                                <div class="cell rw-12"><label><input x-confirmation="2" type="checkbox" x-restriction="{{ constant('App\\Entity\\AccountRestriction::RestrictionGameplay') }}"> {{ 'Spielen verbieten'|trans({},'admin') }}{% if not is_granted('ROLE_ADMIN') %} ({{ 'Admin-Bestätigung erforderlich'|trans({},'admin') }}){% endif %}</label></div>
                                <div class="cell rw-12"><label><input type="checkbox" x-restriction="{{ constant('App\\Entity\\AccountRestriction::RestrictionProfile') }}"> {{ 'Änderungen am Profil verbieten'|trans({},'admin') }}</label></div>
                                <div class="cell ro-1 rw-11"><label><input type="checkbox" x-restriction="{{ constant('App\\Entity\\AccountRestriction::RestrictionProfileAvatar') }}"> {{ 'Ändern des Avatars verbieten'|trans({},'admin') }}</label></div>
                                <div class="cell ro-1 rw-11"><label><input type="checkbox" x-restriction="{{ constant('App\\Entity\\AccountRestriction::RestrictionProfileDescription') }}"> {{ 'Ändern der Profilbeschreibung verbieten'|trans({},'admin') }}</label></div>
                                <div class="cell ro-1 rw-11"><label><input type="checkbox" x-restriction="{{ constant('App\\Entity\\AccountRestriction::RestrictionProfileTitle') }}"> {{ 'Ändern des Titels verbieten'|trans({},'admin') }}</label></div>
                                <div class="cell ro-1 rw-11"><label><input type="checkbox" x-restriction="{{ constant('App\\Entity\\AccountRestriction::RestrictionProfileDisplayName') }}"> {{ 'Ändern des Spielernamens verbieten'|trans({},'admin') }}</label></div>
                            </div>
                            <div class="row">
                                <div class="cell rw-12">
                                    <div class="note hidden" id="rest_info_lv1">
                                        <b>{{ 'Bestätigung erforderlich'|trans({},'admin') }}</b><br />
                                        {{ 'Diese Account-Beschränkung muss von einem anderen Moderator bestätigt werden, bevor sie aktiv wird.'|trans({},'admin') }}
                                        {{ 'Die Dauer der Beschränkung zählt erst ab dem Moment, wo sie aktiviert wird.'|trans({},'admin') }}
                                    </div>
                                    <div class="note hidden" id="rest_info_lv2">
                                        <b>{{ 'Admin-Bestätigung erforderlich'|trans({},'admin') }}</b><br />
                                        {{ 'Diese Account-Beschränkung muss von einem Administrator bestätigt werden, bevor sie aktiv wird.'|trans({},'admin') }}
                                        {{ 'Die Dauer der Beschränkung zählt erst ab dem Moment, wo sie aktiviert wird.'|trans({},'admin') }}
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="cell rw-4 rw-md-6 rw-sm-12"><button id="add_rest_button">{{ 'Hinzufügen'|trans({},'admin') }}</button></div>
                    </div>
                </div>

            </div>

        </div>



    </div>
    {% embed "ajax/admin/users/footer.html.twig" %}{% endembed %}
{% endblock %}
{% block js %}
    {{ parent() }}
    <script>
        (function() {
            const check_confirmation_level = function(){
                $.html.forEach('#rest_info_lv1,#rest_info_lv2', element => element.classList.add('hidden'));

                let lv = 0;
                {% if not is_granted('ROLE_ADMIN') %}
                    if (document.querySelector('[x-confirmation="1"]:checked')) lv = 1;
                    if (document.querySelector('[x-confirmation="2"]:checked')) lv = 2;

                    if (lv === 1) $.html.forEach('#rest_info_lv1', element => element.classList.remove('hidden'));
                    if (lv === 2) $.html.forEach('#rest_info_lv2', element => element.classList.remove('hidden'));
                {% endif %}
                return lv;
            }

            $.html.addEventListenerAll('input[type="checkbox"][x-confirmation]', 'click', check_confirmation_level);
            $.html.addEventListenerAll('select[x-confirmation]', 'change', check_confirmation_level);

            $.html.addEventListenerAll('[data-toggle-duration-for]', 'click', (e,elem) => {
                document.querySelectorAll('[data-duration-for="' + elem.dataset.toggleDurationFor + '"]').forEach( cb => cb.classList.remove('hidden') );
                elem.classList.add('hidden');
            } )

            $.html.addEventListenerAll('select[data-update-url]', 'change', (e,elem) => {
                if (!confirm('{{ 'Bestätigen?'|trans({},'global')|e('js') }}'))
                    return;
                $.ajax.easySend(elem.dataset.updateUrl, {duration: elem.value}, () => $.ajax.load(null,"{{ path('admin_users_ban_view', {id: user.id}) }}"));
            })

            const get_restriction_mask = function(){
                let rm = 0;
                $.html.forEach('input[type="checkbox"][x-restriction]:checked', element => {
                    const re = parseInt(element.getAttribute('x-restriction'));
                    rm |= re;
                });
                return rm;
            }

            $.html.addEventListenerAll('input[type="checkbox"][x-restriction]', 'click', (e,elem) => {
                const r = parseInt(elem.getAttribute('x-restriction'));

                if (elem.checked)
                    $.html.forEach('input[type="checkbox"][x-restriction]', element => {
                        const re = parseInt(element.getAttribute('x-restriction'));
                        if (r === re) return;
                        if ((r & re) === re) element.checked = true;
                    });
                else
                    $.html.forEach('input[type="checkbox"][x-restriction]', element => {
                        const re = parseInt(element.getAttribute('x-restriction'));
                        if (r === re) return;
                        if (r & re) element.checked = false;
                    });

                let rm = get_restriction_mask();
                $.html.forEach('input[type="checkbox"][x-restriction]:not(:checked)', element => {
                    const re = parseInt(element.getAttribute('x-restriction'));
                    if ((rm & re) === re) element.checked = true;
                });
            });

            $.html.addEventListenerAll('[x-confirm-url]', 'click', (e,elem) => {
                if (!confirm('{{ 'Bestätigen?'|trans({},'global')|e('js') }}')) return;
                $.ajax.easySend(elem.getAttribute('x-confirm-url'), {}, () => $.ajax.load(null,"{{ path('admin_users_ban_view', {id: user.id}) }}"));
            });

            $.html.addEventListenerAll('[x-disable-url]', 'click', (e,elem) => {
                if (!confirm('{{ 'Bestätigen?'|trans({},'global')|e('js') }}')) return;
                $.ajax.easySend(elem.getAttribute('x-disable-url'), {}, () => $.ajax.load(null,"{{ path('admin_users_ban_view', {id: user.id}) }}"));
            });

            $.html.addEventListenerAll('#add_rest_button','click',() => {
                const rm = get_restriction_mask();
                if (rm === 0) {
                    $.html.error('{{ 'Bitte wähle die Art der Beschränkung.'|trans({},'global')|e('js') }}');
                    return;
                }

                let str = '{{ 'Bestätigen?'|trans({},'global')|e('js') }}';
                const lv = check_confirmation_level();
                if (lv === 1) str = '{{ 'Diese Account-Beschränkung muss von einem anderen Moderator bestätigt werden, bevor sie aktiv wird.'|trans({},'admin')|e('js') }}' + "\n" + str;
                if (lv === 2) str = '{{ 'Diese Account-Beschränkung muss von einem Administrator bestätigt werden, bevor sie aktiv wird.'|trans({},'admin')|e('js') }}' + "\n" + str;

                if (!confirm(str)) return;

                $.ajax.easySend("{{path('admin_users_ban', {id: user.id})}}", {
                    restriction: rm,
                    duration: document.getElementById('rest_duration').value,
                    reason: document.getElementById('rest_public').value,
                    note: document.getElementById('rest_private').value,
                }, () => $.ajax.load(null,"{{ path('admin_users_ban_view', {id: user.id}) }}"));
            });
        })();
    </script>
{% endblock %}