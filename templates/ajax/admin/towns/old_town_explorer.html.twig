{% extends "ajax/ajax.html.twig" %}
{% block title %}{{'Stadt {townname}'|trans({'{townname}': town.name}, 'admin')}}{% endblock %}
{% block menu_text %}
    {{parent()}}
    <li class="back-dash" x-ajax-href="{{ url('game_landing') }}">{{ 'Zum Spiel'|trans({},'global') }}</li>
{% endblock %}
{% block ajax %}
    {% macro valuelist(prop,val) %}
        <div class="row">
            <div class="cell rw-4 rw-sm-12"><b>{{ prop }}</b></div>
            <div class="cell rw-8 rw-sm-11 ro-sm-1">
                {% if val is same as(true) %}
                    {{ 'Ja'|trans({},'admin') }}
                {% elseif val is same as(false)  %}
                    {{ 'Nein'|trans({},'admin') }}
                {% else %}
                    {{ val }}
                {% endif %}
            </div>
        </div>
    {% endmacro %}

    <div class="row">
        <div class="cell padded rw-12">
            <ul class="tabs plain" x-tab-group="admin-town" x-tab-control x-tab-default="{{ tab }}">
            	<div class="tab-floater">
                <li class="tab" x-tab-id="dash"><div class="tab-link">{{ 'Übersicht'|trans({},'admin') }}</div></li>
                <li class="tab" x-tab-id="citizens"><div class="tab-link">{{ 'Bürger'|trans({},'admin') }}</div></li>
                </div>
            </ul>
            {# @var town \App\Entity\TownRankingProxy #}
            <div x-tab-group="admin-town" x-tab-id="dash" x-tab-target>
                <div class="row">
                    <div class="cell padded rw-6 rw-sm-12">
                        {{ _self.valuelist('ID'|trans({},'admin'),         town.imported ? town.baseID : town.id) }}
                        {{ _self.valuelist('Stadtname'|trans({},'admin'),  town.name) }}
                        {{ _self.valuelist('Sprache'|trans({},'admin'),    town.language) }}
                        {{ _self.valuelist('Typ'|trans({},'admin'),        town.type.label|trans({},'game')) }}
                        {{ _self.valuelist('Population'|trans({},'admin'), town.population) }}
                        {{ _self.valuelist('Saison'|trans({},'admin'),     town.season ? town.season.number : '--') }}
                        {{ _self.valuelist('Tag'|trans({},'admin'),        town.days) }}
                        {{ _self.valuelist('Importiert'|trans({},'admin'), town.imported) }}
                        {{ _self.valuelist('Beginn'|trans({}, 'admin')    , town.begin|format_datetime) }}
                        {{ _self.valuelist('Ende'|trans({}, 'admin')      , town.end|format_datetime) }}
                    </div>
                </div>
            </div>
            <div x-tab-group="admin-town" x-tab-id="citizens" x-tab-target>
                <div class="row">
                    <div class="cell padded rw-5 rw-sm-12">
                        <div class="row-table citizens-list">
                            <div class="row-flex header">
                                <div class="padded cell left rw-12">{{ 'Bürger'|trans({},'game') }}</div>
                                {% if is_granted("ROLE_ADMIN") %}
                                    <div class="padded cell"><label><input data-distribute-to="*" type="checkbox"/></label></div>
                                {% endif %}
                            </div>
                            {% for citizen in town.citizens|sort((a,b) => b.day <=> a.day) %}
                                {# @var \App\Entity\Citizen citizen  #}
                                <div x-citizen-id="{{ citizen.id }}" class="row-flex stretch citizen-main pointer" style="max-height: 100px;">
                                    {% include 'ajax/soul/playeravatar.html.twig' with {user: citizen.user, small: true, background: true, classes: ['cell','factor-0'], attributes: {style: 'flex-basis: 92px;', ('x-ajax-href'): url('admin_users_citizen_view', {id: citizen.user.id})}} only %}
                                    <div class="cell factor-0 citizen-dead" style="flex-basis: 8px;" x-ajax-href="{{ url('admin_users_citizen_view', {id: citizen.user.id}) }}">&nbsp;</div>
                                    
                                    <div class="padded cell rw-4 factor-1 small content-center-vertical citizen-box citizen-box-name">
                                        <img alt="{{ 'Tot!'|trans({},'game') }}" src="{{ asset('build/images/professions/death.gif') }}" />
                                        <a class="link" href="{{ url('admin_users_citizen_view', {id: citizen.user.id}) }}">
                                            <b class="citizen-name">{{ citizen.name }}</b>
                                            {% if citizen.alias and citizen.alias != citizen.user.name %}
                                                <b class="citizen-name">[<i>{{ citizen.user.name }}</i>]</b>
                                            {% endif %}
                                        </a>&nbsp;
                                    </div>

                                    {% if is_granted("ROLE_ADMIN") %}
                                        <div class="padded cell">
                                            <label><input data-distribute-to="{{ citizen.id }}" type="checkbox"/></label>
                                        </div>
                                    {% endif %}
                                </div>
                                <div x-citizen-id="{{ citizen.id }}" class="row hidden citizen-details">
                                    <div class="cell rw-12">
                                        <div class="row">
                                            <div class="padded cell rw-12 soul"><div class="invTargetPictos"></div></div>
                                        </div>
                                    </div>
                                </div>
                            {% endfor %}
                        </div>
                    </div>
                    <div class="cell rw-7 rw-sm-12 padded">
                        {% if is_granted("ROLE_ADMIN") %}
                        <div class="padded cell">
                            <label for="selectPicto">{{'Eine Auszeichnungen auswählen:'|trans({}, 'admin')}}</label>
                            <select id="selectPicto">
                                {% for pictoPrototype in pictoPrototypes %}
                                    <option value="{{pictoPrototype.id}}">{{ pictoPrototype.label|trans({}, 'game') }}</option>
                                {% endfor %}
                            </select>
                            <label for="numberPicto">
                                {{'Anzahl der Auszeichnungen:'|trans({}, 'admin')}}
                            </label>
                            <input type="number" id="numberPicto" value="1"/>
                            <label for="commentPicto">
                                {{'Zusätzliche Beschreibung:'|trans({}, 'admin')}}
                            </label>
                            <input type="text" id="commentPicto"/>
                            <br />
                            <button id="givebtn" disabled>{{'Vergeben!'|trans({}, 'admin')}}</button>
                        </div>
                        <br />
                        {% endif %}
                    </div>
                </div>
            </div>
            <br />
            <div class="row">
                <div class="padded cell rw-3 ro-6 rw-md-6 ro-md-0 rw-sm-12">
                    {% if town.citizens is not empty %}
                        <a class="button" target="_blank" href="{{ url('soul_view_town', {sid: town.citizens[0].user.id, idtown: town.id}) }}">{{ 'Ranking-Eintrag'|trans({},'admin') }}</a>
                    {% endif %}
                </div>
                <div class="padded cell rw-3 rw-md-6 rw-sm-12">
                    <button x-ajax-href="{{ path('admin_old_town_list') }}">{{ 'Stadtübersicht'|trans({},'admin') }}</button>
                </div>
            </div>
        </div>
    </div>
{% endblock %}
{% block js %}
    {{ parent() }}
    <script>
        (function() {

           {% if is_granted("ROLE_ADMIN") %}

                let givebtn = document.getElementById("givebtn");
                if (givebtn) givebtn.addEventListener('click', function(){
                    let number = document.getElementById("numberPicto").value;
                    if(isNaN(number)) number = 1;

                    let picto = document.getElementById('selectPicto').value;
                    let to = [];

                    let text = document.getElementById("commentPicto").value;

                    $.html.forEach('[data-distribute-to]:not([data-distribute-to="*"])', v => {
                        if (v.checked) to.push(parseInt(v.dataset.distributeTo));
                    });

                    if (to.length === 0) return;

                    $.ajax.easySend('{{ path('admin_town_give_picto', {id: town.id}) }}', {
                            'prototype': picto, number, to, text
                        },
                        function () {
                            $.ajax.load(null, '{{ path('admin_old_town_explorer', {id: town.id, tab: "citizens"}) }}', true);
                        }
                    );
                });

                $.html.addEventListenerAll('[data-distribute-to]', 'click', (e,elem) => {
                    if (elem.dataset.distributeTo === '*') {
                        $.html.forEach('[data-distribute-to]:not([data-distribute-to="*"])', v => v.checked = elem.checked);
                        document.getElementById('givebtn').toggleAttribute('disabled', !elem.checked)
                    } else {
                        const star = document.querySelector('[data-distribute-to="*"]');
                        let match = true, one = false;
                        $.html.forEach('[data-distribute-to]:not([data-distribute-to="*"])', v => {
                            match = match &= (v.checked === elem.checked);
                            one |= v.checked;
                        });
                        star.checked = elem.checked;
                        star.indeterminate = !match;
                        document.getElementById('givebtn').toggleAttribute('disabled', !one)
                    }
                })

                $.html.addEventListenerAll('.citizen-main[x-citizen-id]', 'click',  (e,elem) => {
                    if (e.target.tagName === 'INPUT') return;
                    const details = document.querySelector('.citizen-details[x-citizen-id="' + elem.getAttribute('x-citizen-id') + '"]');

                    if (details.classList.contains('hidden')) {
                        $.html.forEach('.citizen-details[x-citizen-id]', elem => elem.classList.add('hidden'));
                        details.classList.remove('hidden');

                        const refresh = () => {
                            $.ajax.easySend('{{ url('get_old_citizen_infos', {id: town.id}) }}', {'citizen_id': elem.getAttribute('x-citizen-id')}, data => {
                                document.querySelector('.citizen-details[x-citizen-id="' + elem.getAttribute('x-citizen-id') + '"] .invTargetPictos').innerHTML = data.pictos;
                                let tooltips = document.querySelectorAll('.citizen-details[x-citizen-id="' + elem.getAttribute('x-citizen-id') + '"] .invTargetPictos .tooltip');
                                for(let i = 0 ; i < tooltips.length ; i++)
                                    $.html.handleTooltip(tooltips[i]);

                            });
                        };
                        refresh();
                    } else {
                        $.html.forEach('.citizen-details[x-citizen-id]', elem => elem.classList.add('hidden'));
                        document.querySelector(".citizen-details[x-citizen-id] .invTargetPictos").innerHTML = '';
                    }
                });

            {% endif %}
        })();

    </script>
{% endblock %}