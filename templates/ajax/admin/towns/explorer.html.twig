{% extends "ajax/ajax.html.twig" %}

{% from "ajax/admin/widget/displays.twig" import widget_citizen %}

{% from "ajax/admin/widget/controls.twig" import widget_item_creator as item_creator, widget_item_creator_js as item_creator_js %}
{% from "ajax/admin/widget/controls.twig" import widget_picto_creator as picto_creator, widget_picto_creator_js as picto_creator_js %}
{% from "ajax/admin/widget/controls.twig" import widget_status_control as status_control, widget_status_control_js as status_control_js %}
{% from "ajax/admin/widget/controls.twig" import widget_role_control as role_control, widget_role_control_js as role_control_js %}
{% from "ajax/admin/widget/controls.twig" import widget_point_control as point_control, widget_point_control_js as point_control_js %}
{% from "ajax/admin/widget/controls.twig" import widget_profession_control as profession_control, widget_profession_control_js as profession_control_js %}
{% from "ajax/admin/widget/controls.twig" import widget_teleport_control as teleport_control, widget_teleport_control_js as teleport_control_js %}

{% block title %}{{'Stadt %townname%'|trans({'%townname%': town.name}, 'admin')|raw}}{% endblock %}
{% block ajax %}
    {% macro valuelist(prop,val) %}
        <div class="row">
            <div class="padded cell rw-4 note note-lightest">{{ prop }}</div>
            <div class="padded cell rw-8">
                {% if val is same as(true) %}
                    {{ 'Ja'|trans({},'admin') }}
                {% elseif val is same as(false)  %}
                    {{ 'Nein'|trans({},'admin') }}
                {% else %}
                    {{ val }}
                {% endif %}
            </div>
        </div>
    {% endmacro %}

    <div class="row">
        <div class="cell padded rw-12">
            <div class="tab-floater">
                <ul class="tabs plain" x-tab-group="admin-town" x-tab-control x-tab-default="{{ tab }}">
                    <li class="tab" x-tab-id="dash"><div class="tab-link">{{ 'Übersicht'|trans({},'admin') }}</div></li>
                    <li class="tab" x-tab-id="bank"><div class="tab-link">{{ 'Bank'|trans({},'admin') }}</div></li>
                    <li class="tab" x-tab-id="citizens"><div class="tab-link">{{ 'Bürger'|trans({},'admin') }}</div></li>
                    <li class="tab" x-tab-id="register"><div class="tab-link">{{ 'Stadtregister'|trans({},'admin') }}</div></li>
                    <li class="tab" x-tab-id="blackboard"><div class="tab-link">{{ 'Schwarzes Brett'|trans({},'admin') }}</div></li>
                    <li class="tab" x-tab-id="estimations"><div class="tab-link">{{ 'Admin-Wachturm'|trans({},'admin') }}</div></li>
                {% if is_granted("ROLE_ADMIN") %}
                    <li class="tab" x-tab-id="buildings"><div class="tab-link">{{ 'Konstruktionen'|trans({},'admin') }}</div></li>
                    <li class="tab" x-tab-id="explorer"><div class="tab-link">{{ 'Ruinenscanner'|trans({},'admin') }}</div></li>
                {% endif %}
                </ul>
            </div>
            {# @var town \App\Entity\Town #}
            <div x-tab-group="admin-town" x-tab-id="dash" x-tab-target>
                <div class="row">
                    <div class="cell padded rw-6 rw-sm-12">
                        {{ _self.valuelist('ID'|trans({},'admin'),         town.id) }}
                        {{ _self.valuelist('Stadtname'|trans({},'admin'),  town.name) }}
                        {{ _self.valuelist('Sprache'|trans({},'admin'),    town.language) }}
                        {{ _self.valuelist('Typ'|trans({},'admin'),        town.type.label|trans({},'game')) }}
                        {{ _self.valuelist('Ersteller'|trans({},'admin'),  town.creator != null ? town.creator.name : '--') }}
                        {{ _self.valuelist('Population'|trans({},'admin'), town.population) }}
                        {{ _self.valuelist('Saison'|trans({},'admin'),     town.season ? town.season.number : '--') }}
                        {{ _self.valuelist('Tag'|trans({},'admin'),        town.day) }}
                        {{ _self.valuelist('Offen'|trans({},'admin'),      town.open) }}
                        {{ _self.valuelist('Chaos'|trans({},'admin'),      town.chaos) }}
                        {{ _self.valuelist('Zerstört'|trans({},'admin'),   town.devastated) }}
                        {{ _self.valuelist('Tor offen'|trans({},'admin'),  town.door) }}
                        {{ _self.valuelist('Brunnen'|trans({},'admin'),    town.well) }}
                        {{ _self.valuelist('Quarantäne'|trans({},'game'),  town.attackFails >= 3) }}

                        <div class="row">
                            <div class="padded cell rw-4 note note-lightest"><label for="administer-town">{{ 'Stadt administrieren'|trans({},'admin') }}</label></div>
                            <div class="padded cell rw-8">
                                <select id="administer-town" style="width: 30rem;">
                                    <option value="">-</option>
                                    {% if is_granted("ROLE_ADMIN") %}
                                        <optgroup label="{{ 'Nächtlicher Angriff'|trans({},'admin') }}">
                                            {% if town.attackFails >= 3 %}
                                                <option value="{{ url('admin_town_manage', {action: 'release', id: town.id}) }}">{{ 'Quarantäne aufheben'|trans({},'admin') }}</option>
                                            {% else %}
                                                <option value="{{ url('admin_town_manage', {action: 'quarantine', id: town.id}) }}">{{ 'Unter Quarantäne stellen'|trans({},'admin') }}</option>
                                            {% endif %}
                                            {% if not town.open %}
                                                <option value="{{ url('admin_town_manage', {action: 'advance', id: town.id}) }}">{{ 'Manueller Tageswechsel'|trans({},'admin') }}</option>
                                            {% endif %}
                                        </optgroup>
                                        <optgroup label="{{ 'Verwaltung'|trans({},'admin') }}">
                                            <option x-alt-url="{{ path('admin_town_list') }}" value="{{ url('admin_town_manage', {action: 'nullify', id: town.id}) }}">{{ 'Annulieren'|trans({},'admin') }}</option>
                                        </optgroup>
                                        {% if app.environment == 'dev' %}
                                            <optgroup label="Debug">
                                                {% set ctz_engaged = 0 %}
                                                {% set ctz_disengaged = 0 %}
                                                {% for cur_citizen in town.citizens %}
                                                    {% if cur_citizen.alive and cur_citizen.active %}
                                                        {% set ctz_engaged = ctz_engaged + 1 %}
                                                    {% elseif cur_citizen.alive and not cur_citizen.active %}
                                                        {% set ctz_disengaged = ctz_disengaged + 1 %}
                                                    {% endif %}
                                                {% endfor %}
                                                {% if town.population > town.citizenCount %}
                                                    <option value="{{ url('admin_town_manage', {action: 'dbg_fill_town', id: town.id}) }}">{{ 'Stadt füllen'|trans({},'admin') }}</option>
                                                {% endif %}
                                                <option value="{{ url('admin_town_manage', {action: 'dbg_fill_bank', id: town.id}) }}">{{ 'Bank füllen'|trans({},'admin') }}</option>
                                                <option value="{{ url('admin_town_manage', {action: 'dbg_unlock_bank', id: town.id}) }}">{{ 'Banksperre aufheben'|trans({},'admin') }}</option>
                                                <option value="{{ url('admin_town_manage', {action: 'dbg_hydrate', id: town.id}) }}">{{ 'Durst aufheben'|trans({},'admin') }}</option>
                                                {% if ctz_engaged > 0 %}
                                                    <option value="{{ url('admin_town_manage', {action: 'dbg_disengage', id: town.id}) }}">{{ 'Alle Spieler entkoppeln'|trans({},'admin') }}</option>
                                                {% endif %}
                                                {% if ctz_disengaged > 0 %}
                                                    <option value="{{ url('admin_town_manage', {action: 'dbg_engage', id: town.id}) }}">{{ 'Alle Spieler koppeln'|trans({},'admin') }}</option>
                                                {% endif %}
                                                <option value="{{ url('admin_town_manage', {action: 'dbg_set_well', id: town.id}) }}" x-query="{{ 'Neuer Füllstand:'|trans({},'admin') }}">{{ 'Brunnen-Füllstand setzen'|trans({},'admin') }}</option>
                                                <option value="{{ url('admin_town_manage', {action: 'dbg_unlock_buildings', id: town.id}) }}">{{ 'Alle Gebäude freischalten'|trans({},'admin') }}</option>
                                                <option value="{{ url('admin_town_manage', {action: 'dbg_map_progress', id: town.id}) }}">{{ 'Zombie-Spread ausführen'|trans({},'admin') }}</option>

                                            </optgroup>
                                        {% endif %}
                                    {% endif %}
                                </select>
                                <div id="execute_button" class="button inline small">{{ 'Ausführen'|trans({},'admin') }}</div>
                            </div>
                        </div>
                    </div>
                    <div class="cell padded rw-6 rw-sm-12">
                        {% embed "ajax/admin/towns/map.html.twig" with {'default_zoom': 0, 'default_show_zone': false, 'allow_zone_view': false, 'map': map_data} %}
                        {% endembed %}
                    </div>
                </div>
            </div>

            {% if is_granted("ROLE_ADMIN") %}
            <div x-tab-group="admin-town" x-tab-id="buildings" x-tab-target>
                {% macro building_entry(building, buildable, n, dict, available) %}
                    {% if available[building.id] is defined %}
                    {% set fromTown = available[building.id] %}
                    {% endif %}
                    {# @var building \App\Entity\BuildingPrototype #}
                    {# @var fromTown \App\Entity\Building #}

                    <div class="row {% if not buildable %}locked{% elseif (fromTown is defined and fromTown.complete) %}complete{% endif %} {% if n > 0 %}lv-{{ min(n,6) }}{% else %}root{% endif %}">
                        <div class="padded cell rw-5 rw-lg-12">
                            {% if not fromTown is defined %}
                            <input type="checkbox" x-prototype-id="{{ building.id }}" x-building-admin-action="addToTown" />
                            {% endif %}
                            {% if buildable %}
                                <img alt="" src="{{ asset('build/images/building/' ~ building.icon ~ '.gif' ) }}" >
                            {% else %}
                                <img alt="" src="{{ asset('build/images/icons/lock.gif' ) }}" >
                            {% endif %}
                            <span>{{ building.label|trans({},'buildings') }}</span>
                            {% if building.temp %}
                                <span>
                                <img alt="(!)" src="{{ asset('build/images/icons/small_warning.gif') }}" />
                                <div class="tooltip temp-building">
                                    <h1>{{ 'Temporäre Konstruktion!'|trans({}, 'buildings') }}</h1>
                                    {{ 'Diese Konstruktion kann nur einmal verwendet werden. Sie wird nach dem Angriff der Zombiehorde wieder abgerissen.'|trans({}, 'buildings') }}<br /><em>{{'Wenn ihr wollt, könnt irh sie morgen nochmal bauen.'|trans({}, 'buildings')}}</em>
                                </div>
                            </span>
                            {% endif %}
                            {% if building.defense > 0 %}
                                <div class="float-right defense">
                                    {% if building.defense > 0 %}
                                        {{ building.defense }}
                                    {% endif %}
                                </div>
                            {% endif %}
                            {% if building.description %}
                                <div class="tooltip help">
                                    {{ building.description|trans({}, 'buildings') }}
                                </div>
                            {% endif %}
                        </div>
                        {% if fromTown is defined %}
                        <div class="padded cell rw-3 rw-lg-5 rw-sm-12 no-ws">
                            {% if fromTown.ap > 0 and not fromTown.complete %}
                                <div class="ap-bar">
                                    <div class="bar" style="width: {{ 100*(fromTown.ap/building.ap) }}%"></div>
                                </div>
                            {% elseif fromTown.complete and fromTown.hp < building.hp %}
                                <div class="ap-bar">
                                    <div class="bar" style="width: {{ 100*(fromTown.hp/((building.hp)|round)) }}%"></div>
                                    <div class="tooltip"><em>{{"Zustand:"|trans({}, 'game')}}</em> {{fromTown.hp}}/{{building.hp}}</div>
                                </div>
                            {% endif %}

                            <div class="build-req">
                                <div class="ap">{{ fromTown.ap }}/{{ building.ap }}</div>
                            </div>
                        </div>
                        <div class="padded cell rw-4 rw-lg-7 rw-sm-12 right">
                            <button class="inline build-btn" x-building-id="{{ fromTown.id }}" x-building-admin-action="{% if fromTown.complete %}setHp{% else %}setAp{% endif %}"><i class="fa fa-edit"></i></button>
                            {% if not fromTown.complete %}
                                <button class="inline build-btn" x-building-id="{{ fromTown.id }}" x-building-admin-action="complete"><i class="fa fa-check"></i></button>
                            {% else %}
                                <button class="inline build-btn" x-building-id="{{ fromTown.id }}" x-building-admin-action="destroy"><i class="fa fa-times"></i></button>
                            {% endif %}
                        </div>
                        {% endif %}
                    </div>
                    {% if n < 20 and dict[building.id] is not empty %}
                        {% for sub_building in dict[building.id] %}
                            {{ _self.building_entry(sub_building, buildable and fromTown is defined and fromTown.complete , n+1, dict, available) }}
                        {% endfor %}
                    {% endif %}
                {% endmacro %}

                {# @var rootBuildings \App\Entity\BuildingPrototype[] #}
                <div>
                    <ul class="buildings-tabs tabs plain" x-tab-group="buildings" x-tab-control>
                        <li class="tab" x-tab-id="all">
                            <div class="tab-link">
                                <img class="hide-desktop" alt="*" src="{{ asset( 'build/images/icons/small_new.gif' ) }}" >
                                <span class="hide-lg hide-md hide-sm">{{ 'Alle'|trans({},'game') }}</span>
                            </div>
                        </li>
                        {% for building in rootBuildings %}
                            <li class="tab" x-tab-id="type_{{ building.icon }}">
                                <div class="tab-link">
                                    <img class="hide-desktop" alt="" src="{{ asset('build/images/building/' ~ building.icon ~ '.gif' ) }}" >
                                    {% set label = building.label|trans({}, 'buildings') %}
                                    <span class="hide-lg hide-md hide-sm">{{ label|length > 12 ? (label|slice(0,10) ~ '...') : label }}</span>
                                </div>
                            </li>
                        {% endfor %}
                    </ul>
                </div>

                {% for building in rootBuildings %}
                    <div x-tab-group="buildings" x-tab-id="type_{{ building.icon }}" x-tab-target class="buildings type_{{ building.icon }}">{{ _self.building_entry(building, true, 0, dictBuildings, availBuldings) }}</div>
                {% endfor %}
            </div>
            {% endif %}

            <div x-tab-group="admin-town" x-tab-id="bank" x-tab-target>
                <div class="row">
                    <div x-target="bank" x-id="{{ town.id }}" class="padded cell rw-6 rw-md-12">
                        {% embed "ajax/game/inventory.html.twig" with {'size': 0, 'items': bank, 'bankmode': true} %}
                            {% block class %}bank{% endblock %}
                            {% block title %}{% endblock %}
                        {% endembed %}
                    </div>
                    <div class="padded cell rw-6 rw-md-12">
                        {% if is_granted("ROLE_ADMIN") %}
                            {{ item_creator(itemPrototypes, 'bnk') }}
                        {% endif %}
                    </div>
                </div>
            </div>

            <div x-tab-group="admin-town" x-tab-id="citizens" x-tab-target>
                <div class="row">
                    <div class="cell padded rw-6 rw-md-12">
                        <div class="row-table citizens-list">
                            <div class="row header">
                                <div class="padded cell rw-1">{{'Rucksack'|trans({}, 'admin')|slice(0,1)}}<div class="tooltip help">{{'Rucksack'|trans({}, 'admin')}}</div></div>
                                <div class="padded cell rw-1">{{'Truhe'|trans({}, 'admin')|slice(0,1)}}<div class="tooltip help">{{'Truhe'|trans({}, 'admin')}}</div></div>
                                <div class="padded cell rw-1">{{'Zone'|trans({}, 'admin')|slice(0,1)}}<div class="tooltip help">{{'Zone'|trans({}, 'admin')}}</div></div>
                                <div class="padded cell left rw-9">{{ 'Bürger'|trans({},'game') }}</div>
                            </div>
                            {% for citizen in town.citizens|sort((a,b) => (a.alive == b.alive) ? ((a.alive) ? a.user.name|lower <=> b.user.name|lower : b.survivedDays <=> a.survivedDays) : b.alive <=> a.alive) %}
                                {# @var \App\Entity\Citizen citizen  #}
                                <div class="row-flex stretch pointer" style="max-height: 100px;">
                                    <div class="cell rw-1">
                                    {% if citizen.alive %}
                                        <label><input type="checkbox" x-id="{{ citizen.id }}" x-target="rucksack" /></label>
                                        <div class="tooltip normal">
                                            <em>{{ 'Rucksack'|trans({},'admin') }}</em><br />
                                            {% for item in citizen.inventory.items %}
                                                {# @var \App\Entity\Item item #}
                                                <img alt="{{ item.prototype.label|trans({},'items') }}" src="{{ asset('build/images/item/item_' ~ item.prototype.icon ~ '.gif') }}" />
                                            {% endfor %}
                                        </div>
                                    {% endif %}
                                    </div>
                                    <div class="cell rw-1">
                                        <label><input type="checkbox" x-id="{{ citizen.home.id }}" x-target="chest" /></label>
                                        <div class="tooltip normal">
                                            {% if citizen.home.chest.items|length == 0 %}
                                                <em>{{ 'Leere Truhe'|trans({},'admin') }}</em>
                                            {% else %}
                                                <em>{{ 'Truhe'|trans({},'admin') }}</em><br />
                                            {% endif %}
                                            {% for item in citizen.home.chest.items %}
                                                {# @var \App\Entity\Item item #}
                                                <img alt="{{ item.prototype.label|trans({},'items') }}" src="{{ asset('build/images/item/item_' ~ item.prototype.icon ~ '.gif') }}" />
                                            {% endfor %}
                                        </div>
                                    </div>
                                    <div class="cell rw-1">
                                        {% if citizen.alive and citizen.zone and (citizen.zone.x != 0 or citizen.zone.y != 0) %}
                                            <label><input type="checkbox" x-id="{{ citizen.zone.id }}" x-target="zone" /></label>
                                            <div class="tooltip normal">
                                                {% if citizen.zone.floor.items|length == 0 %}
                                                    <em>{{ 'Leere Zone'|trans({},'admin') }}</em>
                                                {% else %}
                                                    <em>{{ 'Zone'|trans({},'admin') }}</em><br />
                                                {% endif %}
                                                {% for item in citizen.zone.floor.items %}
                                                    {# @var \App\Entity\Item item #}
                                                    <img alt="{{ item.prototype.label|trans({},'items') }}" src="{{ asset('build/images/item/item_' ~ item.prototype.icon ~ '.gif') }}" />
                                                {% endfor %}
                                            </div>
                                        {% endif %}
                                    </div>
                                    <div class="cell rw-1">
                                        {% if citizen.alive %}
                                            <label><input type="checkbox" x-id="{{ citizen.id }}" x-target="status" /></label>
                                            <div class="tooltip normal">{{ widget_citizen(citizen) }}</div>
                                        {% endif %}
                                    </div>
                                    <div class="cell factor-0 avatar ua-{{ random(0,9) }}" style="flex-basis: 90px; background: url('{{ citizen.user.avatar ? path('app_web_avatar', {'uid': citizen.user.id, 'name': citizen.user.avatar.smallName, 'ext': citizen.user.avatar.format}) : asset('build/images/forum/empty_avatar.gif') }}') center/cover no-repeat;" x-ajax-href="{{ url('admin_users_citizen_view', {id: citizen.user.id}) }}">&nbsp;</div>
                                    <div class="cell factor-0 citizen-{{ citizen.alive ? (citizen.online ? 'online' : 'offline') : 'dead' }}" style="flex-basis: 8px;" x-ajax-href="{{ url('admin_users_citizen_view', {id: citizen.user.id}) }}">&nbsp;</div>
                                    
                                    <div class="padded cell rw-4 factor-1 small content-center-vertical citizen-box citizen-box-name">
                                        {% if citizen.banished %}
                                        <img alt="" src="{{ asset('build/images/icons/banished.gif') }}" />
                                        {% endif %}
                                        {% if not citizen.alive %}
                                        <span>
                                            <img alt="{{ 'Tot!'|trans({},'game') }}" src="{{ asset('build/images/professions/death.gif') }}" />
                                            <div class="tooltip">
                                                {{ citizen.causeOfDeath.label|trans({}, 'game') }} - {{ 'Tag'|trans({}, "admin") }} {{ citizen.survivedDays }}
                                            </div>
                                        </span>
                                        {% endif %}
                                        
                                        {% if citizen.profession.heroic %}
                                            <img alt="" src="{{ asset('build/images/professions/hero.gif') }}" />
                                        {% else %}
                                            <img alt="" src="{{ asset('build/images/professions/void.gif') }}" />
                                        {% endif %}
                                        <img alt="{{ citizen.profession.label|trans({},'game') }}" src="{{ asset('build/images/professions/' ~ citizen.profession.icon ~ '.gif') }}" />
                                        <a class="link" href="{{ url('admin_users_citizen_view', {id: citizen.user.id}) }}">
                                            <b class="citizen-name">{{ citizen.user.name }}</b>
                                        </a>&nbsp;
                                        {% for role in citizen.roles %}
                                            <img src="{{ asset('build/images/roles/' ~ role.icon ~ '.gif') }}" alt="{{ role.label|trans({},'game') }}">&nbsp;
                                        {% endfor %}
                                        {% if citizen.alive %}
                                            <span class="zone">
                                            {% if citizen.zone %}
                                            [{{citizen.zone.x}},{{citizen.zone.y}}]
                                            {% else %}
                                            [{{'In der Stadt'|trans({}, 'admin')}}]
                                            {% endif %}
                                            </span>
                                        {% endif %}
                                    </div>
                                </div>
                            {% endfor %}
                        </div>
                    </div>
                    <div class="cell rw-6 rw-md-12 padded">
                        {% if is_granted("ROLE_ADMIN") %}
                        <div class="padded cell">
                            {{ item_creator(itemPrototypes, 'ctz') }}
                            <hr />
                            {{ teleport_control() }}
                            <hr />
                            {{ picto_creator(pictoPrototypes) }}
                            <hr />
                            {{ profession_control(citizenProfessions) }}
                            <hr />
                            <div class="row">
                                <div class="cell rw-6 rw-md-12">{{ status_control(citizenStati) }}</div>
                                <div class="cell rw-6 rw-md-12">{{ role_control(citizenRoles) }}</div>
                            </div>
                            <hr />
                            {{ point_control() }}
                        </div>
                        <div class="padded cell">
                            <h5>{{ 'Anzeigen'|trans({}, 'admin') }}</h5>
                            <ul>
                            {% for culprit, complaint in complaints %}
                                <li>{{ 'Gegen %culprit%'|trans({'%culprit%': "<strong>" ~ culprit ~ "</strong>"}, 'admin')|raw }}
                                    <ul>
                                    {% for cmp in complaint|sort((a,b) => a.autor.user.name <=> b.autor.user.name) %}
                                        <li>{{ cmp.autor.user.name }} : {{ cmp.linkedReason.text|trans({}, 'game') }}</li>
                                    {% endfor %}
                                    </ul>
                                </li>
                            {% endfor %}
                            </ul>
                                <div class="log">
                                    <div class="log-content">
                                        {% for log_complaint in all_complaints %}
                                            <div class="log-entry log-entry log-entry-type-8 log-entry-class-{{ log_complaint.on ? 1 : 3 }}">
                                                <span class="log-part-time" style="width: 120px">{{ log_complaint.time|format_datetime('medium', 'short') }}</span>
                                                <span class="log-part-content">
                                                    <span>{{ log_complaint.from.user.name }}</span> <i class="fa fa-arrow-right"></i> <span>{{ log_complaint.to.user.name }}</span>
                                                    (<i>{{ log_complaint.reason.text|trans({}, 'game') }}</i>)
                                                </span>
                                            </div>
                                        {% endfor %}
                                    </div>
                                </div>
                        </div>
                        <div class="padded cell">
                            <h5>{{ 'Stimmen'|trans({}, 'admin') }}</h5>
                            <ul>
                                {% for role in citizenRoles %}
                                    {% if role.votable %}
                                    <li>{{ role.label|trans({}, 'game')|raw }}
                                        <ul>
                                            {% for target, autors in votes[role.id]|sort %}
                                                <li>{{ 'Für %target%'|trans({"%target%": target}, 'admin') }}
                                                    <ul>
                                                        {% for autor in autors %}
                                                        <li>{{ autor.user.name }}</li>
                                                        {% endfor %}
                                                    </ul>
                                                </li>
                                            {% endfor %}
                                        </ul>
                                    </li>
                                    {% endif %}
                                {% endfor %}
                            </ul>
                        </div>
                        <br />
                        {% endif %}
                        <button id="townpm">{{ 'Rundmail als Rabe'|trans({},'admin') }}</button>
                        <input type="hidden" id="pmidrecipient" value="{{ town.id }}">
                        <div id="forum-content">
                        </div>
                    </div>
                </div>
            </div>

            <div x-tab-group="admin-town" x-tab-id="register" x-tab-target>
                {% embed "ajax/admin/towns/log.html.twig" with {'log_content': log, 'log_source': path('admin_newspaper_log_controller') } %}
                {% endembed %}
            </div>

            <div x-tab-group="admin-town" x-tab-id="blackboard" x-tab-target>
                <div class="row-table">
                    <div class="row header">
                        <div class="padded cell rw-3">{{ 'Benutzername'|trans({},'admin') }}</div>
                        <div class="padded cell rw-9">{{ 'Info'|trans({},'admin') }}</div>
                    </div>
                    {% for entry in blackboards %}
                        <div class="row">
                            <div class="padded cell rw-3">
                                <a class="link" target="_blank" href="{{ url('admin_users_account_view', {id: entry.user.id}) }}">{{ entry.user.name }}</a><br />
                                <i>{{ entry.time|format_datetime('medium', 'short') }}</i>
                            </div>
                            <div class="padded cell rw-9 pointer" x-blackboard-short="{{ entry.id }}">{{ entry.text }}</div>
                            <div class="padded cell rw-9 pointer" x-blackboard-preview="{{ entry.id }}" style="display:none">
                                <div class="words-of-heroes"><div class="content">{{ entry.text|nl2br }}</div></div>
                            </div>
                        </div>
                    {% endfor %}
                </div>
            </div>

            <div x-tab-group="admin-town" x-tab-id="estimations" x-tab-target>
                <div class="row-table">
                    <div class="row header">
                        <div class="cell rw-1 padded"></div>
                        <div class="cell rw-1 padded">{{ 'ID'|trans({},'admin') }}</div>
                        <div class="cell rw-1 padded">{{ 'Tag'|trans({},'admin') }}</div>
                        <div class="cell rw-2 padded">{{ 'Angriff'|trans({},'admin') }}</div>
                        <div class="cell rw-2 padded">{{ 'Bereich Min'|trans({},'admin') }}</div>
                        <div class="cell rw-2 padded">{{ 'Bereich Max'|trans({},'admin') }}</div>
                    </div>
                    {% for est in town.zombieEstimations %}
                        <div class="row {% if est.day == town.day %}bold{% endif %}">
                            <div class="padded cell rw-1">{% if est.day == town.day %}<i class="fa fa-arrow-right"></i>{% endif %}</div>
                            <div class="padded cell rw-1">{{ est.id }}</div>
                            <div class="padded cell rw-1">{{ est.day }}</div>
                            {% if is_granted("ROLE_ADMIN") or est.day < town.day %}
                                <div class="padded cell rw-2">{{ est.zombies }}</div>
                                <div class="padded cell rw-2">{{ est.offsetMin }}%</div>
                                <div class="padded cell rw-2">{{ est.offsetMax }}%</div>
                            {% endif %}
                        </div>
                    {% endfor %}
                </div>
            </div>

            {% if is_granted("ROLE_ADMIN") %}
                <div x-tab-group="admin-town" x-tab-id="explorer" x-tab-target>
                    {% for exploration in explorables %}
                        <div class="row">
                            <div class="cell rw-6 padded">
                                <h5>{{ exploration.z.prototype.label|trans({},'game') }} - {{ exploration.z.x }}/{{ exploration.z.y }}</h5>
                                <div class="adm-exploration">
                                    {% for rz in exploration.rz %}
                                        <div class="rz {% if rz.prototype %}rz-{{ rz.locked ? 'locked' : 'unlocked' }}{% endif%} rz-{{ rz.distance > conf.get(constant('App\\Structures\\TownConf::CONF_EXPLORABLES_LOCKDIST')) ? 'far' : 'close' }} rz-{{ rz.corridor }} {% if rz.zombies > 0 %}rz-zeds{% endif %}" style="top:{{ rz.y * 20 }}px;left:{{ rz.x * 20 }}px;">
                                            {% if rz.corridor != 0 %}
                                                <div class="tooltip ndynamic">
                                                    {{ _self.valuelist('ID'|trans({},'admin'), rz.id) }}
                                                    {{ _self.valuelist('Position'|trans({},'admin'), rz.x ~ ' / ' ~ rz.y) }}
                                                    {{ _self.valuelist('Distanz'|trans({},'admin'), rz.distance) }}
                                                    {{ _self.valuelist('Zombies'|trans({},'admin'), rz.zombies) }}
                                                    {% if rz.prototype %}
                                                        {% if rz.locked %}
                                                            {{ _self.valuelist('Abdruck'|trans({},'admin'), rz.prototype.keyImprint.label|trans({},'items')) }}
                                                            {{ _self.valuelist('Schlüssel'|trans({},'admin'), rz.prototype.keyItem.label|trans({},'items')) }}
                                                        {% else %}
                                                            {{ _self.valuelist('Durchsucht'|trans({},'admin'), rz.digs) }}
                                                        {% endif %}
                                                    {% endif %}
                                                </div>
                                            {% endif %}
                                        </div>
                                    {% endfor %}
                                </div>
                            </div>
                            <div class="cell rw-6 padded">
                                <h5>{{ 'Aktuelle Sitzung'|trans({},'admin') }}</h5>
                                {% if exploration.ax %}
                                    {{ _self.valuelist('Spieler'|trans({},'admin'), exploration.ax.citizen.user.name) }}
                                    {{ _self.valuelist('Position'|trans({},'admin'), exploration.ax.x ~ ' / ' ~ exploration.ax.y ) }}
                                    {{ _self.valuelist('Flucht'|trans({},'admin'), exploration.ax.escaping ) }}
                                    {{ _self.valuelist('Raum'|trans({},'admin'), exploration.ax.inRoom ) }}
                                    <div class="row">
                                        <div class="cell rw-4"><b>{{ 'Zeit'|trans({},'admin') }}</b></div>
                                        <div class="cell rw-8"><span x-countdown="{{ exploration.axt }}">...</span></div>
                                    </div>
                                {% endif %}
                                <h5>{{ 'Alle Sitzungen'|trans({},'admin') }}</h5>
                                {% for x in exploration.x %}
                                    <div>{{ x.citizen.user.name }}</div>
                                {% endfor %}
                            </div>
                        </div>
                    {% endfor %}
                </div>
            {% endif %}

            <br />
            <div class="row">
                <div class="cell rw-3 ro-9">
                    <button x-ajax-href="{{ path('admin_town_list') }}">{{ 'Stadtübersicht'|trans({},'admin') }}</button>
                </div>
            </div>
        </div>


    </div>


{% endblock %}
{% block js %}
    {{ parent() }}
    {% if is_granted("ROLE_ADMIN") %}
        {{ item_creator_js('input[x-target="rucksack"]:checked,input[x-target="chest"]:checked,input[x-target="zone"]:checked', path('admin_spawn_item', {id: town.id}), path('admin_town_explorer', {id: town.id, tab: "citizens"}), 'ctz') }}
        {{ item_creator_js('[x-target="bank"]', path('admin_spawn_item', {id: town.id}), path('admin_town_explorer', {id: town.id, tab: "bank"}), 'bnk') }}
        {{ teleport_control_js('input[x-target="status"]:checked', path('admin_teleport_citizen', {id: town.id}), path('admin_town_explorer', {id: town.id, tab: "citizens"})) }}
        {{ picto_creator_js(path('admin_town_give_picto', {id: town.id}), path('admin_town_explorer', {id: town.id, tab: "citizens"})) }}
        {{ status_control_js('input[x-target="status"]:checked', path('admin_town_manage_status', {id: town.id}), path('admin_town_explorer', {id: town.id, tab: "citizens"})) }}
        {{ role_control_js('input[x-target="status"]:checked', path('admin_town_manage_role', {id: town.id}), path('admin_town_explorer', {id: town.id, tab: "citizens"})) }}
        {{ point_control_js('input[x-target="status"]:checked', path('admin_town_alter_pp', {id: town.id}), path('admin_town_explorer', {id: town.id, tab: "citizens"})) }}
        {{ profession_control_js('input[x-target="status"]:checked', path('admin_modify_profession', {id: town.id}), path('admin_town_explorer', {id: town.id, tab: "citizens"})) }}
    {% endif %}
    <script>
        (function() {

            document.getElementById('execute_button').addEventListener('click', function() {
                if (!document.getElementById('administer-town').value) return;
                const url = document.querySelector('#administer-town option:checked').getAttribute('x-alt-url');
                const query = document.querySelector('#administer-town option:checked').getAttribute('x-query');

                let q_param = null;
                if (query) {
                    q_param = prompt(query, '');
                    if (q_param === null) return;
                }

                $.ajax.easySend( document.getElementById('administer-town').value, {param: q_param},
                    function () {
                        $.ajax.load(null, url ? url : '{{ path('admin_town_explorer', {id: town.id}) }}', true);
                    } );
            });

            document.getElementById('townpm').addEventListener('click', function(e) {
                document.getElementById("forum-content").innerHTML = "";
                $.ajax.no_history().load( document.getElementById('forum-content'), '{{ path('admin_pm_editor_controller', {'type': 'global'}) }}', false )
            });

            let log_boxes = document.querySelectorAll('.log-container');
            for (let i = 0; i < log_boxes.length; i++) {
                let log = log_boxes[i].querySelector( '.log' );

                const has_preloaded_content = log.getAttribute('x-log-default-provided') == '1';
                const url = log.getAttribute('x-log-source');
                let content_box = log.querySelectorAll('.log-content');

                const fun_refresh = function(d,bg) {
                    if (bg) $.ajax.background().load( content_box[0], url, false, {day: d, town: {{town.id}}} );
                    else $.ajax.load( content_box[0], url, false, {day: d, town: {{town.id}}} )
                };

                let refresh_button = log.querySelector('.log-complete-link');
                if (refresh_button) refresh_button.addEventListener('click', function() {
                    let spinner = log.querySelector('.log-spinner');
                    refresh_button.classList.add('hidden');
                    if (spinner) spinner.classList.remove('hidden');

                    fun_refresh(-1,true);
                });

                if (!has_preloaded_content) fun_refresh(-1,true);

                let control_tab = log_boxes[i].querySelector( '.log-day-select .tab' );
                if (control_tab) {
                    const min = parseInt(control_tab.getAttribute( 'x-page-min' ));
                    const max = parseInt(control_tab.getAttribute( 'x-page-max' ));
                    let   cur = parseInt(control_tab.getAttribute( 'x-page-current' ));

                    let control_fwd = control_tab.querySelector( 'div.control:first-child' );
                    let control_bwd = control_tab.querySelector( 'div.control:last-child' );
                    let label       = control_tab.querySelector( 'span' );

                    const fun_adjust = function(dif) {
                        if ((dif > 0 && cur <= (max-dif)) || (dif < 0 && cur >= (min-dif))) {
                            cur += dif;
                            label.innerText = ('' + cur);
                            fun_refresh(cur,false);
                        }
                    };

                    control_fwd.addEventListener('click', function() { fun_adjust( 1) });
                    control_bwd.addEventListener('click', function() { fun_adjust(-1) });
                }
            }

            {% if is_granted("ROLE_ADMIN") %}

            let items = document.querySelectorAll('.bank>.item:not(.locked)[x-item-id]');
            for (let i = 0; i < items.length; i++)
                items[i].addEventListener('click', function(ev) {
                    let change = "add";
                    if (ev.ctrlKey)
                        change = "remove";
                    const item_id = this.getAttribute('x-item-id');
                    $.ajax.easySend('{{ path('admin_bank_item', {id: town.id}) }}', {
                            item: item_id, change: change
                        },
                        function () {
                            $.ajax.load(null, '{{ path('admin_town_explorer', {id: town.id, tab: "bank"}) }}', true);
                        }
                    );
                });

            let buildingBtns = document.querySelectorAll("[x-building-admin-action]");
            for(let i = 0 ; i < buildingBtns.length ; i++) {
                buildingBtns[i].addEventListener('click', function() {
                   let action = buildingBtns[i].getAttribute("x-building-admin-action");
                   switch(action) {
                       case "setAp":
                           let ap = null, ap_valid = false;
                           do {
                               ap = window.prompt("{{ 'Baufortschritt setzen:'|trans({},'admin')|e('js') }}", "1");
                               if (ap === null) ap_valid = true;
                               else {
                                   ap = parseInt(ap);
                                   ap_valid = !isNaN(ap) && ap >= 0;
                               }
                           } while (!ap_valid);

                           if (ap === null) return;

                           $.ajax.easySend( '{{ path('admin_town_set_building_ap', {id: town.id }) }}', {'building': buildingBtns[i].getAttribute("x-building-id"), 'ap': ap},
                               function () {
                                   $.ajax.load(null, '{{ path('admin_town_explorer', {id: town.id, tab: "buildings"}) }}', true);
                               } );
                           break;

                       case "setHp":
                           let hp = null, hp_valid = false;
                           do {
                               hp = window.prompt("{{ 'Integrität setzen:'|trans({},'admin')|e('js') }}", "1");
                               if (hp === null) hp_valid = true;
                               else {
                                   hp = parseInt(hp);
                                   hp_valid = !isNaN(hp) && hp >= 0;
                               }
                           } while (!hp_valid);

                           if (hp === null) return;

                           $.ajax.easySend( '{{ path('admin_town_set_building_hp', {id: town.id }) }}', {'building': buildingBtns[i].getAttribute("x-building-id"), 'hp': hp},
                               function () {
                                   $.ajax.load(null, '{{ path('admin_town_explorer', {id: town.id, tab: "buildings"}) }}', true);
                               } );
                           break;

                       case "complete":
                           $.ajax.easySend( '{{ path('admin_town_set_building_ap', {id: town.id }) }}', {'building': buildingBtns[i].getAttribute("x-building-id"), 'ap': 99999999},
                               function () {
                                   $.ajax.load(null, '{{ path('admin_town_explorer', {id: town.id, tab: "buildings"}) }}', true);
                               } );
                           break;
                       case "destroy":
                           $.ajax.easySend( '{{ path('admin_town_set_building_ap', {id: town.id }) }}', {'building': buildingBtns[i].getAttribute("x-building-id"), 'ap': 0},
                               function () {
                                   $.ajax.load(null, '{{ path('admin_town_explorer', {id: town.id, tab: "buildings"}) }}', true);
                               } );
                           break;
                       case "addToTown":
                           $.ajax.easySend("{{ path('admin_town_add_building', {id: town.id }) }}", {
                               'prototype_id': buildingBtns[i].getAttribute("x-prototype-id")
                           },
                           function () {
                               $.ajax.load(null, '{{ path('admin_town_explorer', {id: town.id, tab: "buildings"}) }}', true);
                           } );
                           break;
                   }
                });
            }
            {% endif %}
        })();

        $.html.addEventListenerAll('[x-blackboard-short]','click', (e,elem) => {
            elem.style.display = 'none';
            document.querySelector('[x-blackboard-preview="' + elem.getAttribute('x-blackboard-short') + '"]').style.display = null;
        });
        $.html.addEventListenerAll('[x-blackboard-preview]','click', (e,elem) => {
            elem.style.display = 'none';
            document.querySelector('[x-blackboard-short="' + elem.getAttribute('x-blackboard-preview') + '"]').style.display = null;
        })

    </script>
{% endblock %}