{% extends "ajax/ajax.html.twig" %}

{% from "ajax/admin/widget/displays.twig" import widget_citizen %}
{% from "ajax/admin/widget/controls.twig" import widget_item_creator as item_creator, widget_item_creator_js as item_creator_js %}
{% from "ajax/admin/widget/controls.twig" import widget_picto_creator as picto_creator, widget_picto_creator_js as picto_creator_js %}
{% from "ajax/admin/widget/controls.twig" import widget_status_control as status_control, widget_status_control_js as status_control_js %}
{% from "ajax/admin/widget/controls.twig" import widget_role_control as role_control, widget_role_control_js as role_control_js %}
{% from "ajax/admin/widget/controls.twig" import widget_point_control as point_control, widget_point_control_js as point_control_js %}
{% from "ajax/admin/widget/controls.twig" import widget_profession_control as profession_control, widget_profession_control_js as profession_control_js %}
{% from "ajax/admin/widget/controls.twig" import widget_teleport_control as teleport_control, widget_teleport_control_js as teleport_control_js %}

{% block title %}{{'Stadt {townname}'|trans({'{townname}': town.name}, 'admin')|raw}}{% endblock %}
{% block menu_text %}
    {{parent()}}
    <li class="back-dash" x-ajax-href="{{ url('game_landing') }}">{{ 'Zum Spiel'|trans({},'global') }}</li>
{% endblock %}
{% block ajax %}
    {% macro valuelist(prop,val,raw = false) %}
        <div class="row">
            <div class="padded cell rw-4 note note-lightest">{{ prop }}</div>
            <div class="padded cell rw-8">
                {% if val is same as(true) %}
                    {{ 'Ja'|trans({},'admin') }}
                {% elseif val is same as(false)  %}
                    {{ 'Nein'|trans({},'admin') }}
                {% elseif raw %}
                    {{ val|raw }}
                {% else %}
                    {{ val }}
                {% endif %}
            </div>
        </div>
    {% endmacro %}

    <div class="row">
        <div class="cell padded rw-12">
            <div class="tab-floater">
                <ul class="tabs plain" x-tab-group="admin-town" x-tab-control x-tab-default="{{ tab }}">
                    <li class="tab" x-tab-id="dash"><div class="tab-link"><img src="{{ asset('build/images/icons/planner.gif') }}" alt="" /><span class="hide-md hide-sm hide-lg">{{ 'Übersicht'|trans({},'admin') }}</span></div></li>
                    <li class="tab" x-tab-id="bank"><div class="tab-link"><img src="{{ asset('build/images/icons/home.gif') }}" alt="" /><span class="hide-md hide-sm hide-lg">{{ 'Bank'|trans({},'admin') }}</span></div></li>
                    <li class="tab" x-tab-id="citizens"><div class="tab-link"><img src="{{ asset('build/images/icons/small_human.gif') }}" alt="" /><span class="hide-md hide-sm hide-lg">{{ 'Bürger'|trans({},'admin') }}</span></div></li>
                    <li class="tab" x-tab-id="register"><div class="tab-link"><img src="{{ asset('build/images/icons/small_rp.gif') }}" alt="" /><span class="hide-md hide-sm hide-lg">{{ 'Stadtregister'|trans({},'admin') }}</span></div></li>
                    <li class="tab" x-tab-id="blackboard"><div class="tab-link"><img src="{{ asset('build/images/icons/small_talk.gif') }}" alt="" /><span class="hide-md hide-sm hide-lg">{{ 'Schwarzes Brett'|trans({},'admin') }}</span></div></li>
                    <li class="tab" x-tab-id="estimations"><div class="tab-link"><img src="{{ asset('build/images/item/item_scope.gif') }}" alt="" /><span class="hide-md hide-sm hide-lg">{{ 'Admin-Wachturm'|trans({},'admin') }}</span></div></li>
                {% if is_granted("ROLE_ADMIN") %}
                    <li class="tab" x-tab-id="buildings"><div class="tab-link"><img src="{{ asset('build/images/icons/title/r_buildr.gif') }}" alt="" /><span class="hide-md hide-sm hide-lg">{{ 'Konstruktionen'|trans({},'admin') }}</span></div></li>
                    <li class="tab" x-tab-id="explorer"><div class="tab-link"><img src="{{ asset('build/images/icons/title/r_explo2.gif') }}" alt="" /><span class="hide-md hide-sm hide-lg">{{ 'Ruinenscanner'|trans({},'admin') }}</span></div></li>
                    <li class="tab" x-tab-id="config"><div class="tab-link"><img src="{{ asset('build/images/icons/title/r_rp.gif') }}" alt="" /><span class="hide-md hide-sm hide-lg">{{ 'Regelsatz'|trans({},'admin') }}</span></div></li>
                {% endif %}
                </ul>
            </div>
            {# @var town \App\Entity\Town #}
            <div x-tab-group="admin-town" x-tab-id="dash" x-tab-target>
                <div class="row">
                    <div class="cell padded rw-6 rw-sm-12">
                        {{ _self.valuelist('ID'|trans({},'admin'),         town.id) }}
                        {{ _self.valuelist('Stadtname'|trans({},'admin'),  town.name ~ (town.nameSchema ? ('<br/><span class="small">' ~ town.nameSchema ~ '</span>') : ''), true) }}
                        {{ _self.valuelist('Typ'|trans({},'admin'),        town.type.label|trans({},'game')) }}
                        {{ _self.valuelist('Sprache'|trans({},'admin'),    '<img style="width: 24px" src="' ~ asset("build/images/lang/" ~ town.language ~ ".png") ~ '" alt="" />', true  ) }}
                        {{ _self.valuelist('Geplant für'|trans({},'admin'),town.scheduledFor != null ? town.scheduledFor|format_datetime('short','short') : '--') }}
                        {{ _self.valuelist('Ersteller'|trans({},'admin'),  town.creator != null ? town.creator.name : '--') }}
                        {{ _self.valuelist('Population'|trans({},'admin'), town.population) }}
                        {{ _self.valuelist('Bürger'|trans({},'admin'),     town.citizens|length) }}
                        {{ _self.valuelist('Fortschritt des Aufstands'|trans({},'admin'),     town.insurrectionProgress ~ "%") }}
                        {% if town.strangerEnabled %}
                            {{ _self.valuelist('Fremder'|trans({},'admin'),     town.strangerPower) }}
                        {% endif %}
                        {{ _self.valuelist('Koalitionen'|trans({},'admin'),town.coalizedCitizenCount) }}
                        {{ _self.valuelist('Saison'|trans({},'admin'),     town.season ? town.season.number : '--') }}
                        {{ _self.valuelist('Profiler'|trans({},'admin'),   town.rankingEntry.profilerVersion > 0 ? ('v'~town.rankingEntry.profilerVersion) : ('Nicht installiert'|trans({},'admin'))) }}
                        {{ _self.valuelist('Tag'|trans({},'admin'),        town.day) }}
                        {{ _self.valuelist('Offen'|trans({},'admin'),      town.open ? (town.password ? 'Passwort-geschützt'|trans({},'admin') : true) : false ) }}
                        {{ _self.valuelist('Chaos'|trans({},'admin'),      town.chaos) }}
                        {{ _self.valuelist('Zerstört'|trans({},'admin'),   town.devastated) }}
                        {{ _self.valuelist('Tor offen'|trans({},'admin'),  town.door) }}
                        {{ _self.valuelist('Brunnen'|trans({},'admin'),    town.well) }}
                        {{ _self.valuelist('Quarantäne'|trans({},'game'),  town.attackFails >= 3) }}
                        {{ _self.valuelist('Ranking-Ausschluss'|trans({},'game'),  town.rankingEntry.disabled) }}
                        {{ _self.valuelist('Event-Stadt'|trans({},'ghost'),         town.rankingEntry.event) }}

                        <div class="row">
                            <div class="padded cell rw-4 note note-lightest"><label for="administer-town">{{ 'Stadt administrieren'|trans({},'admin') }}</label></div>
                            <div class="padded cell rw-8">
                                <select id="administer-town" style="width: 100%;">
                                    <option value="">-</option>
                                    {% if is_granted("ROLE_ADMIN") %}
                                        <optgroup label="{{ 'Nächtlicher Angriff'|trans({},'admin') }}">
                                            {% if town.attackFails >= 3 %}
                                                <option value="{{ url('admin_town_manage', {action: 'release', id: town.id}) }}">{{ 'Quarantäne aufheben'|trans({},'admin') }}</option>
                                            {% else %}
                                                <option value="{{ url('admin_town_manage', {action: 'quarantine', id: town.id}) }}">{{ 'Unter Quarantäne stellen'|trans({},'admin') }}</option>
                                            {% endif %}
                                            {% if not town.open %}
                                                <option value="{{ url('admin_town_manage', {action: 'advance', id: town.id}) }}">{{ 'Manueller Tageswechsel'|trans({},'admin') }}</option>
                                            {% endif %}
                                        </optgroup>
                                    {% endif %}
                                    <optgroup label="{{ 'Verwaltung'|trans({},'admin') }}">
                                        {% if is_granted("ROLE_ADMIN") %}
                                            <option value="{{ url('admin_town_manage', {action: 'dice_name', id: town.id}) }}">{{ 'Stadtnamen regenerieren'|trans({},'admin') }}</option>
                                            <option x-alt-url="{{ path('admin_town_list') }}" value="{{ url('admin_town_manage', {action: 'nullify', id: town.id}) }}">{{ 'Annulieren'|trans({},'admin') }}</option>
                                            {% if town.open %}
                                                {% if town.password is not null %}
                                                    <option value="{{ url('admin_town_manage', {action: 'pw_change', id: town.id}) }}" x-query="{{ 'Neues Passwort eingeben.'|trans({},'admin') }}">{{ 'Passwort ändern'|trans({},'admin') }}</option>
                                                    <option value="{{ url('admin_town_manage', {action: 'pw_change', id: town.id}) }}">{{ 'Passwort entfernen'|trans({},'admin') }}</option>
                                                {% else %}
                                                    <option value="{{ url('admin_town_manage', {action: 'pw_change', id: town.id}) }}" x-query="{{ 'Neues Passwort eingeben.'|trans({},'admin') }}">{{ 'Passwort setzen'|trans({},'admin') }}</option>
                                                {% endif %}
                                            {% endif %}
                                            <option value="{{ url('admin_town_manage', {action: 'set_town_base_def', id: town.id}) }}" x-query="{{ 'Neue Basis-Stadtverteidigung:'|trans({},'admin') }}">{{ 'Basis-Stadtverteidigung setzen'|trans({},'admin') }}</option>
                                            <option value="{{ url('admin_town_manage', {action: 'set_town_temp_def', id: town.id}) }}" x-query="{{ 'Neue temporäre Stadtverteidigung:'|trans({},'admin') }}">{{ 'Temporäre Stadtverteidigung setzen'|trans({},'admin') }}</option>
                                        {% endif %}
                                        {% if is_granted("ROLE_CROW") %}
                                            {% if town.rankingEntry.event %}
                                                <option value="{{ url('admin_town_event_tag_control', {tid: town.rankingEntry.id, act: 0}) }}">{{ 'Event-Markierung entfernen'|trans({},'admin') }}</option>
                                            {% else %}
                                                <option value="{{ url('admin_town_event_tag_control', {tid: town.rankingEntry.id, act: 1}) }}">{{ 'Als Event-Stadt markieren'|trans({},'admin') }}</option>
                                            {% endif %}
                                            {% if town.rankingEntry.disabled %}
                                                <option value="{{ url('admin_town_town_ranking_control', {tid: town.rankingEntry.id, act: 0}) }}">{{ 'Ranking-Ausschluss zurücknehmen'|trans({},'admin') }}</option>
                                            {% else %}
                                                <option value="{{ url('admin_town_town_ranking_control', {tid: town.rankingEntry.id, act: 1}) }}">{{ 'Diese Stadt aus dem Ranking ausschließen'|trans({},'admin') }}</option>
                                            {% endif %}
                                        {% endif %}
                                    </optgroup>
                                    {% if is_granted("ROLE_ADMIN") %}
                                        {% if app.environment == 'dev' %}
                                            <optgroup label="Debug">
                                                {% set ctz_engaged = 0 %}
                                                {% set ctz_disengaged = 0 %}
                                                {% for cur_citizen in town.citizens %}
                                                    {% if cur_citizen.alive and cur_citizen.active %}
                                                        {% set ctz_engaged = ctz_engaged + 1 %}
                                                    {% elseif cur_citizen.alive and not cur_citizen.active %}
                                                        {% set ctz_disengaged = ctz_disengaged + 1 %}
                                                    {% endif %}
                                                {% endfor %}
                                                {% if town.population > town.citizenCount %}
                                                    <option value="{{ url('admin_town_manage', {action: 'dbg_enable_stranger', id: town.id}) }}">{{ 'Mysteriösen Fremden aktivieren'|trans({},'admin') }}</option>
                                                    <option value="{{ url('admin_town_manage', {action: 'dbg_fill_town', id: town.id}) }}">{{ 'Stadt füllen'|trans({},'admin') }}</option>
                                                {% endif %}
                                                <option value="{{ url('admin_town_manage', {action: 'dbg_fill_bank', id: town.id}) }}">{{ 'Bank füllen'|trans({},'admin') }}</option>
                                                <option value="{{ url('admin_town_manage', {action: 'dbg_empty_bank', id: town.id}) }}">{{ 'Bank leeren'|trans({},'admin') }}</option>
                                                <option value="{{ url('admin_town_manage', {action: 'dbg_unlock_bank', id: town.id}) }}">{{ 'Banksperre aufheben'|trans({},'admin') }}</option>
                                                <option value="{{ url('admin_town_manage', {action: 'dbg_hydrate', id: town.id}) }}">{{ 'Durst aufheben'|trans({},'admin') }}</option>
                                                {% if ctz_engaged > 0 %}
                                                    <option value="{{ url('admin_town_manage', {action: 'dbg_disengage', id: town.id}) }}">{{ 'Alle Spieler entkoppeln'|trans({},'admin') }}</option>
                                                {% endif %}
                                                {% if ctz_disengaged > 0 %}
                                                    <option value="{{ url('admin_town_manage', {action: 'dbg_engage', id: town.id}) }}">{{ 'Alle Spieler koppeln'|trans({},'admin') }}</option>
                                                {% endif %}
                                                <option value="{{ url('admin_town_manage', {action: 'dbg_set_well', id: town.id}) }}" x-query="{{ 'Neuer Füllstand:'|trans({},'admin') }}">{{ 'Brunnen-Füllstand setzen'|trans({},'admin') }}</option>
                                                <option value="{{ url('admin_town_manage', {action: 'dbg_unlock_buildings', id: town.id}) }}">{{ 'Alle Gebäude freischalten'|trans({},'admin') }}</option>
                                                <option value="{{ url('admin_town_manage', {action: 'dbg_map_progress', id: town.id}) }}" x-query="{{ 'Basierend auf Tag (frei lassen, um aktuellen Tag zu verwenden)'|trans({},'admin') }}">{{ 'Zombie-Spread ausführen'|trans({},'admin') }}</option>
                                                <option value="{{ url('admin_town_manage', {action: 'dbg_map_zombie_set', id: town.id}) }}" x-query="{{ 'Format: "{x0}/{y0}:{x1}/{y1},{zombies}" (Bereich) oder "{x}/{y},{zombies}" (einzelne Zone), zum Beispiel "-1/3:-4/2,5". Statt der Positionsangabe kann "all" verwendet werden. Statt einem numerischen Wert für die Zahl der Zombies ist folgendes ebenfalls gültig: "today" (Anzahl der Zombies beim letzten Tageswechsel), "initial" (Anzahl der Zombies an Tag 1).'|trans({},'admin') }}">{{ 'Zombies setzen'|trans({},'admin') }}</option>
                                                <option value="{{ url('admin_town_manage', {action: 'dbg_adv_days', id: town.id}) }}" x-query="{{ 'Anzahl der Tage'|trans({},'admin') }}">{{ 'Vorspulen'|trans({},'admin') }}</option>
                                                <option value="{{ url('admin_town_manage', {action: 'dbg_set_attack', id: town.id}) }}" x-query="{{ 'Format: {zombies} (heutiger Angriff) oder {tag}:{zombies} (Angriff an einem bestimmten Tag). Es können keine Tage in der Vergangenheit gewählt werden.'|trans({},'admin') }}">{{ 'Stärke des Angriffs setzen'|trans({},'admin') }}</option>
                                                {% if town.chaos and not town.devastated %}
                                                    <option value="{{ url('admin_town_manage', {action: 'dbg_toggle_chaos', id: town.id}) }}" x-param="0">{{ 'Chaos-Modus deaktivieren'|trans({},'admin') }}</option>
                                                {% elseif not town.chaos %}
                                                    <option value="{{ url('admin_town_manage', {action: 'dbg_toggle_chaos', id: town.id}) }}" x-param="1">{{ 'Chaos-Modus'|trans({},'admin') }}</option>
                                                {% endif %}
                                                {% if town.devastated %}
                                                    <option value="{{ url('admin_town_manage', {action: 'dbg_toggle_devas', id: town.id}) }}" x-param="0">{{ 'Stadt reparieren'|trans({},'admin') }}</option>
                                                {% else %}
                                                    <option value="{{ url('admin_town_manage', {action: 'dbg_toggle_devas', id: town.id}) }}" x-param="1">{{ 'Stadt zerstören'|trans({},'admin') }}</option>
                                                {% endif %}
                                            </optgroup>
                                        {% endif %}

                                    {% endif %}
                                </select>
                                <div id="execute_button" class="button inline small">{{ 'Ausführen'|trans({},'admin') }}</div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="padded cell rw-4 note note-lightest"><label for="activate-event">{{ 'Stadt-Event'|trans({},'admin') }}</label></div>
                            <div class="padded cell rw-8">
                                <select id="activate-event">
                                    <option value="">{{ "Kein"|trans({}, 'global') }}</option>
                                    {% for eventName,event in events %}
                                        <option value="{{ eventName }}" x-param="{{ eventName }}" {% if current_event is not null and current_event[0].name == eventName %}selected{% endif %}>{{ event.conf.name|trans({}, 'game') }}</option>
                                    {% endfor %}
                                </select>
                                <div id="set_event_button" class="button inline small">{{ 'Ausführen'|trans({},'admin') }}</div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="padded cell rw-4 note note-lightest"><label for="switch-language">{{ 'Sprache wechseln'|trans({},'admin') }}</label></div>
                            <div class="padded cell rw-8">
                                <select id="switch-language">
                                    {% for lang in langs %}
                                        {% if lang != town.language %}
                                            <option x-param="{{ lang }}" value="{{ lang }}">{{ lang }}</option>
                                        {% endif %}
                                    {% endfor %}
                                </select>
                                <div id="set_language_button" class="button inline small">{{ 'Ausführen'|trans({},'admin') }}</div>
                            </div>
                        </div>

                    </div>
                    <div class="cell padded rw-6 rw-sm-12">
                        {% embed "ajax/admin/towns/map.html.twig" with {'default_zoom': 0, 'default_show_zone': false, 'allow_zone_view': false, 'map': map_data} %}
                        {% endembed %}
                        {% if is_granted("ROLE_ADMIN") %}
                            <div id="zone_floor"></div>
                            <div id="dash_zone_generator" x-target="zone" x-id="">
                                {{ item_creator(itemPrototypes, 'zone') }}
                            </div>
                            <div class="lightbox">
                                <div class="row">
                                    <div class="cell rw-12 padded">
                                        <label for="zone_digs">{{ 'Verbleibe Zonengrabungen:'|trans({}, 'admin') }}</label>
                                    </div>
                                    <div class="cell padded">
                                        <input type="number" id="zone_digs" class="inline" />
                                    </div>
                                    <div class="cell padded">
                                        <button id="zone_dig_set" class="inline"><i class="fa fa-hand-point-down"></i><div class="tooltip">{{'Setzen'|trans({}, 'admin')}}</div></button><br />
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="cell rw-12 padded">
                                        <label for="ruin_digs">{{ 'Verbleibende Ruinengrabungen:'|trans({}, 'admin') }}</label>
                                    </div>
                                    <div class="cell padded">
                                        <input type="number" id="ruin_digs" class="inline" />
                                    </div>
                                    <div class="cell padded">
                                        <button id="ruin_dig_set" class="inline"><i class="fa fa-hand-point-down"></i><div class="tooltip">{{'Setzen'|trans({}, 'admin')}}</div></button><br />
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="cell rw-12 padded">
                                        <label for="ruin_bury">{{ 'AP zum Freilegen der Ruine:'|trans({}, 'admin') }}</label>
                                    </div>
                                    <div class="cell padded">
                                        <input type="number" id="ruin_bury" class="inline" />
                                    </div>
                                    <div class="cell padded">
                                        <button id="ruin_bury_set" class="inline"><i class="fa fa-hand-point-down"></i><div class="tooltip">{{'Setzen'|trans({}, 'admin')}}</div></button><br />
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="cell rw-12 padded">
                                        <label for="ruin_camp_level">{{ 'Camping-Ausbaulevel:'|trans({}, 'admin') }}<div class="small hidden" id="ruin_camp_base">{{ 'Basis:'|trans({}, 'admin') }} <span></span></div></label>
                                    </div>
                                    <div class="cell padded">
                                        <input type="number" step="0.1" id="ruin_camp_level" class="inline" />
                                    </div>
                                    <div class="cell padded">
                                        <button id="ruin_camp_level_set" class="inline"><i class="fa fa-hand-point-down"></i><div class="tooltip">{{'Setzen'|trans({}, 'admin')}}</div></button><br />
                                    </div>
                                </div>
                            </div>
                            <div id="dash_zone_log"></div>
                        {% endif %}
                    </div>
                </div>
            </div>

            <div x-tab-group="admin-town" x-tab-id="bank" x-tab-target>
                <div class="row">
                    <div x-target="bank" x-id="{{ town.id }}" class="padded cell rw-6 rw-md-12">
                        {% if is_granted("ROLE_ADMIN") %}
                            <div class="lightbox">
                                {{ 'Aktion bei Klick:'|trans({}, 'admin') }}
                                <div class="note note-lightest">
                                    <input type="radio" name="itemAction" id="add" value="add" checked /><label for="add">{{ 'Hinzufügen'|trans({}, 'admin') }}</label>
                                    <input type="radio" name="itemAction" id="remove" value="remove" /><label for="remove">{{ 'Entfernen' |trans({}, 'global') }}</label>
                                    x <input type="number" id="itemActionQty" value="1" class="inline" />
                                </div>
                            </div>
                        {% endif %}
                        {% embed "ajax/game/inventory.html.twig" with {'size': 0, 'items': bank, 'bankmode': true, 'debug': is_granted("ROLE_ADMIN")} %}
                            {% block class %}bank{% endblock %}
                            {% block title %}{% endblock %}
                        {% endembed %}
                    </div>
                    <div class="padded cell rw-6 rw-md-12">
                        {% if is_granted("ROLE_ADMIN") %}
                            {{ item_creator(itemPrototypes, 'bnk', true) }}
                        {% endif %}
                    </div>
                </div>
            </div>

            <div x-tab-group="admin-town" x-tab-id="citizens" x-tab-target>
                <div class="row">
                    <div class="cell padded rw-6 rw-md-12">
                        <div class="row-table citizens-list">
                            <div class="row header">
                                <div class="padded cell rw-1">
                                    <label class="pointer">
                                        {{'Rucksack'|trans({}, 'admin')|slice(0,1)}}
                                        <input class="hidden" type="checkbox" x-all="1" x-target="rucksack" />
                                    </label>
                                    <div class="tooltip help">{{'Rucksack'|trans({}, 'admin')}}</div>
                                </div>
                                <div class="padded cell rw-1">
                                    <label class="pointer">
                                        {{'Truhe'|trans({}, 'admin')|slice(0,1)}}
                                        <input class="hidden" type="checkbox" x-all="1" x-target="chest" />
                                    </label>
                                    <div class="tooltip help">{{'Truhe'|trans({}, 'admin')}}</div>
                                </div>
                                <div class="padded cell rw-1">
                                    <label class="pointer">
                                        {{'Zone'|trans({}, 'admin')|slice(0,1)}}
                                        <input class="hidden" type="checkbox" x-all="1" x-target="zone" />
                                    </label>
                                    <div class="tooltip help">{{'Zone'|trans({}, 'admin')}}</div>
                                </div>
                                <div class="padded cell left rw-9">
                                    <label class="pointer">
                                        {{ 'Bürger'|trans({},'game') }}
                                        <input class="hidden" type="checkbox" x-all="1" x-target="status" />
                                    </label>
                                </div>
                            </div>
                            {% for citizen in town.citizens|sort((a,b) => (a.alive == b.alive) ? ((a.alive) ? a.name|lower <=> b.name|lower : b.survivedDays <=> a.survivedDays) : b.alive <=> a.alive) %}
                                {# @var \App\Entity\Citizen citizen  #}
                                <div x-citizen-id="{{ citizen.id }}" class="row-flex stretch pointer citizen-main" style="max-height: 100px; overflow: hidden">
                                    <div class="cell rw-1">
                                    {% if citizen.alive %}
                                        <label><input type="checkbox" x-id="{{ citizen.id }}" x-target="rucksack" /></label>
                                        <div class="tooltip normal">
                                            <em>{{ 'Rucksack'|trans({},'admin') }}</em><br />
                                            {% for item in citizen.inventory.items %}
                                                {# @var \App\Entity\Item item #}
                                                <img alt="{{ item.prototype.label|trans({},'items') }}" src="{{ asset('build/images/item/item_' ~ item.prototype.icon ~ '.gif') }}" />
                                            {% endfor %}
                                        </div>
                                    {% endif %}
                                    </div>
                                    <div class="cell rw-1">
                                        <label><input type="checkbox" x-id="{{ citizen.home.id }}" x-target="chest" /></label>
                                        <div class="tooltip normal">
                                            {% if citizen.home.chest.items|length == 0 %}
                                                <em>{{ 'Leere Truhe'|trans({},'admin') }}</em>
                                            {% else %}
                                                <em>{{ 'Truhe'|trans({},'admin') }}</em><br />
                                            {% endif %}
                                            {% for item in citizen.home.chest.items %}
                                                {# @var \App\Entity\Item item #}
                                                <img alt="{{ item.prototype.label|trans({},'items') }}" src="{{ asset('build/images/item/item_' ~ item.prototype.icon ~ '.gif') }}" />
                                            {% endfor %}
                                        </div>
                                    </div>
                                    <div class="cell rw-1">
                                        {% if citizen.alive and citizen.zone and (citizen.zone.x != 0 or citizen.zone.y != 0) %}
                                            <label><input type="checkbox" x-id="{{ citizen.zone.id }}" x-target="zone" /></label>
                                            <div class="tooltip normal">
                                                {% if citizen.zone.floor.items|length == 0 %}
                                                    <em>{{ 'Leere Zone'|trans({},'admin') }}</em>
                                                {% else %}
                                                    <em>{{ 'Zone'|trans({},'admin') }}</em><br />
                                                {% endif %}
                                                {% for item in citizen.zone.floor.items %}
                                                    {# @var \App\Entity\Item item #}
                                                    <img alt="{{ item.prototype.label|trans({},'items') }}" src="{{ asset('build/images/item/item_' ~ item.prototype.icon ~ '.gif') }}" />
                                                {% endfor %}
                                            </div>
                                        {% endif %}
                                    </div>
                                    <div class="cell rw-1">
                                        {% if citizen.alive %}
                                            <label><input type="checkbox" x-id="{{ citizen.id }}" x-target="status" /></label>
                                            <div class="tooltip normal">{{ widget_citizen(citizen) }}</div>
                                        {% endif %}
                                    </div>
                                    <div style="align-self: center" class="cell factor-0">
                                        {% if citizen.user.language is null %}
                                            <img style="width: 16px" class="float-right" src="{{ asset("build/images/lang/multi.png") }}" alt="multi" />
                                        {% else %}
                                            <img style="width: 16px" class="float-right" src="{{ asset("build/images/lang/" ~ citizen.user.language ~ ".png") }}" alt="{{ citizen.user.language }}" />
                                        {% endif %}
                                    </div>
                                    <div class="cell factor-0 rw-sm-0 avatar ua-{{ random(0,9) }}" style="flex-basis: 92px; background: url('{{ citizen.user.avatar ? path('app_web_avatar', {'uid': citizen.user.id, 'name': citizen.user.avatar.smallName, 'ext': citizen.user.avatar.format}) : asset('build/images/forum/empty_avatar.gif') }}') center/cover no-repeat;" x-ajax-href="{{ url('admin_users_citizen_view', {id: citizen.user.id}) }}">&nbsp;</div>
                                    <div class="cell factor-0 citizen-{{ citizen.alive ? (citizen.online ? 'online' : 'offline') : 'dead' }}" style="flex-basis: 8px;" x-ajax-href="{{ url('admin_users_citizen_view', {id: citizen.user.id}) }}">&nbsp;</div>
                                    
                                    <div class="padded cell rw-4 factor-1 small content-center-vertical citizen-box citizen-box-name">
                                        {% if citizen.banished %}
                                        <img alt="" src="{{ asset('build/images/icons/banished.gif') }}" />
                                        {% endif %}
                                        {% if not citizen.alive %}
                                        <span>
                                            <img alt="{{ 'Tot!'|trans({},'game') }}" src="{{ asset('build/images/professions/death.gif') }}" />
                                            <div class="tooltip">
                                                {{ citizen.causeOfDeath.label|trans({}, 'game') }} - {{ 'Tag'|trans({}, "admin") }} {{ citizen.survivedDays }}
                                            </div>
                                        </span>
                                        {% endif %}
                                        
                                        {% if citizen.profession.heroic %}
                                            <img alt="" src="{{ asset('build/images/professions/hero.gif') }}" />
                                        {% else %}
                                            <img alt="" src="{{ asset('build/images/professions/void.gif') }}" />
                                        {% endif %}
                                        <img alt="{{ citizen.profession.label|trans({},'game') }}" src="{{ asset('build/images/professions/' ~ citizen.profession.icon ~ '.gif') }}" />
                                        <a class="link" href="{{ url('admin_users_citizen_view', {id: citizen.user.id}) }}">
                                            <b class="citizen-name">{{ citizen.name }}</b>
                                        </a>&nbsp;
                                        {% for role in citizen.roles %}
                                            <img src="{{ asset('build/images/roles/' ~ role.icon ~ '.gif') }}" alt="{{ role.label|trans({},'game') }}">&nbsp;
                                        {% endfor %}
                                        {% if citizen.alive %}
                                            <span class="zone">
                                            {% if citizen.zone %}
                                                [{{citizen.zone.x}},{{citizen.zone.y}}]
                                            {% endif %}
                                            </span>
                                        {% endif %}
                                        {% if citizen.home.description is not null or (citizen.lastWords is not null and citizen.lastWords != '') %}
                                            <div>
                                                <img src="{{ asset('build/images/forum/r_forum.gif') }}" alt="" />
                                                <div class="tooltip normal">
                                                    {% if citizen.home.description is not null and citizen.home.description != '' %}
                                                    {{ 'Persönliche Beschreibung:'|trans({},'admin') }} {{ citizen.home.description }}<br />
                                                    {% endif %}
                                                    {% if not citizen.alive and citizen.lastWords is not null and citizen.lastWords != '' %}
                                                        {{ "Letzte Worte:"|trans({}, 'admin') }} {{ citizen.lastWords }}
                                                    {% endif %}
                                                </div>
                                            </div>
                                        {% endif %}
                                    </div>
                                </div>
                                <div x-citizen-id="{{ citizen.id }}" class="row hidden citizen-details">
                                    <div class="cell rw-12">
                                        <div class="row">
                                            <div class="padded cell rw-12 hidden">
                                                <div class="invTargetDesc lightbox"></div>
                                                <button data-clear="citizen-custom-message" class="small inline float-right">{{ 'Löschen'|trans({},'admin') }}</button>
                                            </div>
                                            <div class="padded cell rw-6"><div class="invTargetRucksack"></div></div>
                                            <div class="padded cell rw-6"><div class="invTargetChest"></div></div>
                                            <div class="padded cell rw-12 soul"><div class="invTargetPictos"></div></div>
                                        </div>
                                    </div>
                                </div>
                            {% endfor %}
                        </div>
                        <div class="row-flex v-center space">
                            <div class="padded cell factor-0 center">
                                <img src="{{ asset("build/images/lang/" ~ town.language ~ ".png") }}" alt="{{ town.language }}" /><br/>
                                {{ 'Stadt'|trans({}, 'game') }}
                            </div>
                            <div class="cell factor-1"></div>
                            {% for lang, count in citizen_langs_alive %}
                                <div class="padded cell factor-0 center">
                                    <img src="{{ asset("build/images/lang/" ~ lang ~ ".png") }}" alt="{{ lang }}" /><br/>
                                    <b>{{ count }}</b><br />
                                    <span class="small">{{ citizen_langs[lang] }}</span>
                                </div>
                            {% endfor %}
                        </div>
                    </div>
                    <div class="cell rw-6 rw-md-12 padded">
                        {% if is_granted("ROLE_ADMIN") %}
                        <div class="padded cell">
                            {{ item_creator(itemPrototypes, 'ctz') }}
                            <hr />
                            {{ teleport_control() }}
                            <hr />
                            {{ picto_creator(pictoPrototypes) }}
                            <hr />
                            {{ profession_control(citizenProfessions) }}
                            <hr />
                            <div class="row">
                                <div class="cell rw-6 rw-md-12">{{ status_control(citizenStati) }}</div>
                                <div class="cell rw-6 rw-md-12">{{ role_control(citizenRoles) }}</div>
                            </div>
                            <hr />
                            {{ point_control() }}
                        </div>
                        <div class="padded cell">
                            <h5>{{ 'Anzeigen'|trans({}, 'admin') }}</h5>
                            <ul>
                            {% for culprit, complaint in complaints %}
                                <li>{{ 'Gegen {culprit}'|trans({'{culprit}': "<strong>" ~ culprit ~ "</strong>"}, 'admin')|raw }}
                                    <ul>
                                    {% for cmp in complaint|sort((a,b) => a.autor.name <=> b.autor.name) %}
                                        <li>{{ cmp.autor.name }} : {{ cmp.linkedReason.text|trans({}, 'game') }}</li>
                                    {% endfor %}
                                    </ul>
                                </li>
                            {% endfor %}
                            </ul>
                                <div class="log">
                                    <div class="log-content">
                                        {% for log_complaint in all_complaints %}
                                            <div class="log-entry log-entry log-entry-type-8 log-entry-class-{{ log_complaint.on ? 1 : 3 }}">
                                                <span class="log-part-time" style="width: 120px">{{ log_complaint.time|format_datetime('medium', 'short') }}</span>
                                                <span class="log-part-content">
                                                    <span>{{ log_complaint.from.name }}</span> <i class="fa fa-arrow-right"></i> <span>{{ log_complaint.to.name }}</span>
                                                    (<i>{{ log_complaint.reason.text|trans({}, 'game') }}</i>)
                                                </span>
                                            </div>
                                        {% endfor %}
                                    </div>
                                </div>
                        </div>
                        <div class="padded cell">
                            <h5>{{ 'Stimmen'|trans({}, 'admin') }}</h5>
                            <ul>
                                {% for role in citizenRoles %}
                                    {% if role.votable %}
                                    <li>{{ role.label|trans({}, 'game')|raw }}
                                        <ul>
                                            {% for target, autors in votes[role.id]|sort %}
                                                <li>{{ 'Für {target}'|trans({"{target}": target}, 'admin') }}
                                                    <ul>
                                                        {% for autor in autors %}
                                                        <li>{{ autor.name }}</li>
                                                        {% endfor %}
                                                    </ul>
                                                </li>
                                            {% endfor %}
                                        </ul>
                                    </li>
                                    {% endif %}
                                {% endfor %}
                            </ul>
                        </div>
                        <br />
                        {% endif %}
                        {% if is_granted("ROLE_ADMIN") %}
                            <button id="dropall">{{ 'Alle Gegenstände aller Bürger ablegen'|trans({},'admin') }}</button>
                        {% endif %}
                        <button id="townpm">{{ 'Rundmail als Rabe'|trans({},'admin') }}</button>
                        <input type="hidden" id="pmidrecipient" value="{{ town.id }}">
                        <div id="forum-content"></div>

                    </div>
                </div>
            </div>

            <div x-tab-group="admin-town" x-tab-id="register" x-tab-target>
                <div class="row">
                    <div class="padded cell rw-4 ro-4 rw-md-8 ro-md-2 rw-sm-12 ro-sm-0">
                        <label><select id="gazetteSelector">
                            {% for d in 1..town.day %}
                                <option {% if d == town.day %}selected{% endif %} value="{{ path('admin_town_explorer_gazette', {day: d, id: town.id}) }}">{{ 'Tag {d} {today}'|trans({d: d, today: ''}, 'game') }}</option>
                            {% endfor %}
                        </select></label>
                    </div>
                </div>

                <div id="gazette-target">
                    {% embed "ajax/game/gazette_widget.html.twig" with { gazette: gazette, council: council } %}
                    {% endembed %}
                </div>

                {% embed "ajax/admin/towns/log.html.twig" with {'log_content': log, 'log_source': path('admin_newspaper_log_controller') } %}
                {% endembed %}

                <br/>
                <h1 class="page-head">{{ 'Register herunterladen'|trans({},'admin') }}</h1>
                <div class="row">
                    <div class="padded cell rw-12"><a href="{{ path('admin_townlog', {id: town.id, type: 'register'}) }}"><i class="fa fa-file"></i> {{ 'Stadtregister herunterladen'|trans({},'admin') }}</a></div>
                    <div class="padded cell rw-12"><a href="{{ path('admin_townlog', {id: town.id, type: 'zones'}) }}"><i class="fa fa-file"></i> {{ 'Stadt- und Zonenregister herunterladen (gruppiert nach Zonen)'|trans({},'admin') }}</a></div>
                    <div class="padded cell rw-12"><a href="{{ path('admin_townlog', {id: town.id, type: 'citizens'}) }}"><i class="fa fa-file"></i> {{ 'Stadt- und Zonenregister herunterladen (gruppiert nach Bürgern)'|trans({},'admin') }}</a></div>
                    <div class="padded cell rw-12"><a href="{{ path('admin_townlog', {id: town.id, type: 'all'}) }}"><i class="fa fa-file"></i> {{ 'Stadt- und Zonenregister herunterladen (chronologisch)'|trans({},'admin') }}</a></div>
                </div>
            </div>

            <div x-tab-group="admin-town" x-tab-id="blackboard" x-tab-target>
                <div class="row-table">
                    <div class="row header">
                        <div class="padded cell rw-3">{{ 'Benutzername'|trans({},'admin') }}</div>
                        <div class="padded cell rw-6">{{ 'Info'|trans({},'admin') }}</div>
                        <div class="padded cell rw-3"><button x-api-trigger="{{ url('admin_town_manage', {action: 'clear_bb', id: town.id}) }}">{{ 'Löschen'|trans({},'admin') }}</button></div>
                    </div>
                    {% for entry in blackboards %}
                        <div class="row">
                            <div class="padded cell rw-3">
                                <a class="link" target="_blank" href="{{ url('admin_users_account_view', {id: entry.user.id}) }}">{{ entry.user.name }}</a><br />
                                <i>{{ entry.time|format_datetime('medium', 'short') }}</i>
                            </div>
                            <div class="padded cell rw-9 pointer" x-blackboard-short="{{ entry.id }}">{{ entry.text }}</div>
                            <div class="padded cell rw-9 pointer" x-blackboard-preview="{{ entry.id }}" style="display:none">
                                <div class="words-of-heroes"><div class="content">{{ entry.text|nl2br }}</div></div>
                            </div>
                        </div>
                    {% endfor %}
                </div>
            </div>

            <div x-tab-group="admin-town" x-tab-id="estimations" x-tab-target>
                <div class="row-table">
                    <div class="row header">
                        <div class="cell rw-1 rw-sm-0 padded"></div>
                        <div class="cell rw-1 rw-sm-0 padded">{{ 'ID'|trans({},'admin') }}</div>
                        <div class="cell rw-1 rw-sm-0 padded">{{ 'Tag'|trans({},'admin') }}</div>
                        <div class="cell rw-2 rw-sm-12 padded">{{ 'Angriff'|trans({},'admin') }}</div>
                        <div class="cell rw-2 rw-sm-0 padded">{{ 'Bereich Min'|trans({},'admin') }}</div>
                        <div class="cell rw-2 rw-sm-0 padded">{{ 'Bereich Max'|trans({},'admin') }}</div>
                    </div>
                    {% for est in town.zombieEstimations %}
                        <div class="row {% if est.day == town.day %}bold{% endif %}">
                            <div class="padded cell rw-1 rw-sm-2">{% if est.day == town.day %}<i class="fa fa-arrow-right"></i>{% endif %}</div>
                            <div class="padded cell rw-1 rw-sm-0">{{ est.id }}</div>
                            <div class="padded cell rw-1 rw-sm-10">{{ est.day }}</div>
                            {% if is_granted("ROLE_ADMIN") or est.day < town.day %}
                                <div class="padded cell rw-2 rw-sm-4">{{ est.zombies }}</div>
                                <div class="padded cell rw-2 rw-sm-4">{{ est.offsetMin }}%</div>
                                <div class="padded cell rw-2 rw-sm-4">{{ est.offsetMax }}%</div>
                            {% endif %}
                        </div>
                    {% endfor %}
                </div>
            </div>

            {% if is_granted("ROLE_ADMIN") %}
                <div x-tab-group="admin-town" x-tab-id="explorer" x-tab-target>
                    {% for exploration in explorables %}
                        <div class="row">
                            <div class="cell rw-6 rw-md-12 padded">
                                <h5>{{ exploration.z.prototype.label|trans({},'game') }} - {{ exploration.z.x }}/{{ exploration.z.y }}</h5>
                                <div class="adm-exploration">
                                    {% for rz in exploration.rz %}
                                        <div class="rz {% if rz.prototype %}rz-{{ rz.locked ? 'locked' : 'unlocked' }}{% endif%} rz-{{ rz.distance > conf.get(constant('App\\Structures\\TownConf::CONF_EXPLORABLES_LOCKDIST')) ? 'far' : 'close' }} rz-{{ rz.corridor }} {% if rz.zombies > 0 %}rz-zeds{% endif %}" style="top:{{ rz.y * 20 }}px;left:{{ rz.x * 20 }}px;">
                                            {% if rz.corridor != 0 %}
                                                <div class="tooltip ndynamic">
                                                    {{ _self.valuelist('ID'|trans({},'admin'), rz.id) }}
                                                    {{ _self.valuelist('Position'|trans({},'admin'), rz.x ~ ' / ' ~ rz.y) }}
                                                    {{ _self.valuelist('Distanz'|trans({},'admin'), rz.distance) }}
                                                    {{ _self.valuelist('Zombies'|trans({},'admin'), rz.zombies) }}
                                                    {% if rz.prototype %}
                                                        {% if rz.locked %}
                                                            {{ _self.valuelist('Abdruck'|trans({},'admin'), rz.prototype.keyImprint.label|trans({},'items')) }}
                                                            {{ _self.valuelist('Schlüssel'|trans({},'admin'), rz.prototype.keyItem.label|trans({},'items')) }}
                                                        {% else %}
                                                            {{ _self.valuelist('Durchsucht'|trans({},'admin'), rz.digs) }}
                                                        {% endif %}
                                                    {% endif %}
                                                </div>
                                            {% endif %}
                                        </div>
                                    {% endfor %}
                                </div>
                            </div>
                            <div class="cell rw-6 rw-md-12 padded">
                                <h5>{{ 'Aktuelle Sitzung'|trans({},'admin') }}</h5>
                                {% if exploration.ax %}
                                    {{ _self.valuelist('Spieler'|trans({},'admin'), exploration.ax.citizen.name) }}
                                    {{ _self.valuelist('Position'|trans({},'admin'), exploration.ax.x ~ ' / ' ~ exploration.ax.y ) }}
                                    {{ _self.valuelist('Flucht'|trans({},'admin'), exploration.ax.escaping ) }}
                                    {{ _self.valuelist('Raum'|trans({},'admin'), exploration.ax.inRoom ) }}
                                    <div class="row">
                                        <div class="padded cell rw-4 note note-lightest"><b>{{ 'Zeit'|trans({},'admin') }}</b></div>
                                        <div class="padded cell rw-8"><span x-countdown="{{ exploration.axt }}">...</span></div>
                                    </div>
                                    <div class="row">
                                        <div class=" padded cell rw-4 note note-lightest"><b>{{ 'Aktionen'|trans({},'admin') }}</b></div>
                                        <div class=" padded cell rw-8">
                                            <button x-ex-action="{{ url('admin_town_manage', {action: 'ex_co+', id: town.id}) }}" x-ex-session="{{ exploration.ax.id }}" class="small inline"><i class="fa fa-door-open"></i><div class="tooltip">{{ 'Herauswerfen (ohne Verletzung)'|trans({},'admin') }}</div></button>
                                            <button x-ex-action="{{ url('admin_town_manage', {action: 'ex_co-', id: town.id}) }}" x-ex-session="{{ exploration.ax.id }}" class="small inline"><i class="fa fa-door-closed"></i><div class="tooltip">{{ 'Herauswerfen (mit Verletzung)'|trans({},'admin') }}</div></button>
                                            <button x-ex-action="{{ url('admin_town_manage', {action: 'ex_ref', id: town.id}) }}" x-ex-session="{{ exploration.ax.id }}" class="small inline"><i class="fa fa-plus"></i><div class="tooltip">{{ 'Timer erhöhen (1min)'|trans({},'admin') }}</div></button>
                                            {% if app.environment == 'dev' %}
                                                <button x-ex-action="{{ url('admin_town_manage', {action: 'ex_inf', id: town.id}) }}" x-ex-session="{{ exploration.ax.id }}" class="small inline"><i class="fa fa-plus-circle"></i><div class="tooltip">{{ 'Timer erhöhen (24h)'|trans({},'admin') }}</div></button>
                                            {% endif %}
                                        </div>
                                    </div>
                                {% endif %}
                                <h5>{{ 'Alle Sitzungen'|trans({},'admin') }}</h5>
                                {% for x in exploration.x %}
                                    <div class="row">
                                        <div class="cell rw-12 padded">
                                            {{ x.citizen.name }}
                                            <button x-ex-action="{{ url('admin_town_manage', {action: 'ex_del', id: town.id}) }}" x-ex-session="{{ x.id }}" class="small inline float-right"><i class="fa fa-recycle"></i><div class="tooltip">{{ 'Löschen (ermöglicht erneutes Betreten der Ruine)'|trans({},'admin') }}</div></button>
                                        </div>
                                    </div>
                                {% endfor %}
                            </div>
                        </div>
                    {% endfor %}
                </div>

                <div x-tab-group="admin-town" x-tab-id="config" x-tab-target>
                    <div class="row-table">
                        <div class="row-flex header">
                            <div class="cell rw-4 padded">{{ 'Regel'|trans({},'admin') }}</div>
                            <div class="cell rw-4 padded">{{ 'Aktiver Wert'|trans({},'admin') }}</div>
                            <div class="cell rw-4 padded">
                                <label for="compare_conf_to">{{ 'Vergleichswert'|trans({},'admin') }}</label>
                                <br />
                                <select id="compare_conf_to">
                                    <option {% if opt_conf == 'none' or opt_conf is null %}selected{% endif %} value="{{ path('admin_town_explorer', {id: town.id, tab: 'config', conf: 'none'}) }}">{{ 'Keiner'|trans({},'admin') }}</option>
                                    <option {% if opt_conf == 'small' %}selected{% endif %} value="{{ path('admin_town_explorer', {id: town.id, tab: 'config', conf: 'small'}) }}">{{ 'Kleine Stadt'|trans({},'game') }}</option>
                                    <option {% if opt_conf == 'remote' %}selected{% endif %} value="{{ path('admin_town_explorer', {id: town.id, tab: 'config', conf: 'remote'}) }}">{{ 'Entfernte Regionen'|trans({},'game') }}</option>
                                    <option {% if opt_conf == 'panda' %}selected{% endif %} value="{{ path('admin_town_explorer', {id: town.id, tab: 'config', conf: 'panda'}) }}">{{ 'Pandämonium'|trans({},'game') }}</option>
                                    <option {% if opt_conf == 'default' %}selected{% endif %} value="{{ path('admin_town_explorer', {id: town.id, tab: 'config', conf: 'default'}) }}">{{ 'Basiskonfiguration'|trans({},'admin') }}</option>
                                </select>
                            </div>
                        </div>

                        <div class="row">
                            <div class="cell rw-4 padded"><i>root</i></div>
                        </div>

                        {% set setting_keys_prev = [] %}
                        {% for setting in conf_keys|sort %}

                            {% set setting_keys = setting|split('.') %}

                            {% set shown_keys = [] %}
                            {% set found_breakpoint = false %}
                            {% set tab_count = 0 %}
                            {% for num, setting_key in setting_keys %}
                                {% if not found_breakpoint and setting_keys_prev|length > num and setting_key == setting_keys_prev[num] %}
                                    {% set tab_count = tab_count + 1 %}
                                {% else %}
                                    {% set found_breakpoint = true %}
                                    {% set shown_keys = shown_keys|merge([setting_key]) %}
                                {% endif %}
                            {% endfor %}

                            {%- macro render_value( value ) -%}
                                {%- if value is same as(true) -%}
                                    {{- 'true' -}}
                                {%- elseif value is same as(false) -%}
                                    {{- 'false' -}}
                                {%- elseif value is iterable -%}
                                    {{- value|json_encode(constant('JSON_PRETTY_PRINT')) -}}
                                {%- else -%}
                                    {{- value -}}
                                {%- endif -%}
                            {%- endmacro -%}

                            {% set value      = _self.render_value( conf.raw[setting] ) %}
                            {% set value_comp = conf_compare is not null ? _self.render_value( conf_compare.raw[setting] ) : '' %}

                            {% for n,key in shown_keys %}
                                {% if not loop.last %}
                                    <div class="row">
                                        <div class="cell rw-4 padded">
                                            <code class="small">
                                                {% for t in 0..(n+tab_count) %}
                                                    ―
                                                {% endfor %}
                                            </code>
                                            <i>{{ key }}</i>
                                        </div>
                                    </div>
                                {% endif %}
                            {% endfor %}


                            <div class="row">
                                <div class="cell rw-4 padded">
                                    <code class="small">
                                        {% for t in 0..(shown_keys|length+tab_count-1) %}
                                            ―
                                        {% endfor %}
                                    </code>
                                    <span style="{{ conf_compare is not null and value_comp != value ? 'font-weight: bold; color: green;' : '' }}">{{ shown_keys|last }}</span>
                                    <div class="tooltip">{{ setting }}</div>
                                </div>

                                <div class="cell rw-{{ conf_compare is not null ? 4 : 8 }} padded small">
                                    <pre style="margin: 0">{{ value }}</pre>
                                </div>
                                {% if conf_compare is not null %}
                                    <div class="cell rw-4 padded small">
                                        <pre style="margin: 0; opacity: {{ value_comp == value ? 0.2 : 1 }}">{{ value_comp }}</pre>
                                    </div>
                                {% endif %}
                            </div>

                            {% set setting_keys_prev = setting_keys %}
                        {% endfor %}
                    </div>
                </div>

                <div x-tab-group="admin-town" x-tab-id="buildings" x-tab-target>
                    {% macro building_entry(building, buildable, n, dict, available) %}
                        {% if available[building.id] is defined %}
                            {% set fromTown = available[building.id] %}
                        {% endif %}
                        {# @var building \App\Entity\BuildingPrototype #}
                        {# @var fromTown \App\Entity\Building #}

                        <div class="row {% if not buildable %}locked{% elseif (fromTown is defined and fromTown.complete) %}complete{% endif %} {% if n > 0 %}lv-{{ min(n,6) }}{% else %}root{% endif %}">
                            <div class="padded cell rw-5 rw-lg-12">
                                {% if not fromTown is defined %}
                                    <label style="margin-left: -{{ min(n,6) * 16 }}px;float: left;">
                                        <input type="checkbox" x-prototype-id="{{ building.id }}" x-building-admin-action="addToUnlockList" />
                                        <div class="tooltip help">Cochez cette case pour ajouter ce chantier à la liste de ceux à débloquer dans la ville.</div>
                                    </label>
                                    <label>
                                        <input type="checkbox" x-prototype-id="{{ building.id }}" x-building-admin-action="addToTown" />
                                        <div class="tooltip help">Cochez cette case pour débloquer ce chantier.</div>
                                    </label>
                                {% else %}
                                    <div class="inline-block">
                                        <img class="link" src="{{ asset('build/images/icons/small_remove.gif') }}" alt="[X]" x-prototype-id="{{ building.id }}" x-building-admin-action="removeFromTown" />
                                        <div class="tooltip help">
                                            Cliquez ici pour supprimer ce chantier de la ville.
                                        </div>
                                    </div>
                                {% endif %}
                                {% if buildable %}
                                    <img alt="" src="{{ asset('build/images/building/' ~ building.icon ~ '.gif' ) }}" >
                                {% else %}
                                    <img alt="" src="{{ asset('build/images/icons/lock.gif' ) }}" >
                                {% endif %}
                                <span>{{ building.label|trans({},'buildings') }}</span>
                                {% if building.temp %}
                                    <span>
                                <img alt="(!)" src="{{ asset('build/images/icons/small_warning.gif') }}" />
                                <div class="tooltip temp-building">
                                    <h1>{{ 'Temporäre Konstruktion!'|trans({}, 'buildings') }}</h1>
                                    {{ 'Diese Konstruktion kann nur einmal verwendet werden. Sie wird nach dem Angriff der Zombiehorde wieder abgerissen.'|trans({}, 'buildings')|raw }}<br /><em>{{'Wenn ihr wollt, könnt irh sie morgen nochmal bauen.'|trans({}, 'buildings')}}</em>
                                </div>
                            </span>
                                {% endif %}
                                {% if building.defense > 0 %}
                                    <div class="float-right defense">
                                        {% if building.defense > 0 %}
                                            {{ building.defense }}
                                        {% endif %}
                                    </div>
                                {% endif %}
                                {#{% if building.description %}
                                    <div class="tooltip help">
                                        {{ building.description|trans({}, 'buildings') }}
                                    </div>
                                {% endif %}#}
                            </div>
                            {% if fromTown is defined %}
                                <div class="padded cell rw-3 rw-lg-5 rw-sm-12 no-ws">
                                    {% if fromTown.ap > 0 and not fromTown.complete %}
                                        <div class="ap-bar">
                                            <div class="bar" style="width: {{ 100*(fromTown.ap/building.ap) }}%"></div>
                                        </div>
                                    {% elseif fromTown.complete and fromTown.hp < building.hp %}
                                        <div class="ap-bar">
                                            <div class="bar" style="width: {{ 100*(fromTown.hp/((building.hp)|round)) }}%"></div>
                                            <div class="tooltip"><em>{{"Zustand:"|trans({}, 'game')}}</em> {{fromTown.hp}}/{{building.hp}}</div>
                                        </div>
                                    {% endif %}

                                    <div class="build-req">
                                        <div class="ap">{{ fromTown.ap }}/{{ building.ap }}</div>
                                    </div>
                                </div>
                                <div class="padded cell rw-4 rw-lg-7 rw-sm-12 right">
                                    <button class="inline build-btn" x-building-id="{{ fromTown.id }}" x-building-admin-action="{% if fromTown.complete %}setHp{% else %}setAp{% endif %}"><i class="fa fa-edit"></i></button>
                                    {% if not fromTown.complete %}
                                        <button class="inline build-btn" x-building-id="{{ fromTown.id }}" x-building-admin-action="complete"><i class="fa fa-check"></i></button>
                                    {% else %}
                                        <button class="inline build-btn" x-building-id="{{ fromTown.id }}" x-building-admin-action="destroy"><i class="fa fa-times"></i></button>
                                    {% endif %}
                                </div>
                            {% endif %}
                        </div>
                        {% if n < 20 and dict[building.id] is not empty %}
                            {% for sub_building in dict[building.id] %}
                                {{ _self.building_entry(sub_building, buildable and fromTown is defined and fromTown.complete , n+1, dict, available) }}
                            {% endfor %}
                        {% endif %}
                    {% endmacro %}

                    {# @var rootBuildings \App\Entity\BuildingPrototype[] #}
                    <div>
                        <button x-building-admin-action="unlockCheckedBuildings" class="inline"><i class="fa fa-unlock-alt"></i> Unlock checked buildings</button>
                        <ul class="buildings-tabs tabs plain" x-tab-group="buildings" x-tab-control>
                            <li class="tab" x-tab-id="all">
                                <div class="tab-link">
                                    <img class="hide-desktop" alt="*" src="{{ asset( 'build/images/icons/small_new.gif' ) }}" >
                                    <span class="hide-lg hide-md hide-sm">{{ 'Alle'|trans({},'game') }}</span>
                                </div>
                            </li>
                            {% for building in rootBuildings %}
                                <li class="tab" x-tab-id="type_{{ building.icon }}">
                                    <div class="tab-link">
                                        <img class="hide-desktop" alt="" src="{{ asset('build/images/building/' ~ building.icon ~ '.gif' ) }}" >
                                        {% set label = building.label|trans({}, 'buildings') %}
                                        <span class="hide-lg hide-md hide-sm">{{ label|length > 12 ? (label|slice(0,10) ~ '...') : label }}</span>
                                    </div>
                                </li>
                            {% endfor %}
                        </ul>
                    </div>

                    {% for building in rootBuildings %}
                        <div x-tab-group="buildings" x-tab-id="type_{{ building.icon }}" x-tab-target class="buildings type_{{ building.icon }}">{{ _self.building_entry(building, true, 0, dictBuildings, availBuldings) }}</div>
                    {% endfor %}

                    <button x-building-admin-action="unlockCheckedBuildings"><i class="fa fa-unlock-alt"></i> Unlock checked buildings</button>
                </div>

            {% endif %}

            <br />
            <div class="row">
                <div class="cell rw-3 ro-9 rw-md-6 ro-md-6 rw-sm-12 ro-sm-0">
                    <button x-ajax-href="{{ path('admin_town_list') }}">{{ 'Stadtübersicht'|trans({},'admin') }}</button>
                </div>
            </div>
        </div>
    </div>
{% endblock %}
{% block js %}
    {{ parent() }}
    {% if is_granted("ROLE_ADMIN") %}
        {{ item_creator_js('input[x-id][x-target="rucksack"]:checked,input[x-id][x-target="chest"]:checked,input[x-id][x-target="zone"]:checked', path('admin_spawn_item', {id: town.id}), path('admin_town_explorer', {id: town.id, tab: "citizens"}), 'ctz') }}
        {{ item_creator_js('[x-id][x-target="bank"]', path('admin_spawn_item', {id: town.id}), path('admin_town_explorer', {id: town.id, tab: "bank"}), 'bnk') }}
        {{ item_creator_js('[x-id][x-target="zone"]', path('admin_spawn_item', {id: town.id}), path('admin_town_explorer', {id: town.id, tab: "dash"}), 'zone') }}
        {{ teleport_control_js('input[x-id][x-target="status"]:checked', path('admin_teleport_citizen', {id: town.id}), path('admin_town_explorer', {id: town.id, tab: "citizens"})) }}
        {{ picto_creator_js(path('admin_town_give_picto', {id: town.id}), path('admin_town_explorer', {id: town.id, tab: "citizens"})) }}
        {{ status_control_js('input[x-id][x-target="status"]:checked', path('admin_town_manage_status', {id: town.id}), path('admin_town_explorer', {id: town.id, tab: "citizens"})) }}
        {{ role_control_js('input[x-id][x-target="status"]:checked', path('admin_town_manage_role', {id: town.id}), path('admin_town_explorer', {id: town.id, tab: "citizens"})) }}
        {{ point_control_js('input[x-id][x-target="status"]:checked', path('admin_town_alter_pp', {id: town.id}), path('admin_town_explorer', {id: town.id, tab: "citizens"})) }}
        {{ profession_control_js('input[x-id][x-target="status"]:checked', path('admin_modify_profession', {id: town.id}), path('admin_town_explorer', {id: town.id, tab: "citizens"})) }}
    {% endif %}
    <script>
        {% embed "scripts/log.js.twig" %}{% endembed %}

        (function() {
            $.html.addEventListenerAll('input[x-all][x-target]', 'click', (e,elem) => {
                $.html.forEach( 'input[x-id][x-target="' + elem.getAttribute('x-target') + '"]', c => c.checked = elem.checked );
            });

            let fun_api_call = function(api_url, elem) {
                if (!api_url) return;
                const url = elem.getAttribute('x-alt-url');
                const query = elem.getAttribute('x-query');
                const param = elem.getAttribute('x-param');

                let q_param = null;
                if (query) {
                    q_param = prompt(query, '');
                    if (q_param === null) return;
                } else if (param) q_param = param;

                $.ajax.easySend( api_url, {param: q_param},
                    function () {
                        $.ajax.load(null, url ? url : '{{ path('admin_town_explorer', {id: town.id}) }}', true);
                    } );
            }

            document.getElementById('execute_button').addEventListener('click', function() {
                fun_api_call(document.getElementById('administer-town').value,document.querySelector('#administer-town option:checked'));
            });
            document.getElementById('set_event_button').addEventListener('click', function() {
                fun_api_call("{{ path('admin_town_set_event', {id: town.id}) }}", document.querySelector('#activate-event option:checked'));
            });
            document.getElementById('set_language_button').addEventListener('click', function() {
                fun_api_call("{{ path('admin_town_set_lang', {id: town.id}) }}", document.querySelector('#switch-language option:checked'));
            });
            $.html.addEventListenerAll('[x-api-trigger]', 'click', function(e,elem) {
                fun_api_call(elem.getAttribute('x-api-trigger'),elem);
            });
            $.html.addEventListenerAll('#compare_conf_to', 'change', (e,elem) => $.ajax.load(null, elem.value, true))

            $.html.addEventListenerAll('[x-ex-action][x-ex-session]', 'click', function(e,elem) {
                $.ajax.easySend( elem.getAttribute('x-ex-action'), {param: parseInt(elem.getAttribute('x-ex-session'))},
                    function () {
                        $.ajax.load(null, '{{ path('admin_town_explorer', {id: town.id, tab: 'explorer'})|e('js') }}', true);
                    } );
            });

            document.getElementById('townpm').addEventListener('click', function(e) {
                document.getElementById("forum-content").innerHTML = "";
                $.ajax.no_history().load( document.getElementById('forum-content'), '{{ path('admin_pm_editor_controller', {'type': 'global'}) }}', false )
            });

            {% if is_granted("ROLE_ADMIN") %}
            document.getElementById('dropall').addEventListener('click', e => {
                if (confirm('{{ 'Bestätigen?'|trans({},'global')|e('js') }}'))
                    fun_api_call('{{ url('admin_town_manage', {action: 'dropall', id: town.id}) }}',document.getElementById('dropall'));
            });

            let items = document.querySelectorAll('.bank>.item:not(.locked)[x-item-id]');
            for (let i = 0; i < items.length; i++)
                items[i].addEventListener('click', function(ev) {
                    let change = document.querySelector('input[name=itemAction]:checked').value;
                    const item_id = this.getAttribute('x-item-id');
                    $.ajax.easySend('{{ path('admin_town_item', {id: town.id}) }}', {
                            item: item_id, change: change, qty: document.getElementById('itemActionQty').value
                        },
                        function () {
                            $.ajax.load(null, '{{ path('admin_town_explorer', {id: town.id, tab: "bank"}) }}', true);
                        }
                    );
                });

            let buildingBtns = document.querySelectorAll("[x-building-admin-action]");
            for(let i = 0 ; i < buildingBtns.length ; i++) {
                buildingBtns[i].addEventListener('click', function() {
                   let action = buildingBtns[i].getAttribute("x-building-admin-action");
                   switch(action) {
                       case "setAp":
                           let ap = null, ap_valid = false;
                           do {
                               ap = window.prompt("{{ 'Baufortschritt setzen:'|trans({},'admin')|e('js') }}", "1");
                               if (ap === null) ap_valid = true;
                               else {
                                   ap = parseInt(ap);
                                   ap_valid = !isNaN(ap) && ap >= 0;
                               }
                           } while (!ap_valid);

                           if (ap === null) return;

                           $.ajax.easySend( '{{ path('admin_town_set_building_ap', {id: town.id }) }}', {'building': buildingBtns[i].getAttribute("x-building-id"), 'ap': ap},
                               function () {
                                   $.ajax.load(null, '{{ path('admin_town_explorer', {id: town.id, tab: "buildings"}) }}', true);
                               } );
                           break;

                       case "setHp":
                           let hp = null, hp_valid = false;
                           do {
                               hp = window.prompt("{{ 'Integrität setzen:'|trans({},'admin')|e('js') }}", "1");
                               if (hp === null) hp_valid = true;
                               else {
                                   hp = parseInt(hp);
                                   hp_valid = !isNaN(hp) && hp >= 0;
                               }
                           } while (!hp_valid);

                           if (hp === null) return;

                           $.ajax.easySend( '{{ path('admin_town_set_building_hp', {id: town.id }) }}', {'building': buildingBtns[i].getAttribute("x-building-id"), 'hp': hp},
                               function () {
                                   $.ajax.load(null, '{{ path('admin_town_explorer', {id: town.id, tab: "buildings"}) }}', true);
                               } );
                           break;

                       case "complete":
                           $.ajax.easySend( '{{ path('admin_town_set_building_ap', {id: town.id }) }}', {'building': buildingBtns[i].getAttribute("x-building-id"), 'ap': 99999999},
                               function () {
                                   $.ajax.load(null, '{{ path('admin_town_explorer', {id: town.id, tab: "buildings"}) }}', true);
                               } );
                           break;
                       case "destroy":
                           $.ajax.easySend( '{{ path('admin_town_set_building_ap', {id: town.id }) }}', {'building': buildingBtns[i].getAttribute("x-building-id"), 'ap': 0},
                               function () {
                                   $.ajax.load(null, '{{ path('admin_town_explorer', {id: town.id, tab: "buildings"}) }}', true);
                               } );
                           break;
                       case "addToTown":
                           $.ajax.easySend("{{ path('admin_town_add_building', {id: town.id }) }}", {
                                   'prototype_id': buildingBtns[i].getAttribute("x-prototype-id"),
                                   'act': 1
                               },
                               function () {
                                   $.ajax.load(null, '{{ path('admin_town_explorer', {id: town.id, tab: "buildings"}) }}', true);
                               }
                           );
                           break;
                       case "removeFromTown":
                           $.ajax.easySend("{{ path('admin_town_add_building', {id: town.id }) }}", {
                                   'prototype_id': buildingBtns[i].getAttribute("x-prototype-id"),
                                   'act': 0
                               },
                               function () {
                                   $.ajax.load(null, '{{ path('admin_town_explorer', {id: town.id, tab: "buildings"}) }}', true);
                               }
                           );
                           break;
                       case "unlockCheckedBuildings":
                           let protos = [];
                           let checked = document.querySelectorAll('input[x-building-admin-action="addToUnlockList"]:checked');
                           checked.forEach(function(c) {
                               protos.push(c.getAttribute('x-prototype-id'));
                           })
                           $.ajax.easySend("{{ path('admin_town_add_building', {id: town.id }) }}", {
                                   'prototype_id': protos,
                                   'act': 1
                               },
                               function () {
                                   $.ajax.load(null, '{{ path('admin_town_explorer', {id: town.id, tab: "buildings"}) }}', true);
                               }
                           );
                           break;
                   }
                });
            }

            let zones = document.querySelectorAll(".map_area .map .zone");
            for(let i = 0 ; i < zones.length ; i++) {
                zones[i].addEventListener('click', function(ev){
                    ev.preventDefault();ev.stopPropagation();
                    let target = ev.target.parentElement;
                    document.getElementById("dash_zone_generator").setAttribute('x-id', target.getAttribute("x-id"));
                    // document.getElementById("zone_coords").innerText = "[" + target.getAttribute("x-zone-x") + ", " + target.getAttribute("x-zone-y") + "]";
                    $.ajax.easySend('{{ url('get_zone_infos', {id: town.id}) }}', {'zone_id': target.getAttribute("x-id")}, function(data){
                        document.querySelector("#zone_floor").innerHTML = data.view;
                        document.querySelector("#zone_floor .inventory").classList.add('desert');
                        document.querySelector("#zone_floor .inventory .title").innerText = "{{ 'Zone'|trans({}, 'admin') }} [" + target.getAttribute("x-zone-x") + ", " + target.getAttribute("x-zone-y") + "]";
                        let items = document.querySelectorAll('#zone_floor .inventory .item:not(.locked)[x-item-id]');
                        for (let i = 0; i < items.length; i++)
                            items[i].addEventListener('click', function(ev) {
                                let change = 'remove';
                                const item_id = this.getAttribute('x-item-id');
                                $.ajax.easySend('{{ path('admin_town_item', {id: town.id}) }}', {
                                        item: item_id, change: change, qty: '1'
                                    },
                                    function () {
                                        let itemTarget = document.querySelector('#zone_floor .inventory .item[x-item-id="' + item_id + '"]');
                                        itemTarget.parentElement.removeChild(itemTarget);
                                    }
                                );
                            });
                        document.querySelectorAll("#zone_floor .item div.tooltip").forEach( elem => $.html.handleTooltip( elem ));
                        document.getElementById("zone_digs").value = data.zone_digs;
                        document.getElementById("ruin_digs").value = data.ruin_digs;
                        document.getElementById("ruin_bury").value = data.ruin_bury;
                        document.getElementById("ruin_camp_level").value = data.camp_levl;
                        document.querySelector("#ruin_camp_base>span").innerText = data.ruin_camp;
                        document.getElementById("ruin_camp_base").classList.toggle('hidden', data.ruin_camp === null);
                        document.getElementById("dash_zone_log").innerHTML = data.zone_log;
                        {% embed "scripts/log.js.twig" with {'base_element': "document.getElementById('dash_zone_log')"} %}{% endembed %}
                    });
                });
            }

            let set_zone_digs = document.getElementById("zone_dig_set");
            if(set_zone_digs) set_zone_digs.addEventListener('click', function(){
                $.ajax.easySend('{{ path('set_zone_attribs', {'id': town.id}) }}', {'target': 'zone', 'zone_id': document.getElementById("dash_zone_generator").getAttribute('x-id'), 'value': document.getElementById('zone_digs').value }, function(){
                    $.ajax.load(null, '{{ path('admin_town_explorer', {id: town.id, tab: "dash"}) }}', true);
                })
            })

            let set_ruin_digs = document.getElementById("ruin_dig_set");
            if(set_ruin_digs) set_ruin_digs.addEventListener('click', function(){
                $.ajax.easySend('{{ path('set_zone_attribs', {'id': town.id}) }}', {'target': 'ruin', 'zone_id': document.getElementById("dash_zone_generator").getAttribute('x-id'), 'value': document.getElementById('ruin_digs').value }, function(){
                    $.ajax.load(null, '{{ path('admin_town_explorer', {id: town.id, tab: "dash"}) }}', true);
                })
            })

            let set_ruin_bury = document.getElementById("ruin_bury_set");
            if(set_ruin_bury) set_ruin_bury.addEventListener('click', function(){
                $.ajax.easySend('{{ path('set_zone_attribs', {'id': town.id}) }}', {'target': 'bury', 'zone_id': document.getElementById("dash_zone_generator").getAttribute('x-id'), 'value': document.getElementById('ruin_bury').value }, function(){
                    $.ajax.load(null, '{{ path('admin_town_explorer', {id: town.id, tab: "dash"}) }}', true);
                })
            })

            let set_ruin_camp = document.getElementById("ruin_camp_level_set");
            if(set_ruin_camp) set_ruin_camp.addEventListener('click', function(){
                $.ajax.easySend('{{ path('set_zone_attribs', {'id': town.id}) }}', {'target': 'camp', 'zone_id': document.getElementById("dash_zone_generator").getAttribute('x-id'), 'value': document.getElementById('ruin_camp_level').value }, function(){
                    $.ajax.load(null, '{{ path('admin_town_explorer', {id: town.id, tab: "dash"}) }}', true);
                })
            })
            {% endif %}
        })();

        $.html.addEventListenerAll('[x-blackboard-short]','click', (e,elem) => {
            elem.style.display = 'none';
            document.querySelector('[x-blackboard-preview="' + elem.getAttribute('x-blackboard-short') + '"]').style.display = null;
        });
        $.html.addEventListenerAll('[x-blackboard-preview]','click', (e,elem) => {
            elem.style.display = 'none';
            document.querySelector('[x-blackboard-short="' + elem.getAttribute('x-blackboard-preview') + '"]').style.display = null;
        })

        $.html.addEventListenerAll('#gazetteSelector', 'change', (e,elem) => {
            $.ajax.no_history().load( document.getElementById('gazette-target'), elem.value, false )
        })

        $.html.addEventListenerAll( '[x-citizen-id] [data-clear]', 'click', (e,elem) => {
            if (!confirm('{{ 'Bestätigen?'|trans({},'global')|e('js') }}'))
                return;
            const id = parseInt(elem.closest('[x-citizen-id]').getAttribute('x-citizen-id'));
            $.ajax.easySend('{{ path('clear_citizen_attribs', {id: town.id}) }}', {id, clear: elem.dataset.clear},
                () => $.ajax.load(null, '{{ path('admin_town_explorer', {id: town.id, tab: "citizens"}) }}', true)
            );
        } );

        {% if is_granted("ROLE_ADMIN") %}
        $.html.addEventListenerAll('.citizen-main[x-citizen-id]', 'click',  (e,elem) => {
            if (e.target.tagName === 'INPUT') return;
            const details = document.querySelector('.citizen-details[x-citizen-id="' + elem.getAttribute('x-citizen-id') + '"]');

            if (details.classList.contains('hidden')) {
                $.html.forEach('.citizen-details[x-citizen-id]', elem => elem.classList.add('hidden'));
                details.classList.remove('hidden');

                const refresh = () => {
                    $.ajax.easySend('{{ url('get_citizen_infos', {id: town.id}) }}', {'citizen_id': elem.getAttribute('x-citizen-id')}, data => {
                        document.querySelector('.citizen-details[x-citizen-id="' + elem.getAttribute('x-citizen-id') + '"] .invTargetDesc').innerText = data.desc;
                        document.querySelector('.citizen-details[x-citizen-id="' + elem.getAttribute('x-citizen-id') + '"] .invTargetDesc').parentNode?.classList.toggle('hidden', !data.desc)

                        document.querySelector('.citizen-details[x-citizen-id="' + elem.getAttribute('x-citizen-id') + '"] .invTargetRucksack').innerHTML = data.rucksack;
                        document.querySelector('.citizen-details[x-citizen-id="' + elem.getAttribute('x-citizen-id') + '"] .invTargetRucksack .inventory').classList.add('rucksack');
                        document.querySelector('.citizen-details[x-citizen-id="' + elem.getAttribute('x-citizen-id') + '"] .invTargetRucksack .inventory .title').innerText = '{{ 'Rucksack'|trans({},'game')|e('js') }}';

                        document.querySelector('.citizen-details[x-citizen-id="' + elem.getAttribute('x-citizen-id') + '"] .invTargetChest').innerHTML = data.chest;
                        document.querySelector('.citizen-details[x-citizen-id="' + elem.getAttribute('x-citizen-id') + '"] .invTargetChest .inventory').classList.add('chest');
                        document.querySelector('.citizen-details[x-citizen-id="' + elem.getAttribute('x-citizen-id') + '"] .invTargetChest .inventory .title').innerText = '{{ 'Truhe'|trans({},'game')|e('js') }}';

                        document.querySelector('.citizen-details[x-citizen-id="' + elem.getAttribute('x-citizen-id') + '"] .invTargetPictos').innerHTML = data.pictos;
                        let tooltips = document.querySelectorAll('.citizen-details[x-citizen-id="' + elem.getAttribute('x-citizen-id') + '"] .invTargetPictos .tooltip');
                        for(let i = 0 ; i < tooltips.length ; i++)
                            $.html.handleTooltip(tooltips[i]);

                        let items = document.querySelectorAll('.citizen-details[x-citizen-id="' + elem.getAttribute('x-citizen-id') + '"] .inventory .item:not(.locked)[x-item-id]');
                        for (let i = 0; i < items.length; i++)
                            items[i].addEventListener('click', function(ev) {
                                let change = 'remove';
                                const item_id = this.getAttribute('x-item-id');
                                $.ajax.easySend('{{ path('admin_town_item', {id: town.id}) }}', {
                                        item: item_id, change, qty: '1'
                                    },
                                    refresh
                                );
                            });
                    });
                };
                refresh();
            } else {
                $.html.forEach('.citizen-details[x-citizen-id]', elem => elem.classList.add('hidden'));
                document.querySelector(".citizen-details[x-citizen-id] .invTargetRucksack").innerHTML = '';
                document.querySelector(".citizen-details[x-citizen-id] .invTargetChest").innerHTML = '';
                document.querySelector(".citizen-details[x-citizen-id] .invTargetPictos").innerHTML = '';
            }
        })
        {% endif %}

    </script>
{% endblock %}