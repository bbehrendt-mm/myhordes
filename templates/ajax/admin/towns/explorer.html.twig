{% extends "ajax/ajax.html.twig" %}
{% block title %}{{'Stadt %townname%'|trans({'%townname%': town.name}, 'admin')}}{% endblock %}
{% block ajax %}
    {% macro valuelist(prop,val) %}
        <div class="row">
            <div class="cell rw-4"><b>{{ prop }}</b></div>
            <div class="cell rw-8">
                {% if val is same as(true) %}
                    {{ 'Ja'|trans({},'admin') }}
                {% elseif val is same as(false)  %}
                    {{ 'Nein'|trans({},'admin') }}
                {% else %}
                    {{ val }}
                {% endif %}
            </div>
        </div>
    {% endmacro %}

    <div class="row">
        <div class="cell padded rw-12">
            <ul class="tabs plain" x-tab-group="admin-town" x-tab-control x-tab-default="{{ tab }}">
            	<div class="tab-floater">
                <li class="tab" x-tab-id="dash"><div class="tab-link">{{ 'Übersicht'|trans({},'admin') }}</div></li>
                <li class="tab" x-tab-id="bank"><div class="tab-link">{{ 'Bank'|trans({},'admin') }}</div></li>
                <li class="tab" x-tab-id="citizens"><div class="tab-link">{{ 'Bürger'|trans({},'admin') }}</div></li>
                <li class="tab" x-tab-id="register"><div class="tab-link">{{ 'Stadtregister'|trans({},'admin') }}</div></li>
                <li class="tab" x-tab-id="estimations"><div class="tab-link">{{ 'Admin-Wachturm'|trans({},'admin') }}</div></li>
                {% if is_granted("ROLE_ADMIN") %}
                    <li class="tab" x-tab-id="explorer"><div class="tab-link">{{ 'Ruinenscanner'|trans({},'admin') }}</div></li>
                {% endif %}
                </div>
            </ul>
            {# @var town \App\Entity\Town #}
            <div x-tab-group="admin-town" x-tab-id="dash" x-tab-target>
                <div class="row">
                    <div class="cell padded rw-6 rw-sm-12">
                        {{ _self.valuelist('ID'|trans({},'admin'),         town.id) }}
                        {{ _self.valuelist('Stadtname'|trans({},'admin'),  town.name) }}
                        {{ _self.valuelist('Sprache'|trans({},'admin'),    town.language) }}
                        {{ _self.valuelist('Typ'|trans({},'admin'),        town.type.label|trans({},'game')) }}
                        {{ _self.valuelist('Population'|trans({},'admin'), town.population) }}
                        {{ _self.valuelist('Saison'|trans({},'admin'),     town.season ? town.season.number : '--') }}
                        {{ _self.valuelist('Tag'|trans({},'admin'),        town.day) }}
                        {{ _self.valuelist('Offen'|trans({},'admin'),      town.open) }}
                        {{ _self.valuelist('Chaos'|trans({},'admin'),      town.chaos) }}
                        {{ _self.valuelist('Zerstört'|trans({},'admin'),   town.devastated) }}
                        {{ _self.valuelist('Tor offen'|trans({},'admin'),  town.door) }}
                        {{ _self.valuelist('Brunnen'|trans({},'admin'),    town.well) }}
                        {{ _self.valuelist('Quarantäne'|trans({},'game'),  town.attackFails >= 3) }}

                        <div class="row">
                            <div class="cell rw-4"><b><label for="administer-town">{{ 'Stadt administrieren'|trans({},'admin') }}</label></b></div>
                            <div class="cell rw-8">
                                <select id="administer-town" style="width: 30rem;">
                                    <option value="">-</option>
                                    {% if is_granted("ROLE_ADMIN") %}
                                        <optgroup label="{{ 'Nächtlicher Angriff'|trans({},'admin') }}">
                                            {% if town.attackFails >= 3 %}
                                                <option value="{{ url('admin_town_manage', {action: 'release', id: town.id}) }}">{{ 'Quarantäne aufheben'|trans({},'admin') }}</option>
                                            {% else %}
                                                <option value="{{ url('admin_town_manage', {action: 'quarantine', id: town.id}) }}">{{ 'Unter Quarantäne stellen'|trans({},'admin') }}</option>
                                            {% endif %}
                                            {% if not town.open %}
                                                <option value="{{ url('admin_town_manage', {action: 'advance', id: town.id}) }}">{{ 'Manueller Tageswechsel'|trans({},'admin') }}</option>
                                            {% endif %}
                                        </optgroup>
                                    <optgroup label="{{ 'Verwaltung'|trans({},'admin') }}">
                                        <option x-alt-url="{{ path('admin_town_list') }}" value="{{ url('admin_town_manage', {action: 'nullify', id: town.id}) }}">{{ 'Annulieren'|trans({},'admin') }}</option>
                                    </optgroup>
                                    {% endif %}
                                </select>
                                <div id="execute_button" class="button inline small">{{ 'Ausführen'|trans({},'admin') }}</div>
                            </div>
                        </div>
                    </div>
                    <div class="cell padded rw-6 rw-sm-12">
                        {% embed "ajax/admin/towns/map.html.twig" with {'default_zoom': 0, 'default_show_zone': false, 'allow_zone_view': false, 'map': map_data} %}
                        {% endembed %}
                    </div>
                </div>
            </div>

            <div x-tab-group="admin-town" x-tab-id="bank" x-tab-target>
                <div class="row-flex">
                    <div class="padded cell rw-6 rw-sm-12">
                        {% embed "ajax/game/inventory.html.twig" with {'size': 0, 'items': bank, 'bankmode': true} %}
                            {% block class %}bank{% endblock %}
                            {% block title %}{% endblock %}
                        {% endembed %}
                    </div>
                    {% if is_granted("ROLE_ADMIN") %}
                    <div class="padded cell rw-6 rw-sm-12">
                        <label for="spawnItem">{{'Einen Gegenstand erzeugen:'|trans({}, 'admin')}}</label>
                        <select id="spawnItem">
                        {% for itemPrototype in itemPrototypes %}
                            <option value="{{itemPrototype.id}}">{{ itemPrototype.label|trans({}, 'items') }}</option>
                        {% endfor %}
                        </select>
                        <label for="number">
                            {{'Nummer des Gegenstandes:'|trans({}, 'admin')}}
                        </label>
                        <input type="number" id="number" value="1"/>
                        <label for="poison">{{'Vergiftet:'|trans({}, 'admin')}}</label>
                        <input type="checkbox" id="poison" />
                        <label for="broken">{{'Zerstört:'|trans({}, 'admin')}}</label>
                        <input type="checkbox" id="broken" />
                        <label for="essential">{{'Essentiell:'|trans({}, 'admin')}}</label>
                        <input type="checkbox" id="essential" />
                        <br />
                        <button id="spawnbtn">{{'Erzeugen!'|trans({}, 'admin')}}</button>
                    </div>
                    {% endif %}
                </div>
            </div>

            <div x-tab-group="admin-town" x-tab-id="citizens" x-tab-target>
                <div class="row">
                    <div class="cell padded rw-5 rw-sm-12">
                        <div class="row-table citizens-list">
                            <div class="row header">
                                <div class="padded cell rw-1">{{'Rucksack'|trans({}, 'admin')|slice(0,1)}}<div class="tooltip help">{{'Rucksack'|trans({}, 'admin')}}</div></div>
                                <div class="padded cell rw-1">{{'Truhe'|trans({}, 'admin')|slice(0,1)}}<div class="tooltip help">{{'Truhe'|trans({}, 'admin')}}</div></div>
                                <div class="padded cell left rw-10">{{ 'Bürger'|trans({},'game') }}</div>
                            </div>
                            {% for citizen in town.citizens|sort((a,b) => (a.alive == b.alive) ? ((a.alive) ? a.user.name|lower <=> b.user.name|lower : b.survivedDays <=> a.survivedDays) : b.alive <=> a.alive) %}
                                {# @var \App\Entity\Citizen citizen  #}
                                <div class="row-flex stretch pointer" style="max-height: 100px;">
                                    <div class="cell rw-1">
                                    {% if citizen.alive %}
                                        <input type="checkbox" target='rucksack' id="r-{{citizen.id}}" />
                                        <div class="tooltip normal">
                                            <em>{{ 'Rucksack'|trans({},'admin') }}</em><br />
                                            {% for item in citizen.inventory.items %}
                                                {# @var \App\Entity\Item item #}
                                                <img alt="{{ item.prototype.label|trans({},'items') }}" src="{{ asset('build/images/item/item_' ~ item.prototype.icon ~ '.gif') }}" />
                                            {% endfor %}
                                        </div>
                                    {% endif %}
                                    </div>
                                    <div class="cell rw-1">
                                        <input type="checkbox" target='chest' id="t-{{citizen.id}}" />
                                        <div class="tooltip normal">
                                            {% if citizen.home.chest.items|length == 0 %}
                                                <em>{{ 'Leere Truhe'|trans({},'admin') }}</em>
                                            {% else %}
                                                <em>{{ 'Truhe'|trans({},'admin') }}</em><br />
                                            {% endif %}
                                            {% for item in citizen.home.chest.items %}
                                                {# @var \App\Entity\Item item #}
                                                <img alt="{{ item.prototype.label|trans({},'items') }}" src="{{ asset('build/images/item/item_' ~ item.prototype.icon ~ '.gif') }}" />
                                            {% endfor %}
                                        </div>
                                    </div>
                                    <div class="cell rw-1">
                                        {% if citizen.alive %}
                                            <input type="checkbox" target='status' id="b-{{citizen.id}}" />
                                            <div class="tooltip normal">
                                                <em>{{ 'Status'|trans({},'admin') }}</em><br />
                                                {% for status in citizen.status %}
                                                    {# @var \App\Entity\CitizenStatus status #}
                                                    <img alt="{{ status.label|trans({},'game') }}" src="{{ asset('build/images/status/status_' ~ status.icon ~ '.gif') }}" />
                                                {% endfor %}
                                            </div>
                                        {% endif %}
                                    </div>
                                    <div class="cell factor-0 avatar ua-{{ random(0,9) }}" style="flex-basis: 90px; background: url('{{ citizen.user.avatar ? path('app_web_avatar', {'uid': citizen.user.id, 'name': citizen.user.avatar.smallName, 'ext': citizen.user.avatar.format}) : asset('build/images/forum/empty_avatar.gif') }}') center/cover no-repeat;" x-ajax-href="{{ url('admin_users_citizen_view', {id: citizen.user.id}) }}">&nbsp;</div>
                                    <div class="cell factor-0 citizen-{{ citizen.alive ? (citizen.online ? 'online' : 'offline') : 'dead' }}" style="flex-basis: 8px;" x-ajax-href="{{ url('admin_users_citizen_view', {id: citizen.user.id}) }}">&nbsp;</div>
                                    
                                    <div class="padded cell rw-4 factor-1 small content-center-vertical citizen-box citizen-box-name">
                                        {% if citizen.banished %}
                                        <img alt="" src="{{ asset('build/images/icons/banished.gif') }}" />
                                        {% endif %}
                                        {% if not citizen.alive %}
                                        <span>
                                            <img alt="{{ 'Tot!'|trans({},'game') }}" src="{{ asset('build/images/professions/death.gif') }}" />
                                            <div class="tooltip">
                                                {{ citizen.causeOfDeath.label|trans({}, 'game') }} - {{ 'Tag'|trans({}, "admin") }} {{ citizen.survivedDays }}
                                            </div>
                                        </span>
                                        {% endif %}
                                        
                                        {% if citizen.profession.heroic %}
                                            <img alt="" src="{{ asset('build/images/professions/hero.gif') }}" />
                                        {% else %}
                                            <img alt="" src="{{ asset('build/images/professions/void.gif') }}" />
                                        {% endif %}
                                        <img alt="{{ citizen.profession.label|trans({},'game') }}" src="{{ asset('build/images/professions/' ~ citizen.profession.icon ~ '.gif') }}" />
                                        <a class="link" href="{{ url('admin_users_citizen_view', {id: citizen.user.id}) }}">
                                            <b class="citizen-name">{{ citizen.user.name }}</b>
                                        </a>&nbsp;
                                        {% for role in citizen.roles %}
                                            <img src="{{ asset('build/images/roles/' ~ role.icon ~ '.gif') }}" alt="{{ role.label|trans({},'game') }}">&nbsp;
                                        {% endfor %}
                                        {% if citizen.alive %}
                                            <span class="zone">
                                            {% if citizen.zone %}
                                            [{{citizen.zone.x}},{{citizen.zone.y}}]
                                            {% else %}
                                            [{{'In der Stadt'|trans({}, 'admin')}}]
                                            {% endif %}
                                            </span>
                                        {% endif %}
                                    </div>
                                </div>
                            {% endfor %}
                        </div>
                    </div>
                    <div class="cell rw-7 rw-sm-12 padded">
                        {% if is_granted("ROLE_ADMIN") %}
                        <div class="padded cell">
                            <label for="spawnItemcitizen">{{'Einen Gegenstand erzeugen:'|trans({}, 'admin')}}</label>
                            <select id="spawnItemcitizen">
                            {% for itemPrototype in itemPrototypes %}
                                <option value="{{itemPrototype.id}}">{{ itemPrototype.label|trans({}, 'items') }}</option>
                            {% endfor %}
                            </select>
                            <label for="numbercitizen">
                                {{'Nummer des Gegenstandes:'|trans({}, 'admin')}}
                            </label>
                            <input type="number" id="numbercitizen" value="1"/>
                            <label for="poisoncitizen">{{'Vergiftet:'|trans({}, 'admin')}}</label>
                            <input type="checkbox" id="poisoncitizen" />
                            <label for="brokencitizen">{{'Zerstört:'|trans({}, 'admin')}}</label>
                            <input type="checkbox" id="brokencitizen" />
                            <label for="essentialcitizen">{{'Essentiell:'|trans({}, 'admin')}}</label>
                            <input type="checkbox" id="essentialcitizen" />
                            <br />
                            <button id="spawnbtncitizen">{{'Erzeugen!'|trans({}, 'admin')}}</button>
                            <hr />
                            <label for="selectPicto">{{'Eine Auszeichnungen auswählen:'|trans({}, 'admin')}}</label>
                            <select id="selectPicto">
                                {% for pictoPrototype in pictoPrototypes %}
                                    <option value="{{pictoPrototype.id}}">{{ pictoPrototype.label|trans({}, 'game') }}</option>
                                {% endfor %}
                            </select>
                            <label for="numberPicto">
                                {{'Anzahl der Auszeichnungen:'|trans({}, 'admin')}}
                            </label>
                            <input type="number" id="numberPicto" value="1"/>
                            <br />
                            <button id="givebtn">{{'Vergeben!'|trans({}, 'admin')}}</button>
                            <hr />
                            <label for="selectStatus">{{'Einen Status auswählen:'|trans({}, 'admin')}}</label>
                            <select id="selectStatus">
                                {% for status in citizenStati %}
                                    <option value="{{status.id}}">{{ status.label|trans({}, 'game') }}</option>
                                {% endfor %}
                            </select>
                            <button id="givestatusbtn">{{'Status vergeben'|trans({}, 'admin')}}</button><button id="takestatusbtn">{{'Status entfernen'|trans({}, 'admin')}}</button>
                            <hr />
                            <label for="selectRole">{{'Eine Rolle auswählen:'|trans({}, 'admin')}}</label>
                            <select id="selectRole">
                                {% for role in citizenRoles %}
                                    <option value="{{role.id}}">{{ role.label|trans({}, 'game') }}</option>
                                {% endfor %}
                            </select>
                            <button id="giverolebtn">{{'Rolle vergeben'|trans({}, 'admin')}}</button><button id="takerolebtn">{{'Rolle entfernen'|trans({}, 'admin')}}</button>
                            <hr />
                            <label for="numberAP">
                                {{'AP'|trans({}, 'admin')}}:
                            </label>
                            <input type="number" id="numberAP" value="6"/>
                            <br />
                            <button id="setAPbtn">{{'Setzen'|trans({}, 'admin')}}</button>
                            <button id="addAPbtn">{{'Hinzufügen'|trans({}, 'admin')}}</button>
                            <button id="removeAPbtn">{{'Abziehen'|trans({}, 'admin')}}</button>

                        </div>
                        <div class="padded cell">
                            <h5>{{ 'Anzeigen'|trans({}, 'admin') }}</h5>
                            <ul>
                            {% for culprit, complaint in complaints %}
                                <li>{{ 'Gegen %culprit%'|trans({'%culprit%': "<strong>" ~ culprit ~ "</strong>"}, 'admin')|raw }}
                                    <ul>
                                    {% for cmp in complaint|sort((a,b) => a.autor.user.name <=> b.autor.user.name) %}
                                        <li>{{ cmp.autor.user.name }} : {{ cmp.linkedReason.text|trans({}, 'game') }}</li>
                                    {% endfor %}
                                    </ul>
                                </li>
                            {% endfor %}
                            </ul>
                        </div>
                        <br />
                        {% endif %}
                        <button id="townpm">{{ 'Rundmail als Rabe'|trans({},'admin') }}</button>
                        <input type="hidden" id="pmidrecipient" value="{{ town.id }}">
                        <div id="forum-content">
                        </div>
                    </div>
                </div>
            </div>

            <div x-tab-group="admin-town" x-tab-id="register" x-tab-target>
                {% embed "ajax/admin/towns/log.html.twig" with {'log_content': log, 'log_source': path('admin_newspaper_log_controller') } %}
                {% endembed %}
            </div>

            <div x-tab-group="admin-town" x-tab-id="estimations" x-tab-target>
                <div class="row-table">
                    <div class="row header">
                        <div class="cell rw-1 padded"></div>
                        <div class="cell rw-1 padded">{{ 'ID'|trans({},'admin') }}</div>
                        <div class="cell rw-1 padded">{{ 'Tag'|trans({},'admin') }}</div>
                        <div class="cell rw-2 padded">{{ 'Angriff'|trans({},'admin') }}</div>
                        <div class="cell rw-2 padded">{{ 'Bereich Min'|trans({},'admin') }}</div>
                        <div class="cell rw-2 padded">{{ 'Bereich Max'|trans({},'admin') }}</div>
                    </div>
                    {% for est in town.zombieEstimations %}
                        <div class="row {% if est.day == town.day %}bold{% endif %}">
                            <div class="padded cell rw-1">{% if est.day == town.day %}<i class="fa fa-arrow-right"></i>{% endif %}</div>
                            <div class="padded cell rw-1">{{ est.id }}</div>
                            <div class="padded cell rw-1">{{ est.day }}</div>
                            {% if is_granted("ROLE_ADMIN") or est.day < town.day %}
                                <div class="padded cell rw-2">{{ est.zombies }}</div>
                                <div class="padded cell rw-2">{{ est.offsetMin }}%</div>
                                <div class="padded cell rw-2">{{ est.offsetMax }}%</div>
                            {% endif %}
                        </div>
                    {% endfor %}
                </div>
            </div>

            {% if is_granted("ROLE_ADMIN") %}
                <div x-tab-group="admin-town" x-tab-id="explorer" x-tab-target>
                    {% for exploration in explorables %}
                        <div class="row">
                            <div class="cell rw-6 padded">
                                <h5>{{ exploration.z.prototype.label|trans({},'game') }} - {{ exploration.z.x }}/{{ exploration.z.y }}</h5>
                                <div class="adm-exploration">
                                    {% for rz in exploration.rz %}
                                        <div class="rz {% if rz.prototype %}rz-{{ rz.locked ? 'locked' : 'unlocked' }}{% endif%} rz-{{ rz.distance > conf.get(constant('App\\Structures\\TownConf::CONF_EXPLORABLES_LOCKDIST')) ? 'far' : 'close' }} rz-{{ rz.corridor }} {% if rz.zombies > 0 %}rz-zeds{% endif %}" style="top:{{ rz.y * 20 }}px;left:{{ rz.x * 20 }}px;">
                                            {% if rz.corridor != 0 %}
                                                <div class="tooltip ndynamic">
                                                    {{ _self.valuelist('ID'|trans({},'admin'), rz.id) }}
                                                    {{ _self.valuelist('Position'|trans({},'admin'), rz.x ~ ' / ' ~ rz.y) }}
                                                    {{ _self.valuelist('Distanz'|trans({},'admin'), rz.distance) }}
                                                    {{ _self.valuelist('Zombies'|trans({},'admin'), rz.zombies) }}
                                                    {% if rz.prototype %}
                                                        {% if rz.locked %}
                                                            {{ _self.valuelist('Abdruck'|trans({},'admin'), rz.prototype.keyImprint.label|trans({},'items')) }}
                                                            {{ _self.valuelist('Schlüssel'|trans({},'admin'), rz.prototype.keyItem.label|trans({},'items')) }}
                                                        {% else %}
                                                            {{ _self.valuelist('Durchsucht'|trans({},'admin'), rz.digs) }}
                                                        {% endif %}
                                                    {% endif %}
                                                </div>
                                            {% endif %}
                                        </div>
                                    {% endfor %}
                                </div>
                            </div>
                            <div class="cell rw-6 padded">
                                <h5>{{ 'Aktuelle Sitzung'|trans({},'admin') }}</h5>
                                {% if exploration.ax %}
                                    {{ _self.valuelist('Spieler'|trans({},'admin'), exploration.ax.citizen.user.name) }}
                                    {{ _self.valuelist('Position'|trans({},'admin'), exploration.ax.x ~ ' / ' ~ exploration.ax.y ) }}
                                    {{ _self.valuelist('Flucht'|trans({},'admin'), exploration.ax.escaping ) }}
                                    {{ _self.valuelist('Raum'|trans({},'admin'), exploration.ax.inRoom ) }}
                                    <div class="row">
                                        <div class="cell rw-4"><b>{{ 'Zeit'|trans({},'admin') }}</b></div>
                                        <div class="cell rw-8"><span x-countdown="{{ exploration.axt }}">...</span></div>
                                    </div>
                                {% endif %}
                                <h5>{{ 'Alle Sitzungen'|trans({},'admin') }}</h5>
                                {% for x in exploration.x %}
                                    <div>{{ x.citizen.user.name }}</div>
                                {% endfor %}
                            </div>
                        </div>
                    {% endfor %}
                </div>
            {% endif %}

            <br />
            <div class="row">
                <div class="cell rw-3 ro-9">
                    <button x-ajax-href="{{ path('admin_town_list') }}">{{ 'Stadtübersicht'|trans({},'admin') }}</button>
                </div>
            </div>
        </div>


    </div>


{% endblock %}
{% block js %}
    {{ parent() }}
    <script>
        (function() {

            document.getElementById('execute_button').addEventListener('click', function() {
                if (!document.getElementById('administer-town').value) return;
                let url = document.querySelector('#administer-town option:checked').getAttribute('x-alt-url');
                $.ajax.easySend( document.getElementById('administer-town').value, {},
                    function () {
                        $.ajax.load(null, url ? url : '{{ path('admin_town_explorer', {id: town.id}) }}', true);
                    } );
            });

            document.getElementById('townpm').addEventListener('click', function(e) {
                document.getElementById("forum-content").innerHTML = "";
                $.ajax.no_history().load( document.getElementById('forum-content'), '{{ path('admin_pm_editor_controller', {'type': 'global'}) }}', false )
            });

            let log_boxes = document.querySelectorAll('.log-container');
            for (let i = 0; i < log_boxes.length; i++) {
                let log = log_boxes[i].querySelector( '.log' );

                const has_preloaded_content = log.getAttribute('x-log-default-provided') == '1';
                const url = log.getAttribute('x-log-source');
                let content_box = log.querySelectorAll('.log-content');

                const fun_refresh = function(d,bg) {
                    if (bg) $.ajax.background().load( content_box[0], url, false, {day: d, town: {{town.id}}} );
                    else $.ajax.load( content_box[0], url, false, {day: d, town: {{town.id}}} )
                };

                let refresh_button = log.querySelector('.log-complete-link');
                if (refresh_button) refresh_button.addEventListener('click', function() {
                    let spinner = log.querySelector('.log-spinner');
                    refresh_button.classList.add('hidden');
                    if (spinner) spinner.classList.remove('hidden');

                    fun_refresh(-1,true);
                });

                if (!has_preloaded_content) fun_refresh(-1,true);

                let control_tab = log_boxes[i].querySelector( '.log-day-select .tab' );
                if (control_tab) {
                    const min = parseInt(control_tab.getAttribute( 'x-page-min' ));
                    const max = parseInt(control_tab.getAttribute( 'x-page-max' ));
                    let   cur = parseInt(control_tab.getAttribute( 'x-page-current' ));

                    let control_fwd = control_tab.querySelector( 'div.control:first-child' );
                    let control_bwd = control_tab.querySelector( 'div.control:last-child' );
                    let label       = control_tab.querySelector( 'span' );

                    const fun_adjust = function(dif) {
                        if ((dif > 0 && cur <= (max-dif)) || (dif < 0 && cur >= (min-dif))) {
                            cur += dif;
                            label.innerText = ('' + cur);
                            fun_refresh(cur,false);
                        }
                    };

                    control_fwd.addEventListener('click', function() { fun_adjust( 1) });
                    control_bwd.addEventListener('click', function() { fun_adjust(-1) });
                }
            }

            {% if is_granted("ROLE_ADMIN") %}

            let items = document.querySelectorAll('.bank>.item:not(.locked)[x-item-id]');
            for (let i = 0; i < items.length; i++)
                items[i].addEventListener('click', function(ev) {
                    let change = "add";
                    if (ev.ctrlKey)
                        change = "remove";
                    const item_id = this.getAttribute('x-item-id');
                    $.ajax.easySend('{{ path('admin_bank_item', {id: town.id}) }}', {
                            item: item_id, change: change
                        },
                        function () {
                            $.ajax.load(null, '{{ path('admin_town_explorer', {id: town.id, tab: "bank"}) }}', true);
                        }
                    );
                });
            
            let spawnbtn = document.getElementById("spawnbtn");
            if (spawnbtn) spawnbtn.addEventListener('click', function(){
                let number = document.getElementById("number").value;
                if(isNaN(number)) number = 1;

                let item = document.getElementById('spawnItem').value;
                let poison = document.getElementById('poison').checked;
                let broken = document.getElementById('broken').checked;
                let essential = document.getElementById('essential').checked;

                $.ajax.easySend('{{ path('admin_bank_spawn_item', {id: town.id}) }}', {
                        prototype: item, number: number, poison: poison, broken: broken, essential: essential
                    },
                    function () {
                        $.ajax.load(null, '{{ path('admin_town_explorer', {id: town.id, tab: "bank"}) }}', true);
                    }
                );
            });

            let spawnbtncitizen = document.getElementById("spawnbtncitizen");
            if (spawnbtncitizen) spawnbtncitizen.addEventListener('click', function(){
                let number = document.getElementById("numbercitizen").value;
                if(isNaN(number)) number = 1;

                let citizen_sack = document.querySelectorAll("input[target='rucksack']:checked");
                let citizen_chest = document.querySelectorAll("input[target='chest']:checked");

                let targets = [];
                citizen_sack.forEach(element => {
                    targets.push(element.getAttribute('id'));
                });
                citizen_chest.forEach(element => {
                    targets.push(element.getAttribute('id'));
                });

                let item = document.getElementById('spawnItemcitizen').value;
                let poison = document.getElementById('poisoncitizen').checked;
                let broken = document.getElementById('brokencitizen').checked;
                let essential = document.getElementById('essentialcitizen').checked;
                $.ajax.easySend('{{ path('admin_citizen_spawn_item', {id: town.id}) }}', {
                        prototype: item, number: number, targets: targets.join(','), poison: poison, broken: broken, essential: essential
                    },
                    function () {
                        $.ajax.load(null, '{{ path('admin_town_explorer', {id: town.id, tab: "citizens"}) }}', true);
                    }
                );
            });

            let givebtn = document.getElementById("givebtn");
            if (givebtn) givebtn.addEventListener('click', function(){
                let number = document.getElementById("numberPicto").value;
                if(isNaN(number)) number = 1;

                let picto = document.getElementById('selectPicto').value;

                $.ajax.easySend('{{ path('admin_town_give_picto', {id: town.id}) }}', {
                        prototype: picto, number: number
                    },
                    function () {
                        $.ajax.load(null, '{{ path('admin_town_explorer', {id: town.id, tab: "citizens"}) }}', true);
                    }
                );
            });

            let givestatusbtn = document.getElementById("givestatusbtn");
            if (givestatusbtn) givestatusbtn.addEventListener('click', function(){
                let status = document.getElementById('selectStatus').value;

                let citizens = document.querySelectorAll("input[target='status']:checked");

                let targets = [];
                citizens.forEach(element => {
                  targets.push(element.getAttribute('id'));
                });

                $.ajax.easySend('{{ path('admin_town_give_status', {id: town.id}) }}', {
                                  status: status, targets: targets.join(',')
                        },
                        function () {
                          $.ajax.load(null, '{{ path('admin_town_explorer', {id: town.id, tab: "citizens"}) }}', true);
                        }
                );
            });

            let takestatusbtn = document.getElementById("takestatusbtn");
            if (takestatusbtn) takestatusbtn.addEventListener('click', function(){
                let status = document.getElementById('selectStatus').value;

                let citizens = document.querySelectorAll("input[target='status']:checked");

                let targets = [];
                citizens.forEach(element => {
                  targets.push(element.getAttribute('id'));
                });

                $.ajax.easySend('{{ path('admin_town_take_status', {id: town.id}) }}', {
                          status: status, targets: targets.join(',')
                        },
                        function () {
                          $.ajax.load(null, '{{ path('admin_town_explorer', {id: town.id, tab: "citizens"}) }}', true);
                        }
                );
            });

            let giverolebtn = document.getElementById("giverolebtn");
            if (giverolebtn) giverolebtn.addEventListener('click', function(){
                let role = document.getElementById('selectRole').value;

                let citizens = document.querySelectorAll("input[target='status']:checked");

                let targets = [];
                citizens.forEach(element => {
                  targets.push(element.getAttribute('id'));
                });

                $.ajax.easySend('{{ path('admin_town_give_role', {id: town.id}) }}', {
                          role: role, targets: targets.join(',')
                        },
                        function () {
                          $.ajax.load(null, '{{ path('admin_town_explorer', {id: town.id, tab: "citizens"}) }}', true);
                        }
                );
            });

            let takerolebtn = document.getElementById("takerolebtn");
            if (takerolebtn) takerolebtn.addEventListener('click', function(){
                let role = document.getElementById('selectRole').value;

                let citizens = document.querySelectorAll("input[target='status']:checked");

                let targets = [];
                citizens.forEach(element => {
                  targets.push(element.getAttribute('id'));
                });

                $.ajax.easySend('{{ path('admin_town_take_role', {id: town.id}) }}', {
                          role: role, targets: targets.join(',')
                        },
                        function () {
                          $.ajax.load(null, '{{ path('admin_town_explorer', {id: town.id, tab: "citizens"}) }}', true);
                        }
                );
            });

          let setAPbtn = document.getElementById("setAPbtn");
          if (setAPbtn) setAPbtn.addEventListener('click', function(){
            let number = document.getElementById("numberAP").value;
            if (isNaN(number)) number = 6;
            if (number < 0) number = Math.abs(number);

            let citizens = document.querySelectorAll("input[target='status']:checked");

            let targets = [];
            citizens.forEach(element => {
              targets.push(element.getAttribute('id'));
            });

            $.ajax.easySend('{{ path('admin_town_alter_ap', {id: town.id}) }}', {
                              targets: targets.join(','), number: number, action: 'set'
                            },
                            function () {
                              $.ajax.load(null, '{{ path('admin_town_explorer', {id: town.id, tab: "citizens"}) }}', true);
                            }
            );
          });


          let addAPbtn = document.getElementById("addAPbtn");
            if (addAPbtn) addAPbtn.addEventListener('click', function(){
                let number = document.getElementById("numberAP").value;
                if (isNaN(number)) number = 6;
                if (number < 0) number = Math.abs(number);

                let citizens = document.querySelectorAll("input[target='status']:checked");

                let targets = [];
                citizens.forEach(element => {
                    targets.push(element.getAttribute('id'));
                });

                $.ajax.easySend('{{ path('admin_town_alter_ap', {id: town.id}) }}', {
                                  targets: targets.join(','), number: number, action: 'add'
                        },
                        function () {
                          $.ajax.load(null, '{{ path('admin_town_explorer', {id: town.id, tab: "citizens"}) }}', true);
                        }
                );
            });

            let removeAPbtn = document.getElementById("removeAPbtn");
            if (removeAPbtn) removeAPbtn.addEventListener('click', function(){
                let number = document.getElementById("numberAP").value;
                if (isNaN(number)) number = 6;
                if (number < 0) number = Math.abs(number);

                let citizens = document.querySelectorAll("input[target='status']:checked");

                let targets = [];
                citizens.forEach(element => {
                    targets.push(element.getAttribute('id'));
                });

                $.ajax.easySend('{{ path('admin_town_alter_ap', {id: town.id}) }}', {
                                  targets: targets.join(','), number: number, action: 'remove'
                        },
                        function () {
                          $.ajax.load(null, '{{ path('admin_town_explorer', {id: town.id, tab: "citizens"}) }}', true);
                        }
                );
            });

            {% endif %}
        })();

    </script>
{% endblock %}