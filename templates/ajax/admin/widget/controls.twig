{% macro gen_id(prefix,domain,name) %}{% if prefix is not empty %}{{ prefix }}-{% endif %}{{ domain }}_{{ name }}{% endmacro %}
{% macro gen_attr(prefix,domain,name,value = null) %}x-{% if prefix is not empty %}{{ prefix }}-{% endif %}{{ domain }}-{{ name }}{% if value is not null %}="{{ value }}"{% endif %}{% endmacro %}

<!-- <editor-fold desc="Item Creator Widget"> -->
{% macro widget_item_creator(itemPrototypes, prefix = '', allow_all = false) %}
    <div class="lightbox">
        <div class="row">
            <div class="cell rw-12"><label for="{{ _self.gen_id(prefix,'itemwidget','select')}}">{{'Einen Gegenstand erzeugen:'|trans({}, 'admin')}}</label></div>
        </div>
        <div class="row-flex">
            <div class="padded cell grow-1 shrink-1">
                <select id="{{ _self.gen_id(prefix,'itemwidget','select')}}">
                    {% if allow_all %}
                    <option title="{{ 'Alle'|trans({}, 'admin') }}" value="all">{{ 'Alle'|trans({}, 'admin') }}</option>
                    {% endif %}
                    {% for itemPrototype in itemPrototypes %}
                        <option title="{{ itemPrototype.name }}" value="{{itemPrototype.id}}">{{ itemPrototype.label|trans({}, 'items') }}</option>
                    {% endfor %}
                </select>
            </div>
            <div class="padded cell grow-0 shrink-0 hide-md hide-sm"><label for="{{ _self.gen_id(prefix,'itemwidget','number')}}">x</label></div>
            <div class="padded cell grow-2 shrink-2"> <input type="number" id="{{ _self.gen_id(prefix,'itemwidget','number')}}" value="1"/> </div>
        </div>
        <div class="row-flex">
            <div class="padded cell note note-lightest">
                <label>{{'Vergiftet:'|trans({}, 'admin')}}<input type="checkbox" id="{{ _self.gen_id(prefix,'itemwidget','opt_poison')}}" /></label>
                <div class="row-flex vertical stretch hidden" id="{{ _self.gen_id(prefix,'itemwidget','opt_poison_conf')}}">
                    <label class="hidden"><input type="radio" value="0" checked name="{{ _self.gen_id(prefix,'itemwidget','opt_poison')}}" id="{{ _self.gen_id(prefix,'itemwidget','opt_poison_0')}}" /></label>
                    <label class="row-flex"><span class="cell grow-1">{{'Tödlich'|trans({}, 'admin')}}</span><input type="radio" value="1" name="{{ _self.gen_id(prefix,'itemwidget','opt_poison')}}" id="{{ _self.gen_id(prefix,'itemwidget','opt_poison_1')}}" /></label>
                    <label class="row-flex"><span class="cell grow-1">{{'Infektiös'|trans({}, 'admin')}}</span><input type="radio" value="2" name="{{ _self.gen_id(prefix,'itemwidget','opt_poison')}}" id="{{ _self.gen_id(prefix,'itemwidget','opt_poison_2')}}" /></label>
                </div>
            </div><div class="padded cell note note-lightest">
                <label>{{'Zerstört:'|trans({}, 'admin')}}<input type="checkbox" id="{{ _self.gen_id(prefix,'itemwidget','opt_broken')}}" /></label>
            </div><div class="padded cell note note-lightest">
                <label>{{'Essentiell:'|trans({}, 'admin')}}<input type="checkbox" id="{{ _self.gen_id(prefix,'itemwidget','opt_essential')}}" /></label>
            </div><div class="padded cell note note-lightest">
                <label>{{'Versteckt:'|trans({}, 'admin')}}<input type="checkbox" id="{{ _self.gen_id(prefix,'itemwidget','opt_hidden')}}" /></label>
            </div>
        </div>
        <div class="row">
            <div class="padded cell rw-12"><button id="{{ _self.gen_id(prefix,'itemwidget','spawn')}}">{{'Erzeugen!'|trans({}, 'admin')}}</button></div>
        </div>
    </div>
{% endmacro %}
{% macro widget_item_creator_js(selector, api_url, load_url, prefix = '') %}
    <script>
        $.html.addEventListenerAll('#{{ _self.gen_id(prefix,'itemwidget','opt_poison')}}', 'click', function(e,elem){
            if (elem.checked) document.getElementById('{{ _self.gen_id(prefix,'itemwidget','opt_poison_1')}}').checked = true;
            else document.getElementById('{{ _self.gen_id(prefix,'itemwidget','opt_poison_0')}}').checked = true;
            document.getElementById('{{ _self.gen_id(prefix,'itemwidget','opt_poison_conf')}}').classList.toggle('hidden', !elem.checked);
        });
        $.html.addEventListenerAll('#{{ _self.gen_id(prefix,'itemwidget','spawn')}}', 'click', function(){
            const number = parseInt(document.getElementById("{{ _self.gen_id(prefix,'itemwidget','number')}}").value);
            const item = document.getElementById('{{ _self.gen_id(prefix,'itemwidget','select')}}').value;

            const conf = {
                poison: parseInt(document.querySelector('input[name="{{ _self.gen_id(prefix,'itemwidget','opt_poison')}}"]:checked')?.value ?? '0'),
                broken: document.getElementById('{{ _self.gen_id(prefix,'itemwidget','opt_broken')}}').checked,
                essential: document.getElementById('{{ _self.gen_id(prefix,'itemwidget','opt_essential')}}').checked,
                hidden: document.getElementById('{{ _self.gen_id(prefix,'itemwidget','opt_hidden')}}').checked
            }

            let targets = {
                chest: [], rucksack: [], zone: [], bank: []
            }

            document.querySelectorAll('{{ selector|e('js') }}').forEach(element => {
                switch (element.getAttribute('x-target')) {
                    case 'chest'   : targets.chest.push(parseInt(element.getAttribute('x-id'))); break;
                    case 'rucksack': targets.rucksack.push(parseInt(element.getAttribute('x-id'))); break;
                    case 'zone'    : targets.zone.push(parseInt(element.getAttribute('x-id'))); break;
                    case 'bank'    : targets.bank.push(parseInt(element.getAttribute('x-id'))); break;
                    default: break;
                }
            });

            $.ajax.easySend('{{ api_url }}', { prototype: item, number: number, conf: conf, targets: targets},
                () => $.ajax.load(null, '{{ load_url }}', true)
            );
        });
    </script>
{% endmacro %}
<!-- </editor-fold> -->

<!-- <editor-fold desc="Picto Creator Widget"> -->
{% macro widget_picto_creator(pictoPrototypes, prefix = '') %}
    <div class="lightbox">
        <div class="row">
            <div class="padded cell rw-12">
                <label for="{{ _self.gen_id(prefix,'pictowidget','select')}}">{{'Eine Auszeichnungen auswählen:'|trans({}, 'admin')}}</label>
            </div>
        </div>
        <div class="row-flex">
            <div class="padded cell grow-2 shrink-1">
                <select id="{{ _self.gen_id(prefix,'pictowidget','select')}}">
                    {% for pictoPrototype in pictoPrototypes %}
                        <option value="{{pictoPrototype.id}}">{{ pictoPrototype.label|trans({}, 'game') }}</option>
                    {% endfor %}
                    {% if app.environment == 'dev' and is_granted('ROLE_ADMIN') %}
                        <option value="-42">[ {{ 'Alle'|trans({}, 'game') }} ]</option>
                    {% endif %}
                </select>
            </div>
            <div class="padded cell grow-0 shrink-0"><label for="{{ _self.gen_id(prefix,'pictowidget','number')}}">X</label></div>
            <div class="padded cell grow-1 shrink-1"><input type="number" id="{{ _self.gen_id(prefix,'pictowidget','number')}}" value="1"/></div>
        </div>
        <div class="row">
            <div class="padded cell rw-12">
                <button id="{{ _self.gen_id(prefix,'pictowidget','give')}}">{{'Vergeben!'|trans({}, 'admin')}}</button>
            </div>
        </div>
    </div>
{% endmacro %}
{% macro widget_picto_creator_js(api_url, load_url, prefix = '') %}
<script>
    $.html.addEventListenerAll('#{{ _self.gen_id(prefix,'pictowidget','give')}}', 'click', function(){
        const number = parseInt(document.getElementById("{{ _self.gen_id(prefix,'pictowidget','number')}}").value);
        $.ajax.easySend('{{ api_url }}',
            {prototype: parseInt(document.getElementById('{{ _self.gen_id(prefix,'pictowidget','select')}}').value), number: isNaN(number) ? 1 : number},
            () => $.ajax.load(null, '{{ load_url }}', true)
        );
    });
</script>
{% endmacro %}
<!-- </editor-fold> -->

<!-- <editor-fold desc="Feature Unlock Creator Widget"> -->
{% macro widget_feature_creator(featurePrototypes, prefix = '') %}
    <div class="lightbox">
        <div class="row">
            <div class="padded cell rw-12">
                <label for="{{ _self.gen_id(prefix,'featurewidget','select')}}">{{'Feature freigeben:'|trans({}, 'admin')}}</label>
            </div>
        </div>
        <div class="row">
            <div class="padded cell rw-12">
                <select id="{{ _self.gen_id(prefix,'featurewidget','select')}}">
                    {% for featurePrototype in featurePrototypes %}
                        <option value="{{featurePrototype.id}}">{{ featurePrototype.label|trans({}, 'items') }}</option>
                    {% endfor %}
                </select>
            </div>
        </div>
        <div class="row-flex wrap">
            <div class="padded cell"><label><input type="radio" name="{{ _self.gen_id(prefix,'featurewidget','expire')}}" id="{{ _self.gen_id(prefix,'featurewidget','expire_none')}}" />{{ 'Dauerhaft'|trans({},'admin') }}</label></div>
            <div class="padded cell"><label><input type="radio" name="{{ _self.gen_id(prefix,'featurewidget','expire')}}" id="{{ _self.gen_id(prefix,'featurewidget','expire_season')}}" />{{ 'Aktuelle Saison'|trans({},'admin') }}</label></div>
            <div class="padded cell"><label><input type="radio" name="{{ _self.gen_id(prefix,'featurewidget','expire')}}" id="{{ _self.gen_id(prefix,'featurewidget','expire_timeout')}}" />{{ 'Zeit'|trans({},'admin') }}</label></div>
            <div class="padded cell"><label><input type="radio" name="{{ _self.gen_id(prefix,'featurewidget','expire')}}" id="{{ _self.gen_id(prefix,'featurewidget','expire_towns')}}" />{{ 'Städte'|trans({},'admin') }}</label></div>
        </div>
        <div class="row">
            <div class="padded cell rw-12">
                <label class="hidden"><input type="date" id="{{ _self.gen_id(prefix,'featurewidget','expire_timeout_value')}}" /></label>
                <label class="hidden"><input type="number" id="{{ _self.gen_id(prefix,'featurewidget','expire_towns_value')}}" value="1" /></label>
            </div>
        </div>
        <div class="row">
            <div class="padded cell rw-12">
                <button id="{{ _self.gen_id(prefix,'featurewidget','give')}}">{{'Vergeben!'|trans({}, 'admin')}}</button>
            </div>
        </div>
    </div>
{% endmacro %}
{% macro widget_feature_creator_js(api_url, load_url, prefix = '') %}
    <script>
        $.html.addEventListenerAll("[name='{{ _self.gen_id(prefix,'featurewidget','expire')}}']", 'click', function(){
            if (document.getElementById('{{ _self.gen_id(prefix,'featurewidget','expire_timeout')}}').checked)
                document.getElementById('{{ _self.gen_id(prefix,'featurewidget','expire_timeout_value')}}').parentElement.classList.remove('hidden');
            else document.getElementById('{{ _self.gen_id(prefix,'featurewidget','expire_timeout_value')}}').parentElement.classList.add('hidden');
            if (document.getElementById('{{ _self.gen_id(prefix,'featurewidget','expire_towns')}}').checked)
                document.getElementById('{{ _self.gen_id(prefix,'featurewidget','expire_towns_value')}}').parentElement.classList.remove('hidden');
            else document.getElementById('{{ _self.gen_id(prefix,'featurewidget','expire_towns_value')}}').parentElement.classList.add('hidden');
        });
        $.html.addEventListenerAll('#{{ _self.gen_id(prefix,'featurewidget','give')}}', 'click', function(){
            const date   = document.getElementById("{{ _self.gen_id(prefix,'featurewidget','expire_timeout_value')}}").value;
            const number = parseInt(document.getElementById("{{ _self.gen_id(prefix,'featurewidget','expire_towns_value')}}").value);
            let type = -1;
            if (document.getElementById('{{ _self.gen_id(prefix,'featurewidget','expire_none')}}').checked) type = 0;
            else if (document.getElementById('{{ _self.gen_id(prefix,'featurewidget','expire_season')}}').checked) type = 1;
            else if (document.getElementById('{{ _self.gen_id(prefix,'featurewidget','expire_timeout')}}').checked) type = 2;
            else if (document.getElementById('{{ _self.gen_id(prefix,'featurewidget','expire_towns')}}').checked) type = 3;
            $.ajax.easySend('{{ api_url }}',
                {
                    prototype: parseInt(document.getElementById('{{ _self.gen_id(prefix,'featurewidget','select')}}').value),
                    number: isNaN(number) ? 0 : number,
                    date: date,
                    type: type
                },
                () => $.ajax.load(null, '{{ load_url }}', true)
            );
        });
    </script>
{% endmacro %}
<!-- </editor-fold> -->

<!-- <editor-fold desc="Title and Icon Generator Widget"> -->
{% macro widget_title_creator(awards = [], prefix = '') %}
    <div class="lightbox">
        <div class="row">
            <div class="padded cell rw-12">
                <label for="{{ _self.gen_id(prefix,'titlemakerwidget','select')}}">{{'Einzigartige Titel oder Icons bearbeiten:'|trans({}, 'admin')}}</label>
            </div>
        </div>
        <div class="row-flex wrap">
            <div class="padded cell"><label><input type="radio" name="{{ _self.gen_id(prefix,'titlemakerwidget','what')}}" x-type="title" id="{{ _self.gen_id(prefix,'titlemakerwidget','make_title')}}" />{{ 'Neuer Titel'|trans({},'admin') }}</label></div>
            <div class="padded cell"><label><input type="radio" name="{{ _self.gen_id(prefix,'titlemakerwidget','what')}}" x-type="icon" id="{{ _self.gen_id(prefix,'titlemakerwidget','make_icon')}}" />{{ 'Neues Icon'|trans({},'admin') }}</label></div>
        </div>
        <div class="row">
            {% for award in awards %}
                {% if award.prototype is null %}
                    {% if award.customTitle %}
                        <div class="padded cell rw-12"><label><input type="radio" name="{{ _self.gen_id(prefix,'titlemakerwidget','what')}}" x-default="{{ award.customTitle }}" x-id="{{ award.id }}" x-type="title" id="{{ _self.gen_id(prefix,'titlemakerwidget','edit_title_' ~ award.id)}}" />{{ award.customTitle }}</label></div>
                    {% endif %}
                    {% if award.customIcon %}
                        <div class="padded cell rw-12"><label><input type="radio" name="{{ _self.gen_id(prefix,'titlemakerwidget','what')}}" x-id="{{ award.id }}" x-type="icon" id="{{ _self.gen_id(prefix,'titlemakerwidget','edit_icon_' ~ award.id)}}" />
                            <img alt="" src="{{ url('app_web_customicon', {uid: award.user.id, aid: award.id, name: award.customIconName, ext: award.customIconFormat}) }}" />
                        </label></div>
                    {% endif %}
                {% endif %}
            {% endfor %}
        </div>
        <div class="row hidden" id="{{ _self.gen_id(prefix,'titlemakerwidget','make_title_form')}}">
            <div class="padded cell rw-12">
                <hr/>
                <label><input type="text" maxlength="190" placeholder="{{ 'Titel'|trans({},'admin') }}" id="{{ _self.gen_id(prefix,'titlemakerwidget','upload_title')}}" /></label>
            </div>
        </div>
        <div class="row hidden" id="{{ _self.gen_id(prefix,'titlemakerwidget','make_icon_form')}}">
            <div class="padded cell rw-12">
                <hr/>
                <label>
                    <img id="{{ _self.gen_id(prefix,'titlemakerwidget','upload_icon_preview')}}" src="" alt="?" class="hidden" height="16" width="16" />
                    <input type="file" placeholder="{{ 'Titel'|trans({},'admin') }}" id="{{ _self.gen_id(prefix,'titlemakerwidget','upload_icon')}}" />
                </label>
            </div>
        </div>
        <div class="row">
            <div class="padded cell rw-6 rw-sm-12">
                <button disabled id="{{ _self.gen_id(prefix,'titlemakerwidget','give')}}">{{'Bestätigen'|trans({}, 'admin')}}</button>
            </div>
            <div class="padded cell rw-6 rw-sm-12">
                <button disabled id="{{ _self.gen_id(prefix,'titlemakerwidget','take')}}">{{'Löschen'|trans({}, 'admin')}}</button>
            </div>
        </div>
    </div>
{% endmacro %}
{% macro widget_title_creator_js(max_icon_size, api_url, load_url, prefix = '') %}
    <script>
        $.html.addEventListenerAll("[name='{{ _self.gen_id(prefix,'titlemakerwidget','what')}}']", 'click', function(){
            const selected = document.querySelector('[name="{{ _self.gen_id(prefix,'titlemakerwidget','what')}}"]:checked');
            if (!selected) return;
            document.getElementById('{{ _self.gen_id(prefix,'titlemakerwidget','make_title_form')}}').classList.toggle('hidden', selected.getAttribute('x-type') !== 'title');
            document.getElementById('{{ _self.gen_id(prefix,'titlemakerwidget','make_icon_form')}}' ).classList.toggle('hidden', selected.getAttribute('x-type') !== 'icon');

            if (selected.getAttribute('x-type') === 'title')
                document.getElementById('{{ _self.gen_id(prefix,'titlemakerwidget','upload_title')}}').value = selected.getAttribute('x-default');

            document.getElementById('{{ _self.gen_id(prefix,'titlemakerwidget','give')}}' ).toggleAttribute('disabled', false )
            document.getElementById('{{ _self.gen_id(prefix,'titlemakerwidget','take')}}' ).toggleAttribute('disabled', !selected.hasAttribute('x-id') )


        });

        let image_upload = null;
        let image_mime = '';

        $.html.addEventListenerAll('#{{ _self.gen_id(prefix,'titlemakerwidget','upload_icon')}}','change', (e) => {

            if (e.target.files.length !== 1) {
                $.html.error('{{ 'Bitte wähle nur eine einzige Datei aus.'|trans({},'soul')|e('js') }}');
                return;
            }
            /** @var file File */
            const file = e.target.files[0];
            if (file.size >= {{ max_icon_size }}) {
                $.html.error('{{ 'Die Datei ist zu groß.'|trans({},'soul')|e('js') }}');
                return;
            }

            const type_info = file.type.split('/',2);
            if (type_info.length < 2 || type_info[0] !== 'image') {
                $.html.error('{{ 'Dieses Dateiformat wird nicht unterstützt.'|trans({},'soul')|e('js') }}');
                return;
            }

            let reader = new FileReader();
            reader.onload = function(e) {
                image_upload = btoa(e.target.result);
                image_mime = type_info[1];
                document.getElementById('{{ _self.gen_id(prefix,'titlemakerwidget','upload_icon_preview')}}').setAttribute('src','data:' + type_info[0] + '/' + type_info[1] + ';base64,' + image_upload);
                document.getElementById('{{ _self.gen_id(prefix,'titlemakerwidget','upload_icon_preview')}}').classList.remove('hidden')
            };
            reader.readAsBinaryString(file);

        });

        $.html.addEventListenerAll('#{{ _self.gen_id(prefix,'titlemakerwidget','give')}}', 'click', function(){
            if (!confirm('{{ 'Bestätigen?'|trans({},'global')|e('js') }}'))
                return;

            const selected = document.querySelector('[name="{{ _self.gen_id(prefix,'titlemakerwidget','what')}}"]:checked');
            if (!selected) return;

            let payload = {};
            if (selected.getAttribute('x-type') === 'title')
                payload.title = document.getElementById('{{ _self.gen_id(prefix,'titlemakerwidget','upload_title')}}').value;
            else if (selected.getAttribute('x-type') === 'icon')
                payload.icon = image_upload

            if (selected.getAttribute('x-id'))
                payload.id = parseInt(selected.getAttribute('x-id'))

            $.ajax.easySend( '{{ api_url }}', payload,
                function () {
                    $.ajax.load(null, '{{ load_url }}', true);
                } );
        });

        $.html.addEventListenerAll('#{{ _self.gen_id(prefix,'titlemakerwidget','take')}}', 'click', function(){
            if (!confirm('{{ 'Bestätigen?'|trans({},'global')|e('js') }}'))
                return;

            const selected = document.querySelector('[name="{{ _self.gen_id(prefix,'titlemakerwidget','what')}}"]:checked');
            if (!selected || !selected.getAttribute('x-id')) return;

            $.ajax.easySend( '{{ api_url }}', {id: parseInt(selected.getAttribute('x-id')), 'delete': 1},
                function () {
                    $.ajax.load(null, '{{ load_url }}', true);
                } );
        });
    </script>
{% endmacro %}
<!-- </editor-fold> -->

<!-- <editor-fold desc="Status Manager Widget"> -->
{% macro widget_status_control(citizenStati, prefix = '') %}
    <div class="lightbox">
        <div class="row">
            <div class="padded cell rw-12"><label for="{{ _self.gen_id(prefix,'statuswidget','select')}}">{{'Einen Status auswählen:'|trans({}, 'admin')}}</label></div>
        </div>
        <div class="row-flex">
            <div class="padded cell grow-1 shrink-1">
                <select id="{{ _self.gen_id(prefix,'statuswidget','select')}}">
                    {% for status in citizenStati %}
                        <option value="{{status.id}}">{{ status.label|trans({}, 'game') }}</option>
                    {% endfor %}
                </select>
            </div>
            <div class="padded cell grow-0 shrink-0"><button x-control="1" id="{{ _self.gen_id(prefix,'statuswidget','give')}}"><img alt="+" src="{{ asset('build/images/icons/small_more2.gif') }}" /><div class="tooltip">{{'Status vergeben'|trans({}, 'admin')}}</div></button></div>
            <div class="padded cell grow-0 shrink-0"><button x-control="0" id="{{ _self.gen_id(prefix,'statuswidget','take')}}"><i class="fa fa-minus"></i><div class="tooltip">{{'Status entfernen'|trans({}, 'admin')}}</div></button></div>
        </div>
    </div>
{% endmacro %}
{% macro widget_status_control_js(selector, api_url, load_url, prefix = '') %}
    <script>
        $.html.addEventListenerAll('#{{ _self.gen_id(prefix,'statuswidget','give')}},#{{ _self.gen_id(prefix,'statuswidget','take')}}','click', function(e,elem){
            const status = document.getElementById('{{ _self.gen_id(prefix,'statuswidget','select')}}').value;

            let targets = [];
            document.querySelectorAll('{{ selector|e('js') }}').forEach( element => targets.push(parseInt(element.getAttribute('x-id'))) );
            if (targets.length === 0) {
                $.html.error('{{ 'Kein Bürger ausgewählt!'|trans({}, 'admin') }}');
                return;
            }

            $.ajax.easySend('{{ api_url }}', {
                    status: status, targets: targets, control: parseInt(elem.getAttribute('x-control'))
                }, () => $.ajax.load(null, '{{ load_url }}', true)
            );
        });
    </script>
{% endmacro %}
<!-- </editor-fold> -->

<!-- <editor-fold desc="Role Manager Widget"> -->
{% macro widget_role_control(citizenRoles, prefix = '') %}
    <div class="lightbox">
        <div class="row">
            <div class="padded cell rw-12"><label for="{{ _self.gen_id(prefix,'rolewidget','select')}}">{{'Eine Rolle auswählen:'|trans({}, 'admin')}}</label></div>
        </div>
        <div class="row-flex">
            <div class="padded cell grow-1 shrink-1">
                <select id="{{ _self.gen_id(prefix,'rolewidget','select')}}">
                    {% for role in citizenRoles %}
                        <option value="{{role.id}}">{{ role.label|trans({}, 'game') }}</option>
                    {% endfor %}
                    <option value="_ban_">[{{ 'Verbannung'|trans({}, 'game') }}]</option>
                    <option value="_esc_">[{{ 'Eskorte'|trans({}, 'game') }}]</option>
                    <option value="_nw_">[{{ 'Nachtwächter'|trans({}, 'game') }}]</option>
                    <option value="_sh_">[{{ 'Superheld'|trans({}, 'game') }}]</option>
                    <option value="_wt_">[{{ 'Wachturm'|trans({}, 'game') }}]</option>
                    <option value="_rst_">[{{ 'Neutraler Status'|trans({}, 'game') }}]</option>
                    <option value="_dig_">[{{ '24 Stunden buddeln'|trans({}, 'game') }}]</option>
                </select>
            </div>
            <div class="padded cell grow-0 shrink-0"><button x-control="1" id="{{ _self.gen_id(prefix,'rolewidget','give')}}"><img alt="+" src="{{ asset('build/images/icons/small_more2.gif') }}" /><div class="tooltip">{{'Rolle vergeben'|trans({}, 'admin')}}</div></button></div>
            <div class="padded cell grow-0 shrink-0"><button x-control="0" id="{{ _self.gen_id(prefix,'rolewidget','take')}}"><i class="fa fa-minus"></i><div class="tooltip">{{'Rolle entfernen'|trans({}, 'admin')}}</div></button></div>
        </div>
    </div>
{% endmacro %}
{% macro widget_role_control_js(selector, api_url, load_url, prefix = '') %}
    <script>
        $.html.addEventListenerAll('#{{ _self.gen_id(prefix,'rolewidget','give')}},#{{ _self.gen_id(prefix,'rolewidget','take')}}','click', function(e,elem){
            const role = document.getElementById('{{ _self.gen_id(prefix,'rolewidget','select')}}').value;

            let targets = [];

            document.querySelectorAll('{{ selector|e('js') }}').forEach( element => targets.push(parseInt(element.getAttribute('x-id'))) );
            if (targets.length === 0) {
                $.html.error('{{ 'Kein Bürger ausgewählt!'|trans({}, 'admin') }}');
                return;
            }

            $.ajax.easySend('{{ api_url }}', {
                role: role, targets: targets, control: parseInt(elem.getAttribute('x-control'))
                }, () => $.ajax.load(null, '{{ load_url }}', true)
            );
        });
    </script>
{% endmacro %}
<!-- </editor-fold> -->

<!-- <editor-fold desc="Point Manager Widget"> -->
{% macro widget_point_control(prefix = '') %}
    <div class="lightbox">
        <div class="row-flex">
            <div class="padded cell grow-2 shrink-1">
                <label><select id="{{ _self.gen_id(prefix,'pointwidget','select')}}">
                    <option value="ap">{{'AP'|trans({}, 'admin')}}</option>
                    <option value="bp">{{'BP'|trans({}, 'admin')}}</option>
                    <option value="mp">{{'MP'|trans({}, 'admin')}}</option>
                    <option value="gh">{{'Hunger'|trans({}, 'admin')}} (%)</option>
                    <option value="cc">{{'Camp Chance'|trans({}, 'admin')}} (%)</option>
                    <option value="cn">{{'Camp Zähler'|trans({}, 'admin')}}</option>
                </select></label>
            </div>
            <div class="padded cell grow-1 shrink-1">
                <label><input type="number" id="{{ _self.gen_id(prefix,'pointwidget','number')}}" value="6"/></label>
            </div>
            <div class="padded cell grow-0 shrink-0"><button x-control="1"  id="{{ _self.gen_id(prefix,'pointwidget','give')}}"><img alt="+" src="{{ asset('build/images/icons/small_more2.gif') }}" /><div class="tooltip">{{'Hinzufügen'|trans({}, 'admin')}}</div></button></div>
            <div class="padded cell grow-0 shrink-0"><button x-control="0"  id="{{ _self.gen_id(prefix,'pointwidget','set')}}"> <i class="fa fa-hand-point-down"></i><div class="tooltip">{{'Setzen'|trans({}, 'admin')}}</div></button></div>
            <div class="padded cell grow-0 shrink-0"><button x-control="-1" id="{{ _self.gen_id(prefix,'pointwidget','take')}}"><i class="fa fa-minus"></i><div class="tooltip">{{'Abziehen'|trans({}, 'admin')}}</div></button></div>
        </div>
    </div>
{% endmacro %}
{% macro widget_point_control_js(selector, api_url, load_url, prefix = '') %}
    <script>
        $.html.addEventListenerAll('#{{ _self.gen_id(prefix,'pointwidget','give')}},#{{ _self.gen_id(prefix,'pointwidget','set')}},#{{ _self.gen_id(prefix,'pointwidget','take')}}','click', function(e,elem){
            const point = document.getElementById('{{ _self.gen_id(prefix,'pointwidget','select')}}').value;
            const num = parseInt(document.getElementById('{{ _self.gen_id(prefix,'pointwidget','number')}}').value);

            let targets = [];
            document.querySelectorAll('{{ selector|e('js') }}').forEach( element => targets.push(parseInt(element.getAttribute('x-id'))) );
            if (targets.length === 0) {
                $.html.error('{{ 'Kein Bürger ausgewählt!'|trans({}, 'admin') }}');
                return;
            }

            $.ajax.easySend('{{ api_url }}', {
                    point: point, num: num, targets: targets, control: parseInt(elem.getAttribute('x-control'))
                }, () => $.ajax.load(null, '{{ load_url }}', true)
            );
        });
    </script>
{% endmacro %}
<!-- </editor-fold> -->

<!-- <editor-fold desc="Profession Manager Widget"> -->
{% macro widget_profession_control(citizenProfessions, prefix = '') %}
    <div class="lightbox">
        <div class="row">
            <div class="padded cell rw-12"><label for="{{ _self.gen_id(prefix,'prowidget','select')}}">{{'Einen Beruf auswählen:'|trans({}, 'admin')}}</label></div>
        </div>
        <div class="row-flex">
            <div class="padded cell grow-1 shrink-1">
                <select id="{{ _self.gen_id(prefix,'prowidget','select')}}">
                    {% for pro in citizenProfessions %}
                        <option value="{{pro.id}}">{{ pro.label|trans({}, 'game') }}</option>
                    {% endfor %}
                </select>
            </div>
            <div class="padded cell grow-0 shrink-0"><button id="{{ _self.gen_id(prefix,'prowidget','set')}}"><i class="fa fa-hand-point-down"></i><div class="tooltip">{{'Setzen'|trans({}, 'admin')}}</div></button></div>
        </div>
    </div>
{% endmacro %}
{% macro widget_profession_control_js(selector, api_url, load_url, prefix = '') %}
    <script>
        $.html.addEventListenerAll('#{{ _self.gen_id(prefix,'prowidget','set')}}','click', function(e,elem){
            const profession = parseInt(document.getElementById('{{ _self.gen_id(prefix,'prowidget','select')}}').value);

            let targets = [];

            document.querySelectorAll('{{ selector|e('js') }}').forEach( element => targets.push(parseInt(element.getAttribute('x-id'))) );
            if (targets.length === 0) {
                $.html.error('{{ 'Kein Bürger ausgewählt!'|trans({}, 'admin') }}');
                return;
            }

            $.ajax.easySend('{{ api_url }}', {
                profession: profession, targets: targets
                }, () => $.ajax.load(null, '{{ load_url }}', true)
            );
        });
    </script>
{% endmacro %}
<!-- </editor-fold> -->

<!-- <editor-fold desc="Teleport Manager Widget"> -->
{% macro widget_teleport_control(defaultX = 0, defaultY = 0, prefix = '') %}
    <div class="lightbox">
        <div class="row">
            <div class="padded cell rw-12">{{'Teleportieren:'|trans({}, 'admin')}}</div>
        </div>
        <div class="row-flex wrap">
            <div class="cell"><label><input type="radio" name="{{ _self.gen_id(prefix,'movewidget','type')}}" id="{{ _self.gen_id(prefix,'movewidget','town')}}" /> {{ 'In die Stadt'|trans({}, 'admin') }}</label></div>
            <div class="cell"><label><input type="radio" checked name="{{ _self.gen_id(prefix,'movewidget','type')}}" id="{{ _self.gen_id(prefix,'movewidget','zone')}}" /> {{ 'Zu einer Zone'|trans({}, 'admin') }}</label></div>
        </div>
        <div class="row-flex" id="{{ _self.gen_id(prefix,'movewidget','zone_edit')}}">
            <div class="padded cell grow-0 shrink-0">[</div>
            <div class="padded cell grow-1 shrink-1"><label><input id="{{ _self.gen_id(prefix,'movewidget','zx')}}" type="number" placeholder="X" value="{{ defaultX }}" /></label></div>
            <div class="padded cell grow-0 shrink-0">/</div>
            <div class="padded cell grow-1 shrink-1"><label><input id="{{ _self.gen_id(prefix,'movewidget','zy')}}" type="number" placeholder="Y" value="{{ defaultY }}" /></label></div>
            <div class="padded cell grow-0 shrink-0">]</div>
        </div>
        <div class="row-flex">
            <div class="cell"><input type="checkbox" name="{{ _self.gen_id(prefix, 'movewidget', 'escort') }}" id="{{ _self.gen_id(prefix, 'movewidget', 'escort') }}" /><label for="{{ _self.gen_id(prefix, 'movewidget', 'escort') }}">{{ 'Eskortierte Bürger teleportieren'|trans({}, 'admin') }}</label></div>
        </div>
        <div class="row-flex">
            <div class="padded cell grow-0 shrink-0"><button id="{{ _self.gen_id(prefix,'movewidget','set')}}"><i class="fa fa-hand-point-down"></i><div class="tooltip">{{'Setzen'|trans({}, 'admin')}}</div></button></div>
        </div>
    </div>
{% endmacro %}
{% macro widget_teleport_control_js(selector, api_url, load_url, prefix = '') %}
    <script>
        $.html.addEventListenerAll('#{{ _self.gen_id(prefix,'movewidget','town')}},#{{ _self.gen_id(prefix,'movewidget','zone')}}','click', function(){
            if (document.getElementById('{{ _self.gen_id(prefix,'movewidget','zone')}}').checked)
                document.getElementById('{{ _self.gen_id(prefix,'movewidget','zone_edit')}}').classList.remove('hidden');
            else document.getElementById('{{ _self.gen_id(prefix,'movewidget','zone_edit')}}').classList.add('hidden');
        });
        $.html.addEventListenerAll('#{{ _self.gen_id(prefix,'movewidget','set')}}','click', function(e,elem){
            let targets = [];

            document.querySelectorAll('{{ selector|e('js') }}').forEach( element => targets.push(parseInt(element.getAttribute('x-id'))) );
            if (targets.length === 0) {
                $.html.error('{{ 'Kein Bürger ausgewählt!'|trans({}, 'admin') }}');
                return;
            }

            $.ajax.easySend('{{ api_url }}', {
                to: document.getElementById('{{ _self.gen_id(prefix,'movewidget','zone')}}').checked ? [parseInt(document.getElementById('{{ _self.gen_id(prefix,'movewidget','zx')}}').value),parseInt(document.getElementById('{{ _self.gen_id(prefix,'movewidget','zy')}}').value)] : 'town',
                targets: targets,
                escort: document.getElementById('{{ _self.gen_id(prefix, 'movewidget', 'escort') }}').checked
            }, () => $.ajax.load(null, '{{ load_url }}', true)
            );
        });
    </script>
{% endmacro %}
<!-- </editor-fold> -->

<!-- <editor-fold desc="Home Manager Widget"> -->
{% macro widget_home_control(citizen, upgrades, prefix = '') %}
    {# @var citizen \App\Entity\Citizen #}
    {# @var upgrades \App\Entity\CitizenHomeUpgradePrototype[] #}
    <div class="lightbox">
        <div class="row">
            <div class="padded cell rw-12">{{'Hausverbesserungen:'|trans({}, 'admin')}}</div>
        </div>
        <div class="row-flex">
            <div class="padded cell grow-1 shrink-1">
                <img alt="{{ citizen.home.prototype.level }}" src="{{ asset('build/images/home/' ~ citizen.home.prototype.icon ~ '.gif') }}" />
                {{ citizen.home.prototype.label|trans({},'buildings') }}
            </div>
            <div class="padded cell grow-0 shrink-0">
                <button x-dif="-1" id="{{ _self.gen_id(prefix,'homewidget','home-level-minus')}}"><i class="fa fa-minus"></i></button>
            </div><div class="padded cell grow-0 shrink-0">
                <button x-dif="1" id="{{ _self.gen_id(prefix,'homewidget','home-level-plus')}}"><img alt="+" src="{{ asset('build/images/icons/small_more2.gif') }}" /></button>
            </div>
        </div>
        {% if citizen.home.prototype.allowSubUpgrades %}
            {% set existing_protos = [] %}
            <hr />
            {% for existing_upgrade in citizen.home.citizenHomeUpgrades %}
                {# @var existing_upgrade \App\Entity\CitizenHomeUpgrade #}
                {% set existing_protos = existing_protos|merge([existing_upgrade.prototype]) %}
                <div class="row-flex">
                    <div class="padded cell grow-1 shrink-1">
                        <img alt="" src="{{ asset('build/images/home/' ~ existing_upgrade.prototype.icon ~ '.gif') }}" />
                        <b>{{ existing_upgrade.prototype.label|trans({},'buildings') }}</b> <i>({{ existing_upgrade.level }})</i>
                    </div>
                    <div class="padded cell grow-0 shrink-0">
                        <button x-dif="-1" {{ _self.gen_attr(prefix,'homewidget','home-upgrade-minus', existing_upgrade.id)}}><i class="fa fa-minus"></i></button>
                    </div><div class="padded cell grow-0 shrink-0">
                        <button x-dif="1" {{ _self.gen_attr(prefix,'homewidget','home-upgrade-plus', existing_upgrade.id)}}><img alt="+" src="{{ asset('build/images/icons/small_more2.gif') }}" /></button>
                    </div>
                </div>
            {% endfor %}
            {% set first = true %}
            {% for upgrade in upgrades %}
                {# @var upgrade \App\Entity\CitizenHomeUpgradePrototype #}
                {% if upgrade not in existing_protos %}
                    {% if first %}
                        <hr />
                        {% set first = false %}
                    {% endif %}
                    <div class="row-flex">
                        <div class="padded cell grow-1 shrink-1">
                            <img alt="" src="{{ asset('build/images/home/' ~ upgrade.icon ~ '.gif') }}" />
                            {{ upgrade.label|trans({},'buildings') }}
                        </div>
                        <div class="padded cell grow-0 shrink-0">
                            <button {{ _self.gen_attr(prefix,'homewidget','home-upgrade-create', upgrade.id)}}><img alt="+" src="{{ asset('build/images/icons/small_more2.gif') }}" /></button>
                        </div>
                    </div>
                {% endif %}
            {% endfor %}
        {% endif %}
    </div>
{% endmacro %}
{% macro widget_home_control_js(selector, api_url, load_url, prefix = '') %}
    <script>
        $.html.addEventListenerAll('#{{ _self.gen_id(prefix,'homewidget','home-level-minus')}}[x-dif],#{{ _self.gen_id(prefix,'homewidget','home-level-plus')}}[x-dif]','click', function(e,elem){
            let targets = [];
            document.querySelectorAll('{{ selector|e('js') }}').forEach( element => targets.push(parseInt(element.getAttribute('x-id'))) );

            if (targets.length === 0) {
                $.html.error('{{ 'Kein Bürger ausgewählt!'|trans({}, 'admin') }}');
                return;
            }

            $.ajax.easySend('{{ api_url }}', {
                    target: 'home', dif: parseInt(elem.getAttribute('x-dif')), citizen: targets
                }, () => $.ajax.load(null, '{{ load_url }}', true)
            );
        });

        $.html.addEventListenerAll('[{{ _self.gen_attr(prefix,'homewidget','home-upgrade-minus')}}][x-dif],[{{ _self.gen_attr(prefix,'homewidget','home-upgrade-plus')}}][x-dif]','click', function(e,elem){
            let targets = [];
            document.querySelectorAll('{{ selector|e('js') }}').forEach( element => targets.push(parseInt(element.getAttribute('x-id'))) );

            if (targets.length === 0) {
                $.html.error('{{ 'Kein Bürger ausgewählt!'|trans({}, 'admin') }}');
                return;
            }

            const id = elem.getAttribute('{{ _self.gen_attr(prefix,'homewidget','home-upgrade-minus')}}') ? elem.getAttribute('{{ _self.gen_attr(prefix,'homewidget','home-upgrade-minus')}}') : elem.getAttribute('{{ _self.gen_attr(prefix,'homewidget','home-upgrade-plus')}}');

            $.ajax.easySend('{{ api_url }}', {
                    target: 'sub', dif: parseInt(elem.getAttribute('x-dif')), id: parseInt(id), citizen: targets
                }, () => $.ajax.load(null, '{{ load_url }}', true)
            );
        });

        $.html.addEventListenerAll('[{{ _self.gen_attr(prefix,'homewidget','home-upgrade-create')}}]','click', function(e,elem){
            let targets = [];
            document.querySelectorAll('{{ selector|e('js') }}').forEach( element => targets.push(parseInt(element.getAttribute('x-id'))) );

            if (targets.length === 0) {
                $.html.error('{{ 'Kein Bürger ausgewählt!'|trans({}, 'admin') }}');
                return;
            }

            $.ajax.easySend('{{ api_url }}', {
                    target: 'proto', dif: 1, id: parseInt(elem.getAttribute('{{ _self.gen_attr(prefix,'homewidget','home-upgrade-create')}}')), citizen: targets
                }, () => $.ajax.load(null, '{{ load_url }}', true)
            );
        });
    </script>
{% endmacro %}
<!-- </editor-fold> -->

<!-- <editor-fold desc="Alias Manager Widget"> -->
{% macro widget_alias_control(citizen, prefix = '') %}
    {# @var citizen \App\Entity\Citizen #}
    <div class="lightbox">
        <div class="row">
            <div class="padded cell rw-12">{{'Bürger-Alias ​​ändern:'|trans({}, 'admin')}}</div>
        </div>
        <div class="row-flex">
            <div class="padded cell grow-1 shrink-1"><label><input id="{{ _self.gen_id(prefix,'aliaswidget','alias-change')}}" type="text" placeholder="{{'Kein Alias ​​angegeben'|trans({}, 'admin')}}" value="{{ citizen.alias[2:] }}" /></label></div>
            <div class="padded cell grow-0 shrink-0"><button x-control="0"  id="{{ _self.gen_id(prefix,'aliaswidget','set')}}"> <i class="fa fa-hand-point-down"></i><div class="tooltip">{{'Setzen'|trans({}, 'admin')}}</div></button></div>
            <div class="padded cell grow-0 shrink-0"><button x-control="-1" id="{{ _self.gen_id(prefix,'aliaswidget','take')}}"><i class="fa fa-minus"></i><div class="tooltip">{{'Abziehen'|trans({}, 'admin')}}</div></button></div>
        </div>
    </div>
{% endmacro %}
{% macro widget_alias_control_js(selector, api_url, load_url, prefix = '') %}
    <script>
        $.html.addEventListenerAll('#{{ _self.gen_id(prefix,'aliaswidget','set')}},#{{ _self.gen_id(prefix,'aliaswidget','take')}}','click', function(e,elem){
            const alias_field = document.getElementById('{{ _self.gen_id(prefix,'aliaswidget','alias-change')}}');
            let alias = alias_field.value;

            if(parseInt(elem.getAttribute('x-control')) == -1) {
                alias = null;
                alias_field.value = null;
            } else {
                if (alias.length < 4) {
                    $.html.error('{{ 'Dein Name muss mindestens { limit } Zeichen umfassen.'|trans({'{{ limit }}': '4'},'login')|e('js') }}');
                    return;
                }
                if (alias.length > 22) {
                    $.html.error('{{ 'Dein Name kann höchstens { limit } Zeichen umfassen.'|trans({'{{ limit }}': '22'},'login')|e('js') }}');
                    return;
                }
                if (alias.match(/[^\w]/)) {
                    $.html.error('{{ 'Dein Name kann nur alphanumerische Zeichen enthalten.'|trans({},'login')|e('js') }}');
                    return;
                }
            }
            
            let targets = [];
            document.querySelectorAll('{{ selector|e('js') }}').forEach( element => targets.push(parseInt(element.getAttribute('x-id'))) );
            if (targets.length === 0) {
                $.html.error('{{ 'Kein Bürger ausgewählt!'|trans({}, 'admin') }}');
                return;
            }
            if (targets.length > 1) {
                $.html.error('{{ 'Bitte nicht für mehrere Bürger denselben Alias eingeben!'|trans({}, 'admin') }}');
                return;
            }

            $.ajax.easySend('{{ api_url }}', {
                    alias: alias, targets: targets
                }, () => $.ajax.load(null, '{{ load_url }}', true)
            );
        });
    </script>
{% endmacro %}
<!-- </editor-fold> -->