{% extends "ajax/game/game.html.twig" %}
{% block title %}{{'Wiedergeburt: Privatstadt gründen'|trans({}, 'ghost')|raw}}{% endblock %}
{% block menu_text %}
    {{ parent() }}
    <li class="back-dash" x-ajax-href="{{ url('game_landing') }}">{{ 'Zum Spiel'|trans({},'global') }}</li>
{% endblock %}

{% block ajax %}
    <div class="row form soul">
        <div class="cell-small header rw-18 ro-3 rw-lg-20 ro-lg-2 rw-md-24 ro-md-0 edge-top-left">
            <div class="tabs">
                <div class="tab-floater">
                    <div class="tab left inline">
                        {% if app.user.avatar %}
                            <div class="avatar small ua-{{ app.user.id % 10 }}"><img alt="" src="{{ path('app_web_avatar', {'uid': app.user.id, 'name': app.user.avatar.smallName, 'ext': app.user.avatar.format}) }}"></div>
                        {% endif %}
                        <h4 class="soul-name">
                            <a class="username">{{ app.user.name }}</a>
                        </h4>
                        <div class="town-join-rp hide-sm">
                            <span class="town-join-rp-head">
                                {% trans from 'ghost' %}
                                    Ein neues Leben beginnen
                                {% endtrans %}
                            </span>
                            <div class="town-join-rp-text">
                                {% trans from 'ghost' %}
                                    ...und mit 39 Mitbürgern in der Hölle schmoren
                                {% endtrans %}
                            </div>
                        </div>
                    </div>
                    <div class="tab tab-floater">
                        <div class="tab selected">
                            <div class="tab-link"><img src="{{ asset('build/images/item/item_chair.gif') }}" alt=""/><span class="hide-md hide-sm"> {% trans from 'ghost' %}Privatstadt gründen{% endtrans %}</span></div>
                        </div>
                        <div class="tab">
                            <div class="tab-link" x-ajax-sticky x-ajax-href="{{ path('ghost_welcome') }}"><img src="{{ asset('build/images/icons/small_world.gif') }}" alt="" /><span class="hide-md hide-sm"> {% trans from 'ghost' %}Einer Stadt beitreten{% endtrans %}</span></div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="cell padded rw-12">
                    <div class="help">{{'In Privatstädten kannst du gemeinsam mit Freunden oder in Städten zu bestimmten "Theen" zu spielen.'|trans({}, 'ghost')}}</div>

                    {% if is_granted('ROLE_CROW') %}
                        <div class="row">
                            <div class="cell padded rw-3 rw-md-6 rw-sm-12 note note-lightest">
                                <label for="townname">{{'Name der Stadt'|trans({}, 'ghost')}}</label>
                            </div>
                            <div class="cell padded rw-3 rw-md-6 rw-sm-12">
                                <input type="text" x-payload="townName" name="townname" id="townname" />
                            </div>
                        </div>
                    {% endif %}

                    <div class="row">
                        <div class="cell padded rw-3 rw-md-6 rw-sm-12 note note-lightest">
                            <label for="lang">{{'Sprache'|trans({}, 'global')}}</label>
                        </div>
                        <div class="cell padded rw-3 rw-md-6 rw-sm-12">
                            <select name="lang" id="lang" x-payload="lang">
                                <option value="de" {% if app.user.language == 'de' %}selected{% endif %}>{{ 'Deutsch'|trans({}, 'global') }}</option>
                                <option value="en" {% if app.user.language == 'en' %}selected{% endif %}>{{ 'Englisch'|trans({}, 'global') }}</option>
                                <option value="fr" {% if app.user.language == 'fr' %}selected{% endif %}>{{ 'Französisch'|trans({}, 'global') }}</option>
                                <option value="es" {% if app.user.language == 'es' %}selected{% endif %}>{{ 'Spanisch'|trans({}, 'global') }}</option>
                                <option value="multi">{{ 'Mehrsprachig'|trans({}, 'global') }}</option>
                            </select>
                        </div>
                    </div>

                    <div class="row">
                        <div class="cell padded rw-3 rw-md-6 rw-sm-12 note note-lightest">
                            <label for="password">{{'Zugangscode'|trans({}, 'ghost')}} <a class="help-button"><div class="tooltip help">{{ 'Wenn Bürger deine Stadt betreten möchten, wird ein Zugangsdode abgefragt. Nur mit korrektem Zugangscode erhalten sie Zutritt. Verteile den Zugangscode darum an die Spieler, die du einladen möchtest. <strong>Und benutze nicht dein privates Passwort als Zugangscode!!!</strong>'|trans({},'global')|raw }}</div>{{ 'Hilfe'|trans({},'global') }}</a></label>
                        </div>
                        <div class="cell padded rw-3 rw-md-6 rw-sm-12">
                            <input type="text" x-payload="password" name="password" id="password"/>
                        </div>
                    </div>

                    <div class="row">
                        <div class="cell padded ro-3 rw-3 ro-md-6 rw-md-6 ro-sm-0 rw-sm-12">
                            <button id="save-spots-btn">{{ 'Platzreservierung'|trans({}, 'ghost') }}</button>
                        </div>
                        <div class="cell padded ro-3 rw-9 ro-md-6 rw-md-6 ro-sm-0 rw-sm-12" id="save-spots-form" style="display:none">
                            <div id="save-spots-container">
                                <div id="stateholder"></div>
                                <div class="placeholder">{{ 'Du hast aktuell noch keine Plätze reserviert.'|trans({},'soul') }}</div>
                            </div>
                            <div id="town-add-user-selector">
                                <h5>{{ 'Eine Reservierung hinzufügen'|trans({},'ghost') }}</h5>
                                <div id="town-add-users-list-container">
                                    <div><label><input type="text" id="town-add-users-search" /></label><div class="tooltip help">{{ 'Gib den Pseudo des Bürgers ein.'|trans({},'soul') }}</div></div>
                                    <div id="town-add-users-list"></div>
                                </div>
                                <div class="cell padded rw-6 rw-md-12">
                                    <div class="help">
                                        <p>{% trans from "ghost" %}
                                            Du kannst hier festlegen, welche Spieler in deiner Privatstadt spielen dürfen. Andere Spieler können die Stadt nicht betreten! Als Stadtgründer kannst du in deiner Privatstadt immer auch selber mitspielen. Gibst du nur 39 Spieler an, wärst du der also der 40. Bürger.
                                        {% endtrans %}</p>
                                        <p>{% trans from "ghost" %}
                                            So geht's: Tippe einen Spielernamen in das Feld ein. Wähle ihn dann aus den angezeigten Namen aus. Klicke dann auf "Hinzufügen". Wiederhole das für alle Spieler, die du auf die Liste setzen möchtest. Alternativ kannst du auch eine mit Komma getrennte Liste von Spielernamen eingeben, um mehrere Spieler auf einmal hiinzuzufügen. Falls du ein Passwort vergeben hast, vergiss nicht, es den Spielern zu schicken (z.B. in einer privaten Nachricht).
                                        {% endtrans %}</p>
                                        <p>{% trans from "ghost" %}
                                            <strong>Hinweis:</strong> Beachte, dass sich diese Liste nicht nachträglich ändern lässt. Es ist darum empfehlenwert, <strong>mehr als nur 39 Spieler</strong> anzugeben. Dann hast du eine Reserve, falls ein oder mehrere Spieler nicht teilnehmen können.
                                        {% endtrans %}</p>
                                        <p>{% trans from "ghost" %}
                                            <strong>Hinweis:</strong> Wenn du <strong>weniger als 39 Spieler</strong> angibst, wird die Stadt automatisch für alle Spieler geöffnet, sobald alle Spieler auf der Liste die Stadt betreten haben.
                                        {% endtrans %}</p>
                                        <p>{% trans from "ghost" %}
                                            <strong>Falls bis Mitternacht des übernächsten Tags nicht 40 Spieler die Stadt betreten haben, wird sie automatisch negiert. Alle Spieler, die sich dann bereits in der Stadt eingefunden haben, sind dann wieder frei für andere Städte.</strong>
                                        {% endtrans %}</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="cell padded rw-3 rw-md-6 rw-sm-12 note note-lightest">
                            <label for="type">{{'Stadttyp'|trans({}, 'ghost')}}</label>
                        </div>
                        <div class="cell padded rw-3 rw-md-6 rw-sm-12">
                            <select name="type" id="type" x-payload="townType">
                                {% for townClass in townClasses %}
                                    <option value="{{townClass.name}}">{{townClass.label|trans({}, 'game')}}</option>
                                {% endfor %}
                            </select>
                            {% if is_granted('ROLE_CROW') %}
                                <p class="small mod">
                                    <input type="checkbox" name="unprivate" id="unprivate" x-payload="unprivate" /> <label for="unprivate"><strong>{{'Nicht als Privatstadt erstellen:'|trans({}, 'ghost')}}</strong></label>
                                </p>
                            {% endif %}
                        </div>
                        {% if is_granted('ROLE_CROW') %}
                            <div class="cell padded rw-6 rw-md-12">
                                <div class="help"><strong>{{'Nicht als Privatstadt erstellen:'|trans({}, 'ghost')}}</strong> {{'Die Stadt wird nicht in der Liste der Privatstädte, sondern in der oben gewählten Gruppe erscheinen. Diese Option hat keine Auswirkungen auf die Spielregeln oder die Vergabe von Auszeichnungen und Seelenpunkten!'|trans({}, 'ghost')}}</div>
                            </div>
                        {% endif %}
                    </div>

                    <div class="row">
                        <div class="cell padded rw-3 rw-md-6 rw-sm-12 note note-lightest">
                            <label for="water">{{"Wasservorrat"|trans({}, 'ghost')}}</label>
                        </div>
                        <div class="cell padded rw-3 rw-md-6 rw-sm-12">
                            <input type="number" name="water" id="water" x-payload="well"/>
                        </div>
                        <div class="cell padded rw-6 rw-md-12">
                            <div class="help">{{'Normale Werte liegen zwischen 100 und 180. Wert ist in Pandämonium-Städten reduziert. Maximum ist 300'|trans({}, 'ghost')}}</div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="cell padded rw-3 rw-md-6 rw-sm-12 note note-lightest">
                            <label>{{'Einstellungen'|trans({}, 'ghost')}}</label>
                        </div>
                        <div class="cell padded rw-9 rw-md-6 rw-sm-12 mod">
                            <input type="checkbox" name="disablexml" id="disablexml" x-payload="disablexml" /> <label for="disablexml"><strong>{{'Kein XML Feed:'|trans({}, 'ghost')}}</strong> {{'XML Feed für diese Stadt deaktivieren'|trans({}, 'ghost')}}</label>
                        </div>
                    </div>

                    <h5>{{'Event-Stadt'|trans({}, 'ghost')}}</h5>
                    <div class="row">
                        <div class="cell padded rw-3 rw-md-6 rw-sm-12 note note-lightest">
                            <label for="rules">{{'Spezialregeln'|trans({}, 'ghost')}}</label>
                        </div>
                        <div class="cell padded rw-9 rw-md-6 rw-sm-12">
                            <select id="rules" name="rules" multiple x-payload="rules">
                                <option value="none" title="{{'Keine Spezialregeln'|trans({}, 'ghost')}}" selected>{{'Keine'|trans({}, 'ghost')}}</option>
                                <option value="nobuilding" title="{{'Kein Gebäude ist zu Beginn freigeschaltet. Alle müssen in der Aussenwelt gefunden werden!'|trans({}, 'ghost')}}">{{'Keine Startgebäude'|trans({}, 'ghost')}}</option>
                                <option value="poison" title="{{'Jedes Essen und jede Droge, die du zu dir nimmst, birgt ein geringes Infektionsrisiko.'|trans({}, 'ghost')}}">{{'Kontaminierte Zone'|trans({}, 'ghost')}}</option>
                                <option value="nobeta" title="{{'Betapropin steht nicht zur Verfügung.'|trans({}, 'ghost')}}">{{'Beta-Funktionen deaktivieren'|trans({}, 'ghost')}}</option>
                            </select>
                        </div>
                    </div>
                    <div class="row">
                        <div class="cell padded rw-3 rw-md-6 rw-sm-12 note note-lightest">
                            <label for="mapsize">{{'Kartengröße'|trans({}, 'ghost')}}</label>
                        </div>
                        <div class="cell padded rw-3 rw-md-6 rw-sm-12">
                            <select name="mapsize" id="mapsize" x-payload="mapsize">
                                <option value="auto" selected>{{'Automatisch'|trans({}, 'ghost')}}</option>
                                <option value="small">{{'Kleine Karte'|trans({}, 'ghost')}}</option>
                                <option value="normal">{{'Normale Karte'|trans({}, 'ghost')}}</option>
                                {% if is_granted('ROLE_CROW') %}
                                    <option value="large">{{'Riesige Karte'|trans({}, 'ghost')}}</option>
                                    <option value="custom">{{'Eigene Einstellung'|trans({}, 'ghost')}}</option>
                                {% endif %}
                            </select>
                        </div>
                    </div>
                    {% if is_granted('ROLE_CROW') %}
                        <div id="mapsize_e_parent" style="display: none">
                            <div class="row">
                                <div class="cell padded rw-3 rw-md-6 rw-sm-12 note note-lightest">
                                    <label for="mapsize_e">{{'Exakte Kartengröße'|trans({}, 'ghost')}}</label>
                                </div>
                                <div class="cell padded rw-3 rw-md-6 rw-sm-12">
                                    <input type="number" min="10" max="35" name="mapsize_e" id="mapsize_e" x-payload="mapsize_e" value="25"/>
                                </div>
                            </div>
                            <div class="row">
                                <div class="cell padded rw-3 rw-md-6 rw-sm-12 note note-lightest">
                                    <label for="ruins_num">{{'Anzahl Ruinen'|trans({}, 'ghost')}}</label>
                                </div>
                                <div class="cell padded rw-3 rw-md-6 rw-sm-12">
                                    <input type="number" min="0" max="30" name="ruins_num" id="ruins_num" x-payload="ruins_num" value="20"/>
                                </div>
                            </div>
                            <div class="row" id="conf_explorable_count">
                                <div class="cell padded rw-3 rw-md-6 rw-sm-12 note note-lightest">
                                    <label for="ruins_e_num">{{'Anzahl Begehbare Ruinen'|trans({}, 'ghost')}}</label>
                                </div>
                                <div class="cell padded rw-3 rw-md-6 rw-sm-12">
                                    <input type="number" min="1" max="5" name="ruins_e_num" id="ruins_e_num" x-payload="ruins_e_num" value="1"/>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="cell padded rw-3 rw-md-6 rw-sm-12 note note-lightest">
                                <label for="mapmargin">{{'Position der Stadt'|trans({}, 'ghost')}}</label>
                            </div>
                            <div class="cell padded rw-3 rw-md-6 rw-sm-12">
                                <select name="mapmargin" id="mapmargin" x-payload="mapmargin">
                                    <option value="normal" selected>{{'Normal'|trans({}, 'ghost')}}</option>
                                    <option value="small">{{'Eher Zentral'|trans({}, 'ghost')}}</option>
                                    <option value="center">{{'Zentral'|trans({}, 'ghost')}}</option>
                                </select>
                            </div>
                        </div>
                        <div class="row">
                            <div class="cell padded rw-3 rw-md-6 rw-sm-12 note note-lightest">
                                <label for="pop">{{'Einwohnerzahl'|trans({}, 'ghost')}}:</label>
                            </div>
                            <div class="cell padded rw-3 rw-md-6 rw-sm-12">
                                <input type="text" name="pop" id="pop" x-payload="pop"/>
                            </div>
                            <div class="cell padded rw-6 rw-md-12">
                                <div class="help">
                                    {% trans from "ghost"%}
                                    Muss zwischen 10 und 80 liegen.
                                    {% endtrans %}
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="cell padded rw-3 rw-md-6 rw-sm-12 note note-lightest">
                                <label for="seed">{{'Karten-Seed'|trans({}, 'ghost')}}:</label>
                            </div>
                            <div class="cell padded rw-3 rw-md-6 rw-sm-12">
                                <input type="text" name="seed" id="seed" x-payload="seed" value="-1"/>
                            </div>
                            <div class="cell padded rw-6 rw-md-12">
                                <div class="help">
                                    {% trans from "ghost"%}
                                    Seed, das eine kontrollierte Kartenerstellung ermöglicht. Erlaubt im Falle von Ereignissen, ähnliche Karten zu generieren.
                                    Gib eine positive ganze Zahl ein, um es zu aktivieren.
                                    DENKT DARÜBER NACH, DIESE GANZE ZAHL VON EINEM EREIGNIS ZUM ANDEREN ZU ÄNDERN !
                                    {% endtrans %}
                                </div>
                            </div>
                        </div>
                    {% endif %}

                    <h5>{{'Stadtmodifikationen'|trans({}, 'ghost')}}</h5>
                    <div class="row">
                        <div class="cell padded rw-3 rw-md-6 rw-sm-12 note note-lightest">
                            <label for="ghoulType">{{'Ghule'|trans({}, 'ghost')}}</label>
                        </div>
                        <div class="cell padded rw-3 rw-md-6 rw-sm-12">
                            <select name="ghoulType" id="ghoulType" x-payload="ghoulType">
                                <option value="normal" title="{{'Es erscheint zwar kein Ghul um Mitternacht. Dafür können andere Ereignisse das Auftreten von Ghulen auslösen.'|trans({}, 'ghost')}}">{{'Normal'|trans({}, 'ghost')}}</option>
                                <option value="childtown" title="{{'Ghule sind deaktiviert.'|trans({}, 'ghost')}}">{{'Stadt der Kuscheltiere'|trans({}, 'ghost')}}</option>
                                <option value="bloodthirst" title="{{'Das Auftreten von Ghulen wird nicht geändert. Allerdings kann ein Ghul seinen Hunger nur stillen, indem er einen Mitbürger verspeist.'|trans({}, 'ghost')}}">{{'Blutdurst'|trans({}, 'ghost')}}</option>
                                <option value="airborne" title="{{'Je nach gewähltem Stadttyp erscheinen Ghule nach den üblichen Regeln.'|trans({}, 'ghost')}}">{{'Aerogen'|trans({}, 'ghost')}}</option>
                                <option value="airbnb" title="{{'Je nach gewähltem Stadttyp erscheinen Ghule nach den üblichen Regeln. Außerdem kann ein Ghul seinen Hunger nur stillen, indem er einen Mitbürger verspeist.'|trans({}, 'ghost')}}">{{'Blutdurst und Aerogen'|trans({}, 'ghost')}}</option>
                            </select>
                        </div>
                        <div class="cell padded rw-6 rw-md-12">
                            <div class="help" id="helpGhoul"></div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="cell padded rw-3 rw-md-6 rw-sm-12 note note-lightest">
                            <label for="shamanMode">{{'Seelen & Schamane:'|trans({}, 'ghost')}}</label>
                        </div>
                        <div class="cell padded rw-3 rw-md-6 rw-sm-12">
                            <select name="shamanMode" id="shamanMode" x-payload="shamanMode">
                                <option value="normal" title="{{'Der Schamane wird gewählt und die Seelen werden gequält.'|trans({}, 'ghost')}}">{{'Normal'|trans({}, 'ghost')}}</option>
                                <option value="job" title="{{'Der Schamane ist ein Beruf, die Seelen werden in der Werkstatt verwandelt.'|trans({}, 'ghost')}}">{{'Job'|trans({}, 'ghost')}}</option>
                                <option value="none" title="{{'Der Schamane und die Seelen werden deaktiviert.'|trans({}, 'ghost')}}">{{'Deaktiviert'|trans({}, 'ghost')}}</option>
                            </select>
                        </div>
                        <div class="cell padded rw-6 rw-md-12">
                            <div class="help" id="helpShaman"></div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="cell padded rw-3 rw-md-6 rw-sm-12 note note-lightest">
                            <label for="nightWatchMode">{{'Nachtwache:'|trans({}, 'ghost')}}</label>
                        </div>
                        <div class="cell padded rw-3 rw-md-6 rw-sm-12">
                            <select name="nightWatchMode" id="nightWatchMode" x-payload="nightWatchMode">
                                <option value="normal" title="{{'Die Nachtwache ist verfügbar, wenn das Gebäude "Brustwehr" errichtet wurde.'|trans({}, 'ghost')}}">{{'Normal'|trans({}, 'ghost')}}</option>
                                <option value="instant" title="{{'Die Nachtwache ist von Anfang an verfügbar.'|trans({}, 'ghost')}}">{{'Sofort'|trans({}, 'ghost')}}</option>
                                <option value="none" title="{{'Die Nachtwache ist deaktiviert.'|trans({}, 'ghost')}}">{{'Deaktiviert'|trans({}, 'ghost')}}</option>
                            </select>
                        </div>
                        <div class="cell padded rw-6 rw-md-12">
                            <div class="help" id="helpNightWatch"></div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="cell padded rw-3 rw-md-6 rw-sm-12 note note-lightest">
                            <label for="nightMode">{{'Nachtmodus:'|trans({}, 'ghost')}}</label>
                        </div>
                        <div class="cell padded rw-3 rw-md-6 rw-sm-12">
                            <select name="nightMode" id="nightMode" x-payload="nightmode">
                                <option value="myhordes" title="{{'Der Nachtmodus ist aktiviert und die Straßenbeleuchtung ist verfügbar.'|trans({}, 'ghost')}}">{{'Erweitert'|trans({}, 'ghost')}}</option>
                                <option value="hordes" title="{{'Der Nachtmodus ist aktiviert. Die Straßenbeleuchtung steht nicht zur Verfügung.'|trans({}, 'ghost')}}">{{'Normal'|trans({}, 'ghost')}}</option>
                                <option value="none" title="{{'Der Nachtmodus ist deaktiviert.'|trans({}, 'ghost')}}">{{'Deaktiviert'|trans({}, 'ghost')}}</option>
                            </select>
                        </div>
                        <div class="cell padded rw-6 rw-md-12">
                            <div class="help" id="helpNightMode"></div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="cell padded rw-3 rw-md-6 rw-sm-12 note note-lightest">
                            <label>{{'Spielmodifikationen:'|trans({}, 'ghost')}}</label>
                        </div>
                        <div class="cell padded rw-9 rw-md-6 rw-sm-12 mod">
                            <div><input type="checkbox" name="explorableruins" id="explorableruins" x-payload="ruins" checked/> <label for="explorableruins"><strong>{{'Exploration:'|trans({}, 'ghost')}}</strong> {{'Begehbare Ruinen aktivieren'|trans({}, 'ghost')}}</label></div>
                            <div><input type="checkbox" name="escorts" id="escorts" x-payload="escorts" checked/> <label for="escorts"><strong>{{'Eskorte:'|trans({}, 'ghost')}}</strong> {{'Eskorten aktivieren'|trans({}, 'ghost')}}</label></div>
                            <div><input type="checkbox" name="shun" id="shun" x-payload="shun" checked/> <label for="shun"><strong>{{'Verbannung:'|trans({}, 'ghost')}}</strong> {{'Verbannung aktivieren'|trans({}, 'ghost')}}</label></div>
                            <div><input type="checkbox" name="camp" id="camp" x-payload="camp" checked/> <label for="camp"><strong>{{'Camping:'|trans({}, 'ghost')}}</strong> {{'Camping in der Wildnis aktivieren'|trans({}, 'ghost')}}</label></div>
                            <div><input type="checkbox" name="buildingdamages" id="buildingdamages" x-payload="buildingdamages" checked/> <label for="buildingdamages"><strong>{{'Gebäudeschaden:'|trans({}, 'ghost')}}</strong> {{'Gebäudeschaden aktivieren'|trans({}, 'ghost')}}</label></div>
                            <div><input type="checkbox" name="improveddump" id="improveddump" x-payload="improveddump" checked/> <label for="improveddump"><strong>{{'Verbesserte Müllhalde:'|trans({}, 'ghost')}}</strong> {{'Verbesserte Müllhalde aktivieren'|trans({}, 'ghost')}}</label></div>
                        </div>
                        <div class="cell padded rw-12">
                            <div class="help">
                                {{'Aktiviere/deaktiviere Spielmodifikationen spezifisch für diese Stadt'|trans({}, 'ghost')}}
                            </div>
                        </div>
                    </div>

                    <h5>{{'Angriffe'|trans({}, 'ghost')}}</h5>
                    <div class="row">
                        <div class="cell padded rw-3 rw-md-6 rw-sm-12 note note-lightest">
                            <label for="attack">{{'Stärke der Angriffe'|trans({}, 'ghost')}}</label>
                        </div>
                        <div class="cell padded rw-3 rw-md-6 rw-sm-12">
                            <select name="attack" id="attack" x-payload="attacks">
                                <option value="normal">{{'Normal'|trans({}, 'ghost')}}</option>
                                <option value="easy">{{'Leiche Angriffe'|trans({}, 'ghost')}}</option>
                                <option value="hard">{{'Schwere Angriffe'|trans({}, 'ghost')}}</option>
                            </select>
                        </div>
                    </div>

                    {% if is_granted('ROLE_CROW') %}


                        <h5>{{'Raben-Optionen'|trans({}, 'ghost')}}</h5>

                        <div class="row">
                            <div class="cell padded rw-3 rw-md-6 rw-sm-12 note note-lightest">
                                <label>{{'Spiel-Optionen'|trans({}, 'ghost')}}</label>
                            </div>

                            <div class="cell padded rw-9 rw-md-6 rw-sm-12 mod">
                                <div><input type="checkbox" name="incarnated" id="incarnated" x-payload="incarnated" checked/> <label for="incarnated"><strong>{{'Verkörperung in der Stadt:'|trans({}, 'ghost')}}</strong> {{'Verkörpert dich in der Stadt bei ihrer Entstehung'|trans({}, 'ghost')}}</label></div>
                                <div><input type="checkbox" name="allpictos" id="allpictos" x-payload="allpictos" checked/> <label for="allpictos"><strong>{{'Abstimmung aller Piktogramme:'|trans({}, 'ghost')}}</strong> {{'Gibt die Gesamtheit der während der Stadt erhaltenen Piktogramme an, anstatt ein Drittel davon.'|trans({}, 'ghost')}}</label></div>
                                <div><input type="checkbox" name="strict_pictos" id="strict_pictos" x-payload="strict_pictos" /> <label for="strict_pictos"><strong>{{'Strikte Vergabe von Auszeichnungen:'|trans({}, 'ghost')}}</strong> {{'Vergabe von Auszeichnungen folgt den Regeln kleiner Städte.'|trans({}, 'ghost')}}</label></div>
                                <div><input type="checkbox" name="soulpoints" id="soulpoints" x-payload="soulpoints" checked/> <label for="soulpoints"><strong>{{'Seelenpunkte vergeben:'|trans({}, 'ghost')}}</strong> {{'Gibt Ihnen Seelenpunkte.'|trans({}, 'ghost')}}</label></div>
                                <div><input type="checkbox" name="negate" id="negate" x-payload="negate" checked/> <label for="negate"><strong>{{'Nach 2 Tagen negieren:'|trans({}, 'ghost')}}</strong> {{'Negiert die Stadt, wenn sie nach 2 Tagen nicht gefüllt ist.'|trans({}, 'ghost')}}</label></div>
                                <div><input type="checkbox" name="lock_door" id="lock_door" x-payload="lock_door" checked/> <label for="lock_door"><strong>{{'Tor versperren:'|trans({}, 'ghost')}}</strong> {{'Das Stadttor kann erst geöffnet werden, wenn die Stadt voll ist.'|trans({}, 'ghost')}}</label></div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="cell padded rw-3 rw-md-6 rw-sm-12 note note-lightest">
                                <label>{{'Verfügbare Berufe'|trans({}, 'ghost')}}</label>
                            </div>

                            <div class="cell padded rw-9 rw-md-6 rw-sm-12 mod">
                                <div><input type="checkbox" x-payload="basic" name="basic" id="basic" checked/> <label for="basic"><strong>{{'Einwohner'|trans({}, 'game')}}</strong></label></div>
                                <div><input type="checkbox" x-payload="collec" name="collec" id="collec" checked/> <label for="collec"><strong>{{'Buddler'|trans({}, 'game')}}</strong></label></div>
                                <div><input type="checkbox" x-payload="guardian" name="guardian" id="guardian" checked/> <label for="guardian"><strong>{{'Wächter'|trans({}, 'game')}}</strong></label></div>
                                <div><input type="checkbox" x-payload="hunter" name="hunter" id="hunter" checked/> <label for="hunter"><strong>{{'Aufklärer'|trans({}, 'game')}}</strong></label></div>
                                <div><input type="checkbox" x-payload="tamer" name="tamer" id="tamer" checked/> <label for="tamer"><strong>{{'Dompteur'|trans({}, 'game')}}</strong></label></div>
                                <div><input type="checkbox" x-payload="tech" name="tech" id="tech" checked/> <label for="tech"><strong>{{'Techniker'|trans({}, 'game')}}</strong></label></div>
                                <div><input type="checkbox" x-payload="shaman" name="shaman" id="shaman"/> <label for="shaman"><strong>{{'Schamane'|trans({}, 'game')}}</strong></label></div>
                                <div><input type="checkbox" x-payload="survivalist" name="survivalist" id="survivalist" checked/> <label for="survivalist"><strong>{{'Einsiedler'|trans({}, 'game')}}</strong></label></div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="cell padded rw-3 rw-md-6 rw-sm-12 note note-lightest">
                                <label>{{'Events'|trans({}, 'ghost')}}</label>
                            </div>

                            <div class="cell padded rw-9 rw-md-6 rw-sm-12 mod">
                                <div><input type="checkbox" x-payload="event-management" name="event-management" id="event-management"/> <label for="event-management"><strong>{{'Manuelles Event-Management:'|trans({}, 'game')}}</strong> {{'Deaktiviert die normale Event-Verwaltung der Stadt und legt stattdessen manuell fest, welche Event-Inhalte für die Dauer der Stadt verfügbar sind.'|trans({}, 'game')}}</label></div>
                                <div id="event-list" style="display: none">
                                    <div><input type="radio" value="none" x-payload="event-name" name="event-name" id="event-none" checked/> <label for="event-none"><strong>{{'Kein Event:'|trans({}, 'game')}}</strong> {{ 'Startet die Stadt ohne Event-Inhalte'|trans({}, 'game') }}</label></div>
                                    <div><input type="radio" value="afools" x-payload="event-name" name="event-name" id="event-afools" /> <label for="event-afools"><strong>{{'1. April'|trans({}, 'game')}}</strong></label></div>
                                    <div><input type="radio" value="stpatrick" x-payload="event-name" name="event-name" id="event-stpatrick" /> <label for="event-stpatrick"><strong>{{'St. Patrick'|trans({}, 'game')}}</strong></label></div>
                                    <div><input type="radio" value="easter" x-payload="event-name" name="event-name" id="event-easter" /> <label for="event-easter"><strong>{{'Ostern'|trans({}, 'game')}}</strong></label></div>
                                    <div><input type="radio" value="halloween" x-payload="event-name" name="event-name" id="event-halloween" /> <label for="event-halloween"><strong>{{'Halloween'|trans({}, 'game')}}</strong></label></div>
                                    <div><input type="radio" value="arma" x-payload="event-name" name="event-name" id="event-arma" /> <label for="event-arma"><strong>{{'Armageddon'|trans({}, 'game')}}</strong></label></div>
                                    <div><input type="radio" value="christmas" x-payload="event-name" name="event-name" id="event-christmas" /> <label for="event-christmas"><strong>{{'Weihnachten'|trans({}, 'game')}}</strong></label></div>
                                </div>

                            </div>
                        </div>
                    {% endif %}

                    <div class="warning" id="negate_warning">
                        <strong>{{'Achtung!'|trans({}, 'ghost')}}</strong> {{'Falls die Stadt night in 2 Tagen gefüllt ist, wird sie wieder negiert.'|trans({}, 'ghost')}}
                    </div>
                    <div class="row">
                        <div class="cell padded rw-12">
                            <button id="create-town-btn">{{'Diese Stadt gründen'|trans({}, 'ghost')}}</button>
                        </div>
                    </div>

                    <div class="row">
                        <div class="cell padded rw-12">
                            <div class="small"><img alt="" src="{{ asset('build/images/icons/small_rp.gif') }}" /> {{'Beginne ein neues Leben in der Welt der Verdammten une versuche, so lang wie möglich zu überleben. Wer weiß, ws dich in dieser neuen Stadt erwarten wird?'|trans({}, 'ghost')}}</div>
                        </div>
                    </div>

                </div>

            </div>

        </div>
    </div>
{% endblock %}
{% block js %}
    {{parent()}}
    <script>

        let fun_link_help = function(selector_id, help_id, f = null) {
            $.html.addEventListenerAll('#' + selector_id, 'change', function(e,elem) {
                document.getElementById(help_id).innerText = elem.querySelector('option:checked').getAttribute('title');
                if (typeof f === 'function') f(elem.value);
            }, true);
        }

        fun_link_help('ghoulType','helpGhoul');
        fun_link_help('nightWatchMode','helpNightWatch');
        fun_link_help('nightMode','helpNightMode');
        fun_link_help('shamanMode','helpShaman', v => {
            if (document.getElementById('shaman')) document.getElementById('shaman').checked = (v === 'job')
        });

        $.html.addEventListenerAll('#negate', 'change', function(e,elem) {
            let w = document.getElementById('negate_warning');
            if (w) w.style.display = elem.checked ? null : 'none';
        });

        $.html.addEventListenerAll('#event-management', 'change', function(e,elem) {
            let w = document.getElementById('event-list');
            if (w) w.style.display = elem.checked ? null : 'none';
        });

        {% if is_granted('ROLE_CROW') %}
            $.html.addEventListenerAll('#mapsize', 'change', function(e,elem) {
                let w = document.getElementById('mapsize_e_parent');
                if (w) w.style.display = elem.value === 'custom' ? null : 'none';
            });
            $.html.addEventListenerAll('#explorableruins', 'change', function(e,elem) {
                let w = document.getElementById('conf_explorable_count');
                if (w) w.style.display = elem.checked ? null : 'none';
            });
        {% endif %}

        $.html.addEventListenerAll('#create-town-btn', 'click', function(){
            if (!confirm('{{ 'Bestätigen?'|trans({},'global')|e('js') }}'))
                return;

            let payload = {reserved_slots: []};
            $.html.forEach('#save-spots-container>[x-soul-id]', elem => payload.reserved_slots.push( parseInt(elem.getAttribute('x-soul-id')) ));

            $.html.forEach('input[type=checkbox][x-payload]', elem => payload[elem.getAttribute('x-payload')] = elem.checked );
            $.html.forEach('input[type=radio][x-payload]', elem => { if (elem.checked) payload[elem.getAttribute('x-payload')] = elem.value; } );
            $.html.forEach('select[x-payload][multiple]>option:checked', elem => {
                const xpayload = elem.parentElement.getAttribute('x-payload');
                if (typeof payload[xpayload] === 'undefined') payload[xpayload] = [];
                payload[xpayload].push(elem.value);
            } );
            $.html.forEach('input:not([type=checkbox]):not([type=radio])[x-payload],textarea[x-payload],select[x-payload]:not([multiple])', elem => payload[elem.getAttribute('x-payload')] = elem.value );

            $.ajax.send( '{{ path('ghost_process_create_town') }}', payload,
                function (data) {
                    $.ajax.load(null, data.url, true);
            } );
        });

        let typingTimer, doneTypingInterval = 500;
        let searchBox = document.getElementById('town-add-users-search');

        const update_place_count = function() {
            const c = document.querySelectorAll('#save-spots-container>[x-soul-id]').length;
            document.getElementById('stateholder').innerText = c <= 0 ? '' : ('{{ 'Reservierte Plätze:'|trans({},'soul')|e('js') }}' + ' ' + c);
        }

        const userSearchHandler = function() {
            if (searchBox.value.length >= 3) {
                let skip = [];
                $.html.forEach('#save-spots-container>[x-soul-id]', elem => skip.push( parseInt(elem.getAttribute('x-soul-id')) ));

                $.ajax.background().load(
                    document.getElementById('town-add-users-list'),
                    '{{ path('users_fuzzyfind', {url: 'town_add_users'}) }}',
                    false,
                    {'name': searchBox.value, 'exclude': skip},
                    function () {
                        $.html.addEventListenerAll('#town-add-users-list>.users-list-entry>div', 'click', function (e, elem) {
                            let target = document.getElementById('save-spots-container');
                            if (!target) return;

                            let data = [];
                            let data_count = 1;
                            if (elem.getAttribute('x-soul-group')) {
                                let a = elem.getAttribute('x-soul-id').split(',');
                                let b = elem.getAttribute('x-soul-name').split(',');
                                data_count = parseInt(elem.getAttribute('x-soul-group'));
                                for (let i = 0; i < data_count; i++) data.push([ parseInt(a[i]), b[i] ]);
                            } else data = [[parseInt(elem.getAttribute('x-soul-id')),elem.getAttribute('x-soul-name')]]

                            for (let i = 0; i < data_count; i++) {
                                let div = document.createElement('div');
                                div.innerHTML = '<div class="town-reserved-spot" x-soul-id="' + data[i][0] + '">' + data[i][1] + '</div>';
                                let cc = document.createElement('span'); cc.innerHTML = '<i class="fa fa-times-circle pointer"></i>';
                                cc.addEventListener('click', () => {
                                    document.querySelector('#save-spots-container>[x-soul-id="' + data[i][0] + '"]').remove();
                                    update_place_count();
                                });
                                div.firstChild.appendChild(cc);
                                target.append(div.firstChild);
                            }

                            searchBox.value = document.getElementById('town-add-users-list').innerHTML = '';
                            update_place_count();

                        })
                    }
                );
            }
            else document.getElementById('town-add-users-list').innerHTML = '';
        };

        const userSearchHandlerUp = function () {
            clearTimeout(typingTimer);
            typingTimer = setTimeout(userSearchHandler, doneTypingInterval);
        };

        const userSearchHandlerDown = function () {
            clearTimeout(typingTimer);
        };

        if (searchBox) {
            searchBox.addEventListener('keyup', userSearchHandlerUp);
            searchBox.addEventListener('keydown', userSearchHandlerDown);
            searchBox.addEventListener('focus', () => userSearchHandler());
            searchBox.addEventListener('blur', () => setTimeout( () => document.getElementById('town-add-users-list').innerHTML = '', 500));
        }

        $.html.addEventListenerAll('#save-spots-btn', 'click', (e,elem) => {
            elem.style.display = 'none';
            document.getElementById('save-spots-form').style.display = null;
        })
    </script>
{% endblock %}