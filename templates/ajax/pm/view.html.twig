{% extends "ajax/ajax_plain.html.twig" %}

{% block ajax_base %}

    <div id="post-office-mobile-wrapper" class="row-flex stretch wrap" x-response-key="{{ rk }}">
        <div class="padded cell rw-4 rw-elg-3 rw-lg-6 max-height">

            <div class="row-flex vertical stretch full-height">

                <div class="cell grow-0" style="padding-bottom: 10px;">
                    <div class="forum-control">
                        <div class="forum-header-bar">
                            <b><i class="fa fa-caret-right"></i> {{ 'Aktionen'|trans({},'global') }}</b>
                        </div>
                        <div class="forum-button-bar row-flex stretch">
                            {% if not app.user|restricted(constant('App\\Entity\\AccountRestriction::RestrictionGlobalCommunication')) %}
                                <div class="cell grow-1">
                                    <div x-pm-action="new-single" class="pm-button" id="new-thread-single-button">
                                        <i class="fa fa-pen-alt"></i> {{ 'Schreiben'|trans({},'global') }}
                                    </div>
                                </div>
                            {% endif %}
                            <div class="cell grow-1">
                                <div x-pm-action="search" class="pm-button" id="search-button">
                                    <i class="fa fa-search"></i> {{ 'Suchen'|trans({},'global') }}
                                </div>
                            </div>
                            <div class="cell shrink-1">
                                <div class="pm-button" id="new-tab-button">
                                    <i class="fa fa-external-link-alt"></i>
                                </div>
                                <div class="pm-button" id="return-tab-button">
                                    <i class="fa fa-window-close"></i>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="cell grow-0">
                    <ul class="tabs plain" x-tab-group="gpm-inbox" x-tab-control id="gpm-inbox-control">
                        <li class="tab" x-tab-id="inbox"><div class="tab-link"><img  src="{{ asset("build/images/icons/small_mail.gif") }}" alt="" /> {{ 'Posteingang'|trans({},'global') }}</div></li>
                        <li class="tab" x-tab-id="archive"><div class="tab-link"><img src="{{ asset("build/images/icons/small_archive.gif") }}" alt="" /> {{ 'Archiv'|trans({},'global') }}</div></li>
                    </ul>
                    <div class="row-flex hidden" id="conv_search_bar">
                        <div class="padded cell"><label for="conv_list_filter"><i class="fa fa-search"></i></label></div>
                        <div class="padded cell grow-1"><input type="text" id="conv_list_filter" placeholder="{{ 'Nachricht suchen...'|trans({},'global') }}" /></div>
                        <div class="tooltip help">
                            {{ 'Gib hier den Titel einer Nachricht ein, um danach zu suchen.'|trans({},'global') }}<br />
                            <b>{{ 'Beachte: Die Suchfunktion durchsucht nur den aktuell gewählten Tab (Posteingang oder Archiv).'|trans({},'global') }}</b>
                        </div>
                    </div>
                    <div class="forum-note" style="border-bottom: none;"><b><i class="fa fa-comments"></i> {{ 'Konversationen'|trans({},'global') }}</b></div>
                </div>

                <div class="cell grow-1 relative">
                    <div class="forum-note max-height stretcher" style="border-top: none">
                        <div class="scroll-area" id="pm-conversation-list"></div>
                    </div>
                </div>

            </div>

        </div>

        <div id="pm-right-plane" class="padded cell rw-8 rw-elg-9 rw-lg-6 max-height" style="overflow: auto">

            <div class="row-flex vertical stretch full-height">
                <div id="pm-mobile-back-button" class="forum-control hide-desktop hide-lg hide-md center pointer" style="font-size: 2em; margin-bottom: 10px;"><img src="{{ asset('build/images/icons/small_prev.gif') }}" alt="<-"></div>

                <div id="pm-forum-actions-container" class="cell grow-0 hidden" style="padding-bottom: 10px;">
                    <div class="forum-control">
                        <div class="forum-header-bar">
                            <b><i class="fa fa-caret-right"></i> {{ 'Diese Konversation'|trans({},'global') }}</b>
                        </div>
                        <div class="forum-button-bar" style="font-size: 0.8em">
                            <div class="row-flex wrap">
                                <div class="cell">
                                    <div x-pm-action="refresh-single" class="pm-button" id="refresh-single-button">
                                        <i class="fa fa-sync"></i>
                                        <div class="tooltip">{{ 'Diskussion aktualisieren'|trans({}, 'global') }}</div>
                                    </div>
                                </div>
                                {% if not app.user|restricted(constant('App\\Entity\\AccountRestriction::RestrictionGlobalCommunication')) %}
                                    <div class="cell">
                                        <div x-pm-action="answer-single" class="pm-button" id="new-answer-single-button">
                                            <i class="fa fa-pen-alt"></i> {{ 'Antworten'|trans({},'global') }}
                                        </div>
                                    </div>
                                {% endif %}
                                <div class="cell">
                                    <div x-pm-action="archive-single" class="pm-button" id="archive-single-button">
                                        <i class="fa fa-archive"></i> {{ 'Archivieren'|trans({},'global') }}
                                    </div>
                                </div>
                                <div class="cell">
                                    <div x-pm-action="restore-single" class="pm-button" id="restore-single-button">
                                        <i class="fa fa-file-export"></i> {{ 'Wiederherstellen'|trans({},'global') }}
                                    </div>
                                </div>
                                <div class="cell">
                                    <div x-pm-action="trash-single" class="pm-button" id="trash-single-button">
                                        <i class="fa fa-times"></i> {{ 'Löschen'|trans({},'global') }}
                                    </div>
                                </div>
                                <div class="cell">
                                    <div x-pm-action="unread-single" class="pm-button" id="unread-single-button">
                                        <i class="fa fa-eye-slash"></i> {{ 'Nicht gelesen'|trans({},'global') }}
                                    </div>
                                </div>
                                <div class="cell">
                                    <div x-pm-action="show-users" class="pm-button" id="users-single-button">
                                        <i class="fa fa-users"></i> {{ 'Teilnehmer'|trans({},'global') }}
                                    </div>
                                </div>
                                <div class="cell">
                                    <div x-pm-action="block-sender" class="pm-button" id="block-single-button">
                                        <i class="fa fa-shield-alt"></i> {{ 'Absender blockieren'|trans({},'global') }}
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>

                <div id="pm-user-list-container" class="cell hidden" style="padding-bottom: 10px">
                    <div class="forum-note">
                        <b>{{ 'Teilnehmer'|trans({},'global') }}</b>
                        <div id="pm-user-list-payload"></div>
                    </div>
                </div>

                <div id="pm-forum-editor-container" class="cell hidden" style="padding-bottom: 10px">
                    <div class="forum-note">
                        <b id="pm-forum-editor-header"></b>
                        <div id="pm-new-thread-controls" class="hidden">
                            <div class="row">
                                <div class="cell rw-4 padded">
                                    <label for="global-pm-forum-editor-title">{{ 'Titel'|trans({},'global') }}</label>
                                </div>
                                <div class="cell rw-8 padded">
                                    <input type="text" id="global-pm-forum-editor-title" />
                                </div>
                            </div>
                            <div id="pm-og-display" class="hidden">
                                <div class="row">
                                    <div class="padded cell rw-4"><label>{{'Empfänger'|trans({}, "soul")}}</label></div>
                                    <div class="padded cell rw-8">
                                        <div id="pm-og-info-container"></div>
                                    </div>
                                </div>
                            </div>
                            <div id="pm-user-selector">
                                <div class="row">
                                    <div class="padded cell rw-4"><label for="pm-users-search">{{'Einen Empfänger hinzufügen'|trans({}, "soul")}}</label></div>
                                    <div class="padded cell rw-8">
                                        <div id="pm-users-list-container">
                                            <div><label><input type="text" id="pm-users-search" /></label><div class="tooltip help">{{ 'Gib den Pseudo des Bürgers ein.'|trans({},'soul') }}</div></div>
                                            <div id="pm-users-list"></div>
                                        </div>
                                    </div>
                                    <div class="padded cell rw-8 ro-4"><ul id="pm-selected-users"></ul></div>
                                </div>
                            </div>
                            {% if official_groups is not empty %}
                            <div id="pm-sender-selector">
                                <div class="row">
                                    <div class="padded cell rw-4"><label for="pm-account-select">{{'Absender wählen'|trans({}, "soul")}}</label></div>
                                    <div class="padded cell rw-8">
                                        <select id="pm-account-select">
                                            <option selected value="u-{{ app.user.id }}">{{ app.user.name }}</option>
                                            {% for group in official_groups %}
                                                <option value="og-{{ group.id }}">{{ group.usergroup.name }}</option>
                                            {% endfor %}
                                        </select>
                                    </div>
                                    <div class="padded cell rw-8 ro-4"><ul id="pm-selected-users"></ul></div>
                                </div>
                            </div>
                            {% endif %}
                        </div>
                        <div id="global-pm-forum-editor"></div>
                        <div id="pm-forum-editor-anchor"></div>
                    </div>
                </div>

                <div id="gpm-forum-content-container" class="cell">
                    <div class="forum-note">
                        <b id="gpm-forum-content-header"></b>

                        <div id="gpm-forum-content">
                            <!-- CONVERSATION CONTAINER HERE -->
                        </div>

                    </div>
                </div>

            </div>

        </div>
    </div>

{% endblock %}

{% macro pm_preview(user) %}
    <li class="own" x-preview>
        {% if (user.avatar) %}
            <div class="pm-avatar" style="background: url({{ path('app_web_avatar', {'uid': user.id, 'name': user.avatar.filename, 'ext': user.avatar.format}) }}) center/cover"></div>
        {% else %}
            <div class="pm-avatar row-flex v-center"><div class="cell rw-12 center">{{ user.name|slice(0,2) }}</div></div>
        {% endif %}
        <div class="pm-message">
            <div class="pm-message-header"><img src="{{ asset('build/images/icons/small_user.gif') }}" alt=""> {{ user.name }}</div>
            <div class="pm-message-content"><div translate="no" id="pm-editor-preview"></div></div>
            <div class="pm-message-footer">{{ 'Vorschau'|trans({},'global') }}</div>
        </div>
    </li>
{% endmacro %}

{% block js %}
    {{ parent() }}
    {{ include('ajax/flash.html.twig') }}
    <script>
        (function() {

            document.getElementById('new-tab-button').classList.toggle( 'hidden', document.getElementById('post-office-content').classList.contains('master') );
            document.getElementById('return-tab-button').classList.toggle( 'hidden', !document.getElementById('post-office-content').classList.contains('master') );

            document.getElementById('new-tab-button').addEventListener('click', () => {
                document.querySelector('#post-office-button-overlay>ul>li:last-child').click();
                let pm_window = window.open('{{ path('home_pm') }}', '_blank');
                let opened_pm = document.querySelector("#pm-conversation-list li.selected");
                if(opened_pm !== null){
                    let id = opened_pm.getAttribute('x-identifier')
                    let domain = opened_pm.getAttribute('x-domain')
                    pm_window.addEventListener("DOMContentLoaded", function start_load_pm(){
                        pm_window.document.addEventListener("mh-navigation-complete", function load_pm(){
                            let thread = pm_window.document.querySelector("#pm-conversation-list li[x-identifier='" + id + "'][x-domain='" + domain + "']");
                            if(thread) {
                                thread.click();
                                pm_window.document.removeEventListener("mh-navigation-complete", load_pm);
                                pm_window.removeEventListener("DOMContentLoaded", start_load_pm);

                            }
                        })
                    });
                }
            })
            document.getElementById('return-tab-button').addEventListener('click', () => {
                window.location.href = '{{ path('home') }}';
            })

            let loading_conv_list = false;
            let conv_list_more = null;

            let loading_msg_list = false;
            let msg_list_more = null;

            let core_list_path = '{{ path('pm_list') }}';

            const filter_entry = document.getElementById('conv_list_filter');
            const init_conv_list = function() {
                const list = document.getElementById('pm-conversation-list');
                list.innerHTML = '<div class="center small"><i class="fa fa-spin fa-circle-notch"></i> {{ 'Lade Unterhaltungen ...'|trans({},'global') }}</div>';

                let filter = filter_entry.value;
                if (filter.length <= 3) filter = null;

                let target = document.getElementById('gpm-forum-content');
                target.innerText = '';
                document.getElementById('gpm-forum-content-header').innerText = '{{ 'Bitte wähle eine Konversation auf der linken Seite.'|trans({},'global')|e('js') }}';

                document.getElementById('pm-forum-actions-container').classList.add('hidden');
                document.getElementById('pm-forum-editor-container').classList.add('hidden');
                document.getElementById('pm-user-list-container').classList.add('hidden');

                $.ajax.background().load( list, core_list_path, false, {num: 30, filter: filter}, function() {
                    let conv_list_content = document.querySelector('#pm-conversation-list>ul');
                    conv_list_more = document.querySelector('#pm-conversation-list>.pm-endless-more');
                    fun_conv_events();
                    fun_conv_loader_control();

                    if (conv_list_content && conv_list_content.childElementCount === 0)
                        list.innerHTML = filter === null
                            ? '<div class="center small">{{ 'Dieser Ordner ist leer.'|trans({},'global') }}</div>'
                            : '<div class="center small">{{ 'Es wurden keine passenden Nachrichten gefunden.'|trans({},'global') }}</div>';

                    $.html.setTitleSegmentCount( document.querySelector('ul.pm-conversation-list>li[x-title][x-endpoint].new') ? 99 : 0 );
                } );
            };

            document.getElementById('gpm-inbox-control').addEventListener('tab-switch', (e) => {
                switch (e.detail.tab) {
                    case 'inbox'  : core_list_path = '{{ path('pm_list', {set: 'inbox'}) }}'; break;
                    case 'archive': core_list_path = '{{ path('pm_list', {set: 'archive'}) }}'; break;
                }
                init_conv_list();
            });


            let filter_timeout = null;
            let filter_prev = '';
            const filter_function = function() {
                if (filter_timeout !== null) window.clearTimeout(filter_timeout);
                filter_timeout = null;

                if (filter_entry.value === filter_prev) return;
                filter_prev = filter_entry.value;

                if (filter_entry.value === '') init_conv_list();
                else if (filter_entry.value.length > 3) filter_timeout = window.setTimeout( init_conv_list, 1000 );
            }
            filter_entry.addEventListener('input', filter_function);
            filter_entry.addEventListener('blur', filter_function);

            const fun_conv_events = function() {
                $.html.addEventListenerAll('ul.pm-conversation-list>li[x-title][x-endpoint]', 'click', function(e,elem) {
                    let target = document.getElementById('gpm-forum-content');
                    target.innerText = '';
                    document.getElementById('gpm-forum-content-header').innerHTML = '<i class="fa fa-spin fa-circle-notch"></i> {{ 'Lade Unterhaltung...'|trans({},'global')|e('js') }}';

                    $.html.forEach( 'ul.pm-conversation-list>li[x-title][x-endpoint]', ee => ee.classList.remove('selected') );
                    elem.classList.add('selected');
                    elem.classList.remove('new');

                    document.getElementById('pm-forum-actions-container').classList.add('hidden');
                    document.getElementById('pm-forum-editor-container').classList.add('hidden');
                    document.getElementById('pm-user-list-container').classList.add('hidden');

                    const button_conf = [
                        ['x-editor'  , 'answer-single'],
                        ['x-trash'   , 'trash-single'],
                        ['x-unread'  , 'unread-single'],
                        ['x-userlist', 'show-single'],
                        ['x-block'   , 'block-sender'],
                        ['x-archive' , 'archive-single'],
                        ['x-restore' , 'restore-single'],
                        ['x-endpoint', 'refresh-single']
                    ];

                    button_conf.forEach((conf) => {
                        if (elem.getAttribute(conf[0])) $.html.forEach('[x-pm-action="' + conf[1] + '"]', e => e.classList.remove('hidden'));
                        else $.html.forEach('[x-pm-action="' + conf[1] + '"]', e => e.classList.add('hidden'));
                    })

                    let editor = document.getElementById('global-pm-forum-editor');
                    if (editor) editor.innerText = '';

                    document.getElementById('post-office-mobile-wrapper').classList.add('panel-2');

                    $.ajax.background().load( target, elem.getAttribute('x-endpoint'), false, {num: 30}, function() {
                        $.msg.rescheduleFetch(15000);
                        document.getElementById('gpm-forum-content-header').innerText = elem.getAttribute('x-title');
                        document.getElementById('pm-forum-actions-container').classList.remove('hidden');
                        msg_list_more = document.querySelector('#pm-right-plane .pm-endless-more[x-endless-endpoint][x-last-id]');
                        fun_msg_events();
                        fun_msg_loader_control();
                        if (elem.getAttribute('x-spring')) $.msg.overrideFetchEndpoint( elem.getAttribute('x-spring') );
                        else $.msg.restoreFetchEndpoint();

                        $.html.setTitleSegmentCount( document.querySelector('ul.pm-conversation-list>li[x-title][x-endpoint].new') ? 99 : 0 );
                    } );
                });

                $.html.addEventListenerAll('ul.pm-conversation-list>li[x-title][x-hardlink]', 'click', function(e,elem) {
                    if (!document.getElementById('post-office-content').classList.contains('master')) {
                        document.getElementById('post-office').click();
                        $.ajax.load(null,elem.getAttribute('x-hardlink'), false, {}, () => $.msg.execute());
                    } else window.open( elem.getAttribute('x-hardlink'), '_blank' );
                });
            }

            const fun_conv_loader = function() {
                if (loading_conv_list) return;
                loading_conv_list = true;

                let skip = {};
                $.html.forEach( '#pm-conversation-list>ul.pm-conversation-list>li[x-domain][x-identifier]', element => {
                    const domain = element.getAttribute('x-domain');
                    const id = parseInt( element.getAttribute('x-identifier') );
                    if (typeof skip[domain] === 'undefined') skip[domain] = [id];
                    else skip[domain].push(id);
                });

                let container = document.createElement( 'div' );
                $.ajax.background().load( container, core_list_path, false, {num: 10, skip: skip}, function() {
                    let messages = container.querySelector('ul.pm-conversation-list');
                    let more = container.querySelector('.pm-endless-more');

                    if (!more) {
                        conv_list_more.remove();
                        conv_list_more = null;
                    }

                    document.querySelector('#pm-conversation-list>.pm-conversation-list').innerHTML += messages.innerHTML;

                    fun_conv_events();
                    loading_conv_list = false;
                    fun_conv_loader_control();
                } );
            }

            const fun_conv_loader_control = function() {
                if (!conv_list_more) return;
                const scroll_obj = document.getElementById('pm-conversation-list');
                if (scroll_obj.scrollHeight - scroll_obj.scrollTop <= (scroll_obj.clientHeight + 32))
                    fun_conv_loader();
            }

            const d_inst = document.getElementById('post-office-mobile-wrapper');
            const fun_conv_updater_control = function(data) {
                if (!document.querySelector('#post-office-mobile-wrapper[x-response-key="{{ rk }}"]')) return;

                let index_container = document.querySelector('.pm-conversation-list');
                let focus_container = document.querySelector('.group-conversation');

                const index_data = data.index_list.data;
                const focus_data = data.focus_list.data;

                let new_content = false;

                let newstr = '';
                for (let i = 0; i < index_data.length; i++) {

                    const domain = index_data[i][0];
                    const id     = index_data[i][1];
                    const elem   = index_data[i][2];

                    const existing_node = document.querySelector('.pm-conversation-list>li[x-domain="' + domain + '"][x-identifier="' + id + '"]');
                    if (existing_node) {
                        if (existing_node.classList.contains('selected')) {
                            elem.classList.add('selected');
                            elem.classList.remove('new');
                        }
                        existing_node.remove();
                    }
                    newstr += elem.outerHTML;
                    new_content = true;
                }

                if (newstr !== '' && index_container) {
                    index_container.innerHTML = newstr + index_container.innerHTML;
                    fun_conv_events();
                }

                newstr = '';
                let preview_node = document.querySelector('.group-conversation>li[x-preview]');

                for (let i = 0; i < focus_data.length; i++) {

                    const domain = focus_data[i][0];
                    const id     = focus_data[i][1];
                    const elem   = focus_data[i][2];

                    const existing_node = document.querySelector('.group-conversation>li[x-domain="' + domain + '"][x-identifier="' + id + '"]');
                    if (existing_node) existing_node.remove();
                    newstr += elem.outerHTML;
                    new_content = true;
                }

                if (newstr !== '' && focus_container) {
                    const pn = preview_node ? preview_node.outerHTML : '';
                    if (preview_node) preview_node.remove();
                    focus_container.innerHTML = pn + newstr + focus_container.innerHTML;
                    fun_msg_events();
                }

                if (new_content) $.html.setTitleSegmentCount(99);

                $.msg.registerFetchCallback(fun_conv_updater_control);
            }
            $.msg.registerFetchCallback(fun_conv_updater_control);

            document.getElementById('pm-conversation-list').addEventListener('scroll', fun_conv_loader_control);

            const fun_msg_events = function() {
                $.html.addEventListenerAll('ul.group-conversation>li div[x-unveil]', 'click', function(e,elem) {
                    document.querySelector('[x-domain="m-d"][x-identifier="' + elem.getAttribute('x-unveil') + '"]').classList.remove('collapsed');
                });
                $.html.addEventListenerAll('ul.group-conversation>li .pm-button[x-report-url]', 'click', function(e,elem) {
                    let form = $.html.createElement('<div class="modal-form" id="modal-form" />');
                    form.append($.html.createElement( '<p class="small bold"></p>', '{{ 'Bist du sicher, dass du diesen Post an die Moderatoren melden willst?'|trans({},'global')|e('js') }}' ));

                    let sec_p = $.html.createElement('<p class="small"/>', '{{ 'Wenn möglich gib bitte einen Grund für deine Meldung an:'|trans({},'global')|e('js') }}');
                    sec_p.append( $.html.createElement('<div><label><input checked type="radio" name="report_reason" value="0" />' + '{{ 'Keinen Grund angeben'|trans({},'global')|e('js') }}' + '</label></div>') )
                    sec_p.append( $.html.createElement('<div><label><input type="radio" name="report_reason" value="1" />' + '{{ 'Cheating'|trans({},'global')|e('js') }}' + '</label></div>') )
                    sec_p.append( $.html.createElement('<div><label><input type="radio" name="report_reason" value="2" />' + '{{ 'Flooding oder Spam'|trans({},'global')|e('js') }}' + '</label></div>') )
                    sec_p.append( $.html.createElement('<div><label><input type="radio" name="report_reason" value="4" />' + '{{ 'Beleidigungen / Unangemessener Ausdruck'|trans({},'global')|e('js') }}' + '</label></div>') )
                    sec_p.append( $.html.createElement('<div><label><input type="radio" name="report_reason" value="5" />' + '{{ 'Pornographie'|trans({},'global')|e('js') }}' + '</label></div>') )
                    sec_p.append( $.html.createElement('<div><label><input type="radio" name="report_reason" value="6" />' + '{{ 'Hassrede'|trans({},'global')|e('js') }}' + '</label></div>') )
                    sec_p.append( $.html.createElement('<div><label><input type="radio" name="report_reason" value="7" />' + '{{ 'Verbreitung persönlicher Informationen'|trans({},'global')|e('js') }}' + '</label></div>') )
                    sec_p.append( $.html.createElement('<div><label><input type="radio" name="report_reason" value="8" />' + '{{ 'Verletzung von Copyright'|trans({},'global')|e('js') }}' + '</label></div>') )
                    sec_p.append( $.html.createElement('<div><label><input type="radio" name="report_reason" value="9" />' + '{{ 'Aufruf zu Gesetzesverstößen'|trans({},'global')|e('js') }}' + '</label></div>') )
                    sec_p.append( $.html.createElement('<div><label><input type="radio" name="report_reason" value="10" />' + '{{ 'Ermutigung von Selbstmord oder Selbstverletzung'|trans({},'global')|e('js') }}' + '</label></div>') )
                    sec_p.append( $.html.createElement('<p class="small"/>', '{{ 'Zusätzliche Informationen zu deiner Meldung (optional):'|trans({},'global')|e('js') }}') )
                    sec_p.append( $.html.createElement('<div><textarea maxlength="255" style="min-height: 70px; max-height: 120px; height: 70px;" name="report_details"></textarea></div>') )

                    form.append(sec_p)

                    $.html.popup('{{ 'Unangemessenen Inhalt melden'|trans({},'global')|e('js') }}', form, null, [
                        [ '{{ 'Inhalt melden'|trans({},'global')|e('js') }}',  [ ['click', (e_sub, elem_sub) => {
                            const reason = document.querySelector('[name="report_reason"]:checked') ? parseInt(document.querySelector('[name="report_reason"]:checked').value) : 0;
                            const detail = document.querySelector('[name="report_details"]') ? document.querySelector('[name="report_details"]').value : '';

                            $.html.triggerPopupPop(elem_sub);
                            $.ajax.easySend( elem.getAttribute('x-report-url'), {reason: reason, details: detail}, (data)=>{ if (data.msg) $.html.notice(data.msg); });
                        }] ] ],
                        [ '{{ 'Abbrechen'|trans({},'global')|e('js') }}', [ ['click', (e_sub, elem_sub) => $.html.triggerPopupPop(elem_sub)] ] ]
                    ] );
                });
                $.html.addEventListenerAll('ul.group-conversation>li .pm-button[x-pin-url]', 'click', function(e,elem) {
                    if (confirm('{{ 'Bestätigen?'|trans({},'global')|e('js') }}'))
                        $.ajax.easySend( elem.getAttribute('x-pin-url'), {}, ()=>{
                            document.querySelector('[x-message-id="' + elem.getAttribute('x-message-id') + '"][x-pin-state="' + elem.getAttribute('x-pin-state') + '"]').classList.add('hidden');
                            document.querySelector('[x-message-id="' + elem.getAttribute('x-message-id') + '"][x-pin-state]:not([x-pin-state="' + elem.getAttribute('x-pin-state') + '"])').classList.remove('hidden');
                            let selected = document.querySelector('.pm-conversation-list>li.selected');
                            if (selected) selected.click();
                        });
                });
                $.html.addEventListenerAll('ul.group-conversation>li .pm-button[x-collapse-url]', 'click', function(e,elem) {
                    if (confirm('{{ 'Bestätigen?'|trans({},'global')|e('js') }}'))
                        $.ajax.easySend( elem.getAttribute('x-collapse-url'), {}, ()=>{
                            if (elem.getAttribute('x-collapse-state') === "1")
                                document.querySelector('[x-domain="m-d"][x-identifier="' + elem.getAttribute('x-message-id') + '"]').classList.add('collapsed');
                            document.querySelector('[x-message-id="' + elem.getAttribute('x-message-id') + '"][x-collapse-state="' + elem.getAttribute('x-collapse-state') + '"]').classList.add('hidden');
                            document.querySelector('[x-message-id="' + elem.getAttribute('x-message-id') + '"][x-collapse-state]:not([x-collapse-state="' + elem.getAttribute('x-collapse-state') + '"])').classList.remove('hidden');
                        });
                });
            }

            const fun_msg_loader = function() {
                if (loading_msg_list) return;
                loading_msg_list = true;

                let container = document.createElement( 'div' );
                $.ajax.background().load( container, msg_list_more.getAttribute('x-endless-endpoint'), false, {num: 10, last: parseInt(msg_list_more.getAttribute('x-last-id'))}, function() {
                    let messages = container.querySelector('ul.group-conversation');
                    let more = container.querySelector('.pm-endless-more');

                    if (!more) {
                        msg_list_more.remove();
                        msg_list_more = null;
                    } else {
                        msg_list_more.setAttribute('x-last-id', more.getAttribute('x-last-id'));
                        msg_list_more.setAttribute('x-endless-endpoint', more.getAttribute('x-endless-endpoint'));
                    }

                    document.querySelector('#gpm-forum-content>ul.group-conversation').innerHTML += messages.innerHTML;

                    fun_msg_events();
                    loading_msg_list = false;
                    fun_msg_loader_control();
                } );
            }

            const fun_msg_loader_control = function() {
                if (!msg_list_more) return;
                const scroll_obj = document.getElementById('pm-right-plane');
                if (scroll_obj.scrollHeight - scroll_obj.scrollTop <= (scroll_obj.clientHeight + 32))
                    fun_msg_loader();
            }
            document.getElementById('pm-right-plane').addEventListener('scroll', fun_msg_loader_control);

            let typingTimer, doneTypingInterval = 500;
            let searchBox = document.getElementById('pm-users-search');

            document.getElementById('pm-mobile-back-button').addEventListener('click', () => document.getElementById('post-office-mobile-wrapper').classList.remove('panel-2'));

            const userSearchHandler = function() {
                if (searchBox.value.length >= 3) {
                    let skip = [];
                    $.html.forEach('#pm-selected-users>li[x-soul-id]', e => skip.push(parseInt(e.getAttribute('x-soul-id'))));
                    $.ajax.background().load(
                        document.getElementById('pm-users-list'),
                        '{{ path('users_fuzzyfind', {url: 'pm_manage_users'}) }}',
                        false,
                        {'name': searchBox.value, 'exclude': skip},
                        function () {
                            $.html.addEventListenerAll('#pm-users-list>.users-list-entry>div', 'click', function (e, elem) {
                                if (skip.length >= 99) {
                                    alert('{{'Du kannst keine weiteren Spieler zu dieser Nachricht hinzufügen.'|trans({},'global')|e('js')}}');
                                    return;
                                }
                                if (!document.querySelector('#pm-selected-users>li[x-soul-id="' + elem.getAttribute('x-soul-id') + '"]')) {
                                    let li = document.createElement('li');
                                    li.setAttribute('x-soul-id', elem.getAttribute('x-soul-id'));
                                    li.innerHTML = '<b>' + elem.getAttribute('x-soul-name') + '</b><span><i class="fa fa-times-circle"></i></span></li>';
                                    document.getElementById('pm-selected-users').append(li)
                                    document.querySelector('#pm-selected-users>li[x-soul-id="' + elem.getAttribute('x-soul-id') + '"]>span').addEventListener('click', () => li.remove());
                                }

                                searchBox.value = '';
                            })
                        }
                    );
                }
                else document.getElementById('pm-users-list').innerHTML = '';
            };

            const userSearchHandlerUp = function () {
                clearTimeout(typingTimer);
                typingTimer = setTimeout(userSearchHandler, doneTypingInterval);
            };

            const userSearchHandlerDown = function () {
                clearTimeout(typingTimer);
            };

            if (searchBox) {
                searchBox.addEventListener('keyup', userSearchHandlerUp);
                searchBox.addEventListener('keydown', userSearchHandlerDown);
                searchBox.addEventListener('focus', () => userSearchHandler());
                searchBox.addEventListener('blur', () => setTimeout( () => document.getElementById('pm-users-list').innerHTML = '', 500));
            }

            $.html.addEventListenerAll('[x-pm-action="search"]', 'click', function () {
                document.getElementById('conv_search_bar').classList.toggle('hidden');
                document.getElementById('conv_list_filter').value = '';
                filter_function();
            });

            $.html.addEventListenerAll('[x-pm-action="new-single"]', 'click', function () {

                let editor = document.getElementById('global-pm-forum-editor');
                if (!editor) return;

                $.msg.restoreFetchEndpoint();

                document.getElementById('gpm-forum-content-container').classList.add('hidden');
                document.getElementById('pm-forum-actions-container').classList.add('hidden');
                document.getElementById('gpm-forum-content-header').innerText = '{{ 'Vorschau'|trans({},'global')|e('js') }}'
                document.getElementById('pm-new-thread-controls').classList.add('hidden');
                document.getElementById('pm-user-list-container').classList.add('hidden');
                document.getElementById('pm-user-list-payload').innerHTML = '';

                editor.innerText = '';
                document.getElementById('pm-user-selector').classList.remove('hidden');
                document.getElementById('pm-og-display').classList.add('hidden');
                if (document.getElementById('pm-sender-selector')) document.getElementById('pm-sender-selector').classList.remove('hidden');

                document.getElementById('pm-forum-editor-container').classList.remove('hidden');
                document.getElementById('pm-forum-editor-header').innerHTML = '<i class="fa fa-spin fa-circle-notch"></i> {{ 'Wird geladen...'|trans({},'global')|e('js') }}';

                document.getElementById('gpm-forum-content').innerHTML = '<ul>{{ _self.pm_preview(app.user)|e('js') }}</ul>';

                document.getElementById('post-office-mobile-wrapper').classList.add('panel-2');
                $.html.forEach('.pm-conversation-list>li.selected', e => e.classList.remove('selected'));

                if (editor) $.ajax.background().load( editor, '{{ url('pm_thread_editor_controller') }}', false, {}, function() {
                    document.getElementById('pm-forum-editor-header').innerText = '{{ 'Neue Nachricht'|trans({},'global') }}';

                    document.getElementById('gpm-forum-content-container').classList.remove('hidden');
                    document.getElementById('pm-new-thread-controls').classList.remove('hidden');

                    $.html.forEach('#global-pm-forum-editor-title', e => e.focus());
                } );
            });

            $.html.addEventListenerAll('[x-pm-action="answer-single"]', 'click', function () {

                const selected_thread = document.querySelector('ul.pm-conversation-list>li[x-editor].selected');
                let list = document.querySelector('#gpm-forum-content>ul');
                let editor = document.getElementById('global-pm-forum-editor');
                if (!editor || !selected_thread || !list) return;

                document.getElementById('pm-forum-actions-container').classList.add('hidden');
                document.getElementById('pm-new-thread-controls').classList.add('hidden');

                editor.innerText = '';
                document.getElementById('pm-user-selector').classList.remove('hidden');
                document.getElementById('pm-og-display').classList.add('hidden');
                if (document.getElementById('pm-sender-selector')) document.getElementById('pm-sender-selector').classList.remove('hidden');

                document.getElementById('pm-forum-editor-container').classList.remove('hidden');
                document.getElementById('pm-forum-editor-header').innerHTML = '<i class="fa fa-spin fa-circle-notch"></i> {{ 'Wird geladen...'|trans({},'global')|e('js') }}';

                list.innerHTML = '{{ _self.pm_preview(app.user)|e('js') }}' + list.innerHTML;

                if (editor) $.ajax.background().load( editor, selected_thread.getAttribute('x-editor'), false, {}, function() {
                    document.getElementById('pm-forum-editor-header').innerText = '{{ 'Antworten'|trans({},'global')|e('js') }}';
                    $.html.forEach('#global-pm-forum-editor-text', e => e.focus());
                } );
            });

            $.html.addEventListenerAll('[x-pm-action="show-users"]', 'click', function () {
                const selected_thread = document.querySelector('ul.pm-conversation-list>li[x-editor].selected');
                let container = document.getElementById('pm-user-list-container');
                let target = document.getElementById('pm-user-list-payload');
                if (!target || !container) return;

                if (container.classList.contains('hidden')) {
                    target.innerHTML = '<div style="margin: 10px" class="small center"><i class="fa fa-spin fa-circle-notch"></i> {{ 'Wird geladen...'|trans({},'global')|e('js') }}</div>';

                    document.getElementById('pm-user-list-container').classList.remove('hidden');
                    $.ajax.background().load( target, selected_thread.getAttribute('x-userlist'), false );
                } else {
                    target.innerHTML = '';
                    document.getElementById('pm-user-list-container').classList.add('hidden');
                }
            });

            $.html.addEventListenerAll('[x-pm-action="block-sender"]', 'click', function (e,elem) {
                const selected_thread = document.querySelector('ul.pm-conversation-list>li[x-block].selected');
                if (!selected_thread) return;

                const preamble = selected_thread.getAttribute('x-block-name')
                    ? ( '{{ '{user} blockieren'|trans({},'global')|e('js') }}\n\n'.replace('{user}', selected_thread.getAttribute('x-block-name')) )
                    : '';
                if (confirm(preamble +
                    '{{ 'Wenn du den Absender dieser Nachricht blockierst, kann dieser dir keine neuen Nachrichten schicken. Werdet ihr beide von einer dritten Person in eine Gruppennachricht hinzugefügt, so werden Beiträge des blockierten Spielers standartmäßig für dich versteckt.'|trans({},'global')|e('js') }}' +
                    '\n\n{{ 'Möchtest du fortfahren?'|trans({},'global')|e('js') }}')) {
                    $.ajax.easySend(selected_thread.getAttribute('x-block'), {}, function() {
                        $.ajax.load( document.getElementById('post-office-content'), '{{ path('pm_view')|e('js') }}' );
                    });
                }
            });

            $.html.addEventListenerAll('[x-pm-action="trash-single"]', 'click', function () {

                const selected_thread = document.querySelector('ul.pm-conversation-list>li[x-trash].selected');
                if (!selected_thread) return;

                if (!confirm('{{ 'Bestätigen?'|trans({},'global')|e('js') }}'))
                    return;

                $.ajax.easySend(selected_thread.getAttribute('x-trash'), {}, function() {
                    $.ajax.load( document.getElementById('post-office-content'), '{{ path('pm_view')|e('js') }}' );
                });
            });

            $.html.addEventListenerAll('[x-pm-action="unread-single"]', 'click', function () {

                const selected_thread = document.querySelector('ul.pm-conversation-list>li[x-unread].selected');
                if (!selected_thread) return;

                $.ajax.easySend(selected_thread.getAttribute('x-unread'), {}, function() {
                    $.html.forEach('#gpm-forum-content>ul>li', e => e.classList.add('new'));
                });
            });

            $.html.addEventListenerAll('[x-pm-action="archive-single"]', 'click', function () {

                const selected_thread = document.querySelector('ul.pm-conversation-list>li[x-unread].selected');
                if (!selected_thread) return;

                $.ajax.easySend(selected_thread.getAttribute('x-archive'), {}, function() {
                    $.ajax.load( document.getElementById('post-office-content'), '{{ path('pm_view')|e('js') }}' );
                });
            });

            $.html.addEventListenerAll('[x-pm-action="restore-single"]', 'click', function () {

                const selected_thread = document.querySelector('ul.pm-conversation-list>li[x-unread].selected');
                if (!selected_thread) return;

                $.ajax.easySend(selected_thread.getAttribute('x-restore'), {}, function() {
                    $.ajax.load( document.getElementById('post-office-content'), '{{ path('pm_view')|e('js') }}' );
                });
            });

            $.html.addEventListenerAll('[x-pm-action="refresh-single"]', 'click', function(){
                document.querySelector("ul.pm-conversation-list>li[x-title][x-endpoint].selected").click()
            });

            $.msg.setFetchRK({{ rk }});

            {% if command is not empty %}
                {% set command = command|split('_') %}
                {% if command|length == 2 %}
                    {% if command[0] == 'oglink' or command[0] == 'ulink' %}

                        setTimeout(() => {
                            let editor = document.getElementById('global-pm-forum-editor');
                            if (!editor) return;

                            $.msg.restoreFetchEndpoint();

                            document.getElementById('gpm-forum-content-container').classList.add('hidden');
                            document.getElementById('pm-forum-actions-container').classList.add('hidden');
                            document.getElementById('gpm-forum-content-header').innerText = '{{ 'Vorschau'|trans({},'global')|e('js') }}'
                            document.getElementById('pm-new-thread-controls').classList.add('hidden');
                            document.getElementById('pm-user-list-container').classList.add('hidden');
                            document.getElementById('pm-user-list-payload').innerHTML = '';

                            editor.innerText = '';
                            document.getElementById('pm-user-selector').classList.add('hidden');
                            if (document.getElementById('pm-sender-selector')) document.getElementById('pm-sender-selector').classList.add('hidden');
                            document.getElementById('pm-og-info-container').innerHTML = '';
                            document.getElementById('pm-og-info-container').appendChild($.html.createElement('<i class="fa fa-pulse fa-spinner" />'))
                            document.getElementById('pm-og-display').classList.remove('hidden');
                            {% if command[0] == 'oglink' %}
                            $.ajax.background().load( document.getElementById('pm-og-info-container'), '{{ url('pm_og_resolve') }}', false, {og: '{{ command[1]|e('js') }}'});
                            {% elseif command[0] == 'ulink' %}
                            $.ajax.background().load( document.getElementById('pm-og-info-container'), '{{ url('pm_user_resolve') }}', false, {user: '{{ command[1]|e('js') }}'});
                            {% endif %}

                            document.getElementById('pm-forum-editor-container').classList.remove('hidden');
                            document.getElementById('pm-forum-editor-header').innerHTML = '<i class="fa fa-spin fa-circle-notch"></i> {{ 'Wird geladen...'|trans({},'global')|e('js') }}';

                            document.getElementById('gpm-forum-content').innerHTML = '<ul>{{ _self.pm_preview(app.user)|e('js') }}</ul>';

                            document.getElementById('post-office-mobile-wrapper').classList.add('panel-2');
                            $.html.forEach('.pm-conversation-list>li.selected', e => e.classList.remove('selected'));

                            if (editor){
                                {% if command[0] == 'oglink' %}
                                $.ajax.background().load( editor, '{{ url('pm_og_thread_editor_controller') }}', false, {}, function() {
                                    document.getElementById('pm-forum-editor-header').innerText = '{{ 'Eine offizielle Gruppe kontaktieren'|trans({},'global') }}';
                                    document.getElementById('gpm-forum-content-container').classList.remove('hidden');
                                    document.getElementById('pm-new-thread-controls').classList.remove('hidden');

                                    $.html.forEach('#global-pm-forum-editor-title', e => e.focus());
                                } );
                                {% elseif command[0] == 'ulink' %}
                                $.ajax.background().load( editor, '{{ url('pm_thread_editor_controller') }}', false, {}, function() {
                                    document.getElementById('pm-forum-editor-header').innerText = '{{ 'Neuer Post'|trans({},'global') }}';
                                    document.getElementById('gpm-forum-content-container').classList.remove('hidden');
                                    document.getElementById('pm-new-thread-controls').classList.remove('hidden');
                                    let li = document.createElement("li");
                                    li.setAttribute("x-soul-id", "{{ command[1]|e('js') }}");
                                    console.log(li);
                                    document.getElementById("pm-selected-users").appendChild(li);

                                    $.html.forEach('#global-pm-forum-editor-title', e => e.focus());
                                } );
                                {% endif %}
                            }
                        }, 10);
                    {% endif %}
                {% endif %}
            {% endif %}
        })();
    </script>
{% endblock %}