{# @var \App\Entity\TownRankingProxy town #}
<div class="view-town">
    <h5 class="relative">
        {% if town.language is not null %}
            <img src="{{ asset("build/images/lang/" ~ town.language ~".png") }}" alt="{{ town.language }}" />
        {% endif %}
        {{town.name}}
    </h5>

    {{ help_lnk('Der Tod und die Berechnung der Seelepunkte'|trans({}, 'help'), 'help', {'name': 'death_and_soul_points'}) }}
    <div class="row">
        <div class="padded cell ro-3 rw-6 ro-md-1 rw-md-10 ro-sm-0 rw-sm-12">

            {% if town.town and town.town.citizens|filter(c=>c.alive) is not empty %}
                <div class="note note-critical center">{{ 'Wenn man den letzten Neuigkeiten Glauben schenken darf, gibt es in dieser Stadt noch Überlebende!'|trans({},'soul') }}</div>
            {% endif %}

            {% if user_name is defined %}
                <button class="center" x-ajax-href="{{ base_path }}">{{ 'Zurück zur Kartei von {player}'|trans({ player: '<strong>'~user_name~'</strong>' },'soul')|raw }}</button>
            {% else %}
                <button class="center" x-ajax-href="{{ path('soul_game_history') }}">{{ 'Übersicht meiner Partien'|trans({},'soul') }}</button>
                {% if not town.imported %}
                    {% for citizen in town.citizens|filter(c => c.end is not null or c.confirmed == true) %}
                        {% if citizen.user == app.user %}
                            <button class="center" x-ajax-href="{{ path('soul_obituary', {id: citizen.id}) }}">{{ 'Todesanzeige dieser Partie ansehen'|trans({},'soul') }}</button>
                        {% endif %}
                    {% endfor %}
                {% endif %}

            {% endif %}

        </div>
    </div>

    {% if town.imported %}
        <div class="row">
            <div class="cell rw-12 padded">
                <div class="green-note">
                    <img width="auto" height="16px" alt="" src="{{ asset('build/images/badges/twinoid.png') }}">
                    {% if town.language == 'de' %}{% set host = '<b>Die Verdammten</b>' %}
                    {% elseif town.language == 'en' %}{% set host = '<b>Die2Nite</b>' %}
                    {% elseif town.language == 'fr' %}{% set host = '<b>Hordes</b>' %}
                    {% elseif town.language == 'es' %}{% set host = '<b>Zombinoia</b>' %}
                    {% else %}{% set host = '<b>Twinoid</b>' %}
                    {% endif %}
                    {{ 'Diese Stadt wurde von {host} importiert. Die angezeigten Informationen sind möglicherweise unvollständig.'|trans({'{host}': host},'soul')|raw }}
                </div>
            </div>
        </div>
    {% elseif town.season is null %}
        <div class="row">
            <div class="cell rw-12 padded">
                <div class="note note-warning">
                    {{ 'Diese Stadt stammt aus der Alpha-Phase von MyHordes. Die angezeigten Informationen sind daher möglicherweise unvollständig oder sehen nicht so aus, wie du es sonst erwarten würdest.'|trans({},'soul')|raw }}
                </div>
            </div>
        </div>
    {% endif %}

    {% if town.getDisableFlag() != constant("\\App\\Entity\\TownRankingProxy::DISABLE_NOTHING") %}
        <div class="row">
            <div class="cell rw-12 padded">
                <div class="note note-warning">
                    {{ 'Diese Stadt hat folgende Einschränkungen:'|trans({}, 'soul') }}
                    <ul>
                    {% if town.hasDisableFlag(constant('\\App\\Entity\\TownRankingProxy::DISABLE_RANKING')) %}
                        <li>{{ 'Ausschluss aus dem Ranking'|trans({}, 'soul') }}</li>
                    {% endif %}
                    {% if town.hasDisableFlag(constant('\\App\\Entity\\TownRankingProxy::DISABLE_PICTOS')) %}
                        <li>{{ 'Löschen der Auszeichnungen'|trans({}, 'soul') }}</li>
                    {% endif %}
                    {% if town.hasDisableFlag(constant('\\App\\Entity\\TownRankingProxy::DISABLE_SOULPOINTS')) %}
                        <li>{{ 'Löschen der Seelenpunkte'|trans({}, 'soul') }}</li>
                    {% endif %}
                    </ul>
                    {% if is_granted('ROLE_CROW') %}
                        {% if town.hasDisableFlag(constant('\\App\\Entity\\TownRankingProxy::DISABLE_RANKING')) %}
                            <div class="button small inline" x-action="unrank_redact" x-flag="{{ constant('\\App\\Entity\\TownRankingProxy::DISABLE_RANKING') }}">{{ 'Ranking-Ausschluss zurücknehmen'|trans({},'admin') }}</div>
                        {% else %}
                            <div class="button small inline" x-action="unrank" x-flag="{{ constant('\\App\\Entity\\TownRankingProxy::DISABLE_RANKING') }}">{{ 'Diese Stadt aus dem Ranking ausschließen'|trans({},'admin') }}</div>
                        {% endif %}
                        {% if town.hasDisableFlag(constant('\\App\\Entity\\TownRankingProxy::DISABLE_PICTOS')) %}
                            <div class="button small inline" x-action="unrank_redact" x-flag="{{ constant('\\App\\Entity\\TownRankingProxy::DISABLE_PICTOS') }}">{{ 'Auszeichnungen wiederherstellen'|trans({}, 'admin') }}</div>
                        {% else %}
                            <div class="button small inline" x-action="unrank" x-flag="{{ constant('\\App\\Entity\\TownRankingProxy::DISABLE_PICTOS') }}">{{ 'Auszeichnungen aller Einwohner dieser Stadt löschen'|trans({}, 'admin') }}</div>
                        {% endif %}
                        {% if town.hasDisableFlag(constant('\\App\\Entity\\TownRankingProxy::DISABLE_SOULPOINTS')) %}
                            <div class="button small inline" x-action="unrank_redact" x-flag="{{ constant('\\App\\Entity\\TownRankingProxy::DISABLE_SOULPOINTS') }}">{{ 'Seelenpunkte wiederherstellen'|trans({}, 'admin') }}</div>
                        {% else %}
                            <div class="button small inline" x-action="unrank" x-flag="{{ constant('\\App\\Entity\\TownRankingProxy::DISABLE_SOULPOINTS') }}">{{ 'Seelenpunkte aller Einwohner dieser Stadt löschen'|trans({}, 'admin') }}</div>
                        {% endif %}
                        <div class="button small inline" x-action="unrank_redact" x-flag="{{ constant('\\App\\Entity\\TownRankingProxy::DISABLE_ALL') }}">{{ 'Alle Sanktionen entfernen'|trans({}, 'admin') }}</div>
                    {% endif %}
                </div>
            </div>
        </div>
    {% endif %}
    {% if town.event %}
        <div class="row">
            <div class="cell rw-12 padded">
                <div class="note green-note">
                    <img alt="E" src="{{ asset('build/images/icons/small_star.gif') }}">
                    {{ 'Dies ist eine Event-Stadt.'|trans({},'soul') }}
                    {% if is_granted('ROLE_CROW') %}
                        <div class="button small inline" id="event_redact">{{ 'Event-Markierung entfernen'|trans({},'admin') }}</div>
                    {% endif %}
                </div>
            </div>
        </div>
    {% endif %}
    {% if is_granted('ROLE_CROW') %}
        <div class="row">
            <div class="cell rw-12 padded">
                {% if town.getDisableFlag() == constant("\\App\\Entity\\TownRankingProxy::DISABLE_NOTHING") %}
                    {% if not town.event %}
                        <div class="button small inline" id="event">{{ 'Als Event-Stadt markieren'|trans({},'admin') }}</div>
                        {% if town.getDisableFlag() != constant('\\App\\Entity\\TownRankingProxy::DISABLE_ALL')  %}
                            <br />
                        {% endif %}
                        {% if not town.hasDisableFlag(constant('\\App\\Entity\\TownRankingProxy::DISABLE_RANKING')) %}
                            <div class="button small inline" x-action="unrank" x-flag="{{ constant('\\App\\Entity\\TownRankingProxy::DISABLE_RANKING') }}">{{ 'Diese Stadt aus dem Ranking ausschließen'|trans({},'admin') }}</div>
                        {% endif %}
                    {% endif %}
                    {% if not town.hasDisableFlag(constant('\\App\\Entity\\TownRankingProxy::DISABLE_PICTOS')) %}
                        <div class="button small inline" x-action="unrank" x-flag="{{ constant('\\App\\Entity\\TownRankingProxy::DISABLE_PICTOS') }}">{{ 'Auszeichnungen aller Einwohner dieser Stadt löschen'|trans({}, 'admin') }}</div>
                    {% endif %}
                    {% if not town.hasDisableFlag(constant('\\App\\Entity\\TownRankingProxy::DISABLE_SOULPOINTS')) %}
                        <div class="button small inline" x-action="unrank" x-flag="{{ constant('\\App\\Entity\\TownRankingProxy::DISABLE_SOULPOINTS') }}">{{ 'Seelenpunkte aller Einwohner dieser Stadt löschen'|trans({}, 'admin') }}</div>
                    {% endif %}
                    {% if not town.hasDisableFlag(constant('\\App\\Entity\\TownRankingProxy::DISABLE_ALL')) %}
                        <div class="button small inline" x-action="unrank" x-flag="{{ constant('\\App\\Entity\\TownRankingProxy::DISABLE_ALL') }}">{{ 'Stadt nicht in der Seele listen'|trans({}, 'admin') }}</div>
                    {% endif %}
                {% endif %}
                {% if not town.imported %}
                    <br />
                    <div class="button small inline" id="relang">{{ 'Sprache wechseln'|trans({},'admin') }}</div>
                    <div class="button small inline" id="rename">{{ 'Stadtnamen regenerieren'|trans({},'admin') }}</div>
                {% endif %}
            </div>
        </div>
    {% endif %}

    <div class="row-table citizens-list">
        <div class="row-flex header">
            <div class="padded cell rw-1 rw-lg-2 rw-md-3 rw-sm-4">
                {{'Tage'|trans({}, 'soul')}}
                {{ help_btn('In dieser Spalte werden die Anzahl der vollen Tage angezeigt, die jeder Bürger überlebt hat. Ein Tag gilt immer dann als "vollkommen überlebt", <strong>wenn du beim Zombieangriff um 23:59 stirbst</strong>. Solltest du vorher, im Laufe des Tages, sterben gilt der Tag nicht als überlebt...'|trans({},'soul')) }}
            </div>
            <div class="padded cell rw-1 rw-lg-2 rw-md-3 rw-sm-4">{{'Ergebnis'|trans({}, 'soul')}}</div>
            <div class="padded cell rw-2 rw-md-3 rw-sm-4">{{'Bürger'|trans({}, 'soul')}}</div>
            <div class="padded cell rw-4 rw-lg-3 hide-sm">{{'Todesursache'|trans({}, 'soul')}}</div>
            <div class="padded cell rw-4 rw-lg-3 hide-md hide-sm">{{'Kommentar'|trans({}, 'soul')}}</div>
        </div>
        {# @var \App\Entity\CitizenRankingProxy citizen #}
        {% for citizen in town.citizens|filter(c => c.end is not null or c.confirmed == true)|sort((a,b) => b.day <=> a.day ?: b.end <=> a.end) %}
            {% set days = citizen.day %}
            {% set sp = days * ( days + 1 ) / 2 %}
            <div class="row {% if citizen.user.id == app.user.id or citizen.user.id == user.id %}me{% endif %}">
                <div class="padded cell rw-1 rw-lg-2 rw-md-3 rw-sm-4">{{citizen.day}}</div>
                <div class="padded cell rw-1 rw-lg-2 rw-md-3 rw-sm-4 town-points bold">
                    {% if not citizen.hasDisableFlag(constant('\\App\\Entity\\CitizenRankingProxy::DISABLE_SOULPOINTS')) and not town.hasDisableFlag(constant('\\App\\Entity\\TownRankingProxy::DISABLE_SOULPOINTS')) and not town.event %}
                        +{{sp}}
                    {% elseif is_granted('ROLE_CROW') %}
                        <div style="{% if citizen.hasDisableFlag(constant('\\App\\Entity\\CitizenRankingProxy::DISABLE_SOULPOINTS')) %}color: {% if citizen.limitedImport %}rosybrown{% else %}red{% endif %};{% endif %} {% if town.hasDisableFlag(constant('\\App\\Entity\\TownRankingProxy::DISABLE_SOULPOINTS')) or town.event %}opacity: 0.5;{% endif %}">+{{sp}}</div>
                    {% elseif not (citizen.hasDisableFlag(constant('\\App\\Entity\\CitizenRankingProxy::DISABLE_SOULPOINTS')) and not citizen.limitedImport) and not town.hasDisableFlag(constant('\\App\\Entity\\TownRankingProxy::DISABLE_SOULPOINTS')) and not town.event %}
                        +{{sp}}
                    {% else %}
                        +0
                    {% endif %}
                    {% if is_granted('ROLE_CROW') %}
                        {% if not citizen.hasDisableFlag(constant("\\App\\Entity\\CitizenRankingProxy::DISABLE_SOULPOINTS")) %}
                            <span>
                                <img x-action="unrank" x-endpoint="{{ path('admin_town_citizen_ranking_control', {tid: town.id, cid: citizen.id, act: 1}) }}" x-flag="{{ constant("\\App\\Entity\\CitizenRankingProxy::DISABLE_SOULPOINTS") }}" class="pointer" src="{{ asset('build/images/icons/small_removesp.gif') }}" alt="del sp" />
                                <div class="tooltip">{{ 'Seelenpunkte dieses Bürgers entfernen'|trans({}, 'admin') }}</div>
                            </span>
                        {% elseif citizen.hasDisableFlag(constant("\\App\\Entity\\CitizenRankingProxy::DISABLE_SOULPOINTS")) and (citizen.resetMarker is null or is_granted('ROLE_ADMIN')) %}
                            <span>
                                <img x-action="unrank" x-endpoint="{{ path('admin_town_citizen_ranking_control', {tid: town.id, cid: citizen.id, act: 0}) }}" x-flag="{{ constant("\\App\\Entity\\CitizenRankingProxy::DISABLE_SOULPOINTS") }}" class="pointer" src="{{ asset('build/images/icons/small_restoresp.gif') }}" alt="re" />
                                <div class="tooltip">{{ 'Seelenpunkte für diesen Bürger wiederherstellen'|trans({}, 'admin') }}</div>
                            </span>
                        {% endif %}
                        {% if not citizen.hasDisableFlag(constant("\\App\\Entity\\CitizenRankingProxy::DISABLE_RANKING")) %}
                            <span>
                                <img x-action="unrank" x-endpoint="{{ path('admin_town_citizen_ranking_control', {tid: town.id, cid: citizen.id, act: 1}) }}" x-flag="{{ constant("\\App\\Entity\\CitizenRankingProxy::DISABLE_RANKING") }}" class="pointer" src="{{ asset('build/images/icons/small_removernk.gif') }}" alt="del rnk" />
                                <div class="tooltip">{{ 'Bürger aus dem Ranking entfernen'|trans({}, 'admin') }}</div>
                            </span>
                        {% elseif citizen.hasDisableFlag(constant("\\App\\Entity\\CitizenRankingProxy::DISABLE_RANKING")) and (citizen.resetMarker is null or is_granted('ROLE_ADMIN')) %}
                            <span>
                                <img x-action="unrank" x-endpoint="{{ path('admin_town_citizen_ranking_control', {tid: town.id, cid: citizen.id, act: 0}) }}" x-flag="{{ constant("\\App\\Entity\\CitizenRankingProxy::DISABLE_RANKING") }}" class="pointer" src="{{ asset('build/images/icons/small_restorernk.gif') }}" alt="re" />
                                <div class="tooltip">{{ 'Ranking für diesen Bürger wiederherstellen'|trans({}, 'admin') }}</div>
                            </span>
                        {% endif %}
                        {% if not citizen.hasDisableFlag(constant("\\App\\Entity\\CitizenRankingProxy::DISABLE_PICTOS")) %}
                            <span>
                                <img x-action="unrank" x-endpoint="{{ path('admin_town_citizen_ranking_control', {tid: town.id, cid: citizen.id, act: 1}) }}" x-flag="{{ constant("\\App\\Entity\\CitizenRankingProxy::DISABLE_PICTOS") }}" class="pointer" src="{{ asset('build/images/icons/small_removepictos.gif') }}" alt="del pictos" />
                                <div class="tooltip">{{ 'Auszeichnungen dieses Bürgers entfernen'|trans({}, 'admin') }}</div>
                            </span>
                        {% elseif citizen.hasDisableFlag(constant("\\App\\Entity\\CitizenRankingProxy::DISABLE_PICTOS")) and (citizen.resetMarker is null or is_granted('ROLE_ADMIN')) %}
                            <span>
                                <img x-action="unrank" x-endpoint="{{ path('admin_town_citizen_ranking_control', {tid: town.id, cid: citizen.id, act: 0}) }}" x-flag="{{ constant("\\App\\Entity\\CitizenRankingProxy::DISABLE_PICTOS") }}" class="pointer" src="{{ asset('build/images/icons/small_restorepictos.gif') }}" alt="re" />
                                <div class="tooltip">{{ 'Auszeichnungen für diesen Bürger wiederherstellen'|trans({}, 'admin') }}</div>
                            </span>
                        {% endif %}
                        {% if not citizen.hasDisableFlag(constant("\\App\\Entity\\CitizenRankingProxy::DISABLE_ALL")) %}
                            <span>
                                <img x-action="unrank" x-endpoint="{{ path('admin_town_citizen_ranking_control', {tid: town.id, cid: citizen.id, act: 1}) }}" x-flag="{{ constant("\\App\\Entity\\CitizenRankingProxy::DISABLE_ALL") }}" class="pointer" src="{{ asset('build/images/icons/small_ban.gif') }}" alt="del all" />
                                <div class="tooltip">{{ 'Stadt nicht in der Seele listen'|trans({}, 'admin') }}</div>
                            </span>
                        {% else %}
                            <span>
                                <img x-action="unrank" x-endpoint="{{ path('admin_town_citizen_ranking_control', {tid: town.id, cid: citizen.id, act: 0}) }}" x-flag="{{ constant("\\App\\Entity\\CitizenRankingProxy::DISABLE_ALL") }}" class="pointer" src="{{ asset('build/images/icons/small_back.gif') }}" alt="re all" />
                                <div class="tooltip">{{ 'Alle Sanktionen entfernen'|trans({}, 'admin') }}</div>
                            </span>
                        {% endif %}
                        {% if citizen.resetMarker is not null %}<span class="small">[R]</span>{% endif %}
                    {% endif %}
                </div>
                <div class="padded cell rw-2 rw-md-3 rw-sm-4">
                    {% if not last_user_standing is null and last_user_standing == citizen.user %}
                        <span>
                    <img src="{{ asset('build/images/pictos/r_surlst.gif') }}" />
                    <div class="tooltip help">
                        {{'Der letzte Tote in dieser Stadt!'|trans({}, 'game')}}
                        <p>{{'Achtung!'|trans({}, 'ghost')}} <strong>{{'Der letzte Tote erhält nur dann eine Belohnung, wenn er 5 volle Tage überlebt hat.'|trans({}, 'game')}}</strong></p>
                    </div>
                </span>
                    {% endif %}
                    {% include 'ajax/soul/playername.html.twig' with {user: citizen.user} only %}
                </div>
                <div class="padded cell rw-4 rw-lg-3 hide-sm">
                    {% if is_granted("ROLE_CROW") and citizen.limitedImport %}
                        <div><b style="color: rosybrown">{{ 'Eingeschränkter Import'|trans({},'admin') }}</b></div>
                    {% endif %}
                    {% if citizen.cod is not null %}
                        {{citizen.cod.label|trans({}, 'game')}}
                    {% else %}
                        {{'Unbekannte Todesursache'|trans({}, 'game')}}
                    {% endif %}
                    {% if not citizen.lastWords is empty %}
                        <img src="{{asset('build/images/log/chat.gif')}}"  alt=""/>
                        {% if citizen.user != app.user %}
                            <a data-report-url="{{ path('soul_report_comment', {sid: citizen.user.id, idtown: citizen.town.id, topic: 'lw'}) }}" href="#" title="{{ 'Unangemessenen Inhalt melden'|trans({},'global') }}"><img alt="!" src="{{ asset('build/images/forum/warning.png') }}"></a>
                        {% endif %}
                        {% if is_granted('ROLE_CROW') %}
                            <br/>
                            <img x-model="last" x-action="edit" x-original="{{ citizen.lastWords }}" x-endpoint="{{ path('admin_user_edit_comment', {id: citizen.user.id, cid: citizen.id}) }}" class="pointer" src="{{ asset('build/images/forum/edit.png') }}" alt="edit" />
                            <img x-model="last" x-action="del" x-endpoint="{{ path('admin_user_edit_comment', {id: citizen.user.id, cid: citizen.id}) }}" class="pointer" src="{{ asset('build/images/icons/small_remove.gif') }}" alt="del" />
                        {% endif %}
                    {% endif %}
                    <div class="tooltip">
                        {% if citizen.lastWords is empty %}
                            <span>{{ 'Dieser Bürger hat keine letzten Worte hinterlassen ...'|trans({}, 'game') }}</span>
                        {% else %}
                            <b>{{"Letzte Worte:"|trans({}, 'game')}}</b> {{ citizen.lastWords|replace({'{gotKilled}': '...der Mörder .. ist.. IST.. AAARGHhh..'|trans({},'game')}) }}
                        {% endif %}
                    </div>
                </div>
                <div class="padded cell rw-4 rw-lg-3 rw-md-12 hide-sm hidden-empty comment">
                    {% if is_granted('ROLE_CROW') and citizen.commentLocked %}<span style="color: red">{{citizen.comment}}</span>
                    {% else %}{{citizen.comment}}{% endif %}
                    {% if citizen.user != app.user and citizen.comment %}
                        <a data-report-url="{{ path('soul_report_comment', {sid: citizen.user.id, idtown: citizen.town.id, topic: 'com'}) }}" href="#" title="{{ 'Unangemessenen Inhalt melden'|trans({},'global') }}"><img alt="!" src="{{ asset('build/images/forum/warning.png') }}"></a>
                    {% endif %}
                    {% if is_granted('ROLE_CROW') and citizen.comment is not empty %}
                        <br/>
                        <img x-model="com" x-original="{{ citizen.comment }}" x-action="edit" x-endpoint="{{ path('admin_user_edit_comment', {id: citizen.user.id, cid: citizen.id}) }}" class="pointer" src="{{ asset('build/images/forum/edit.png') }}" alt="edit" />
                        <img x-model="com" x-action="del" x-endpoint="{{ path('admin_user_edit_comment', {id: citizen.user.id, cid: citizen.id}) }}" class="pointer" src="{{ asset('build/images/icons/small_remove.gif') }}" alt="del" />
                    {% elseif is_granted('ROLE_CROW') and not citizen.commentLocked %}
                        <img x-model="com" x-action="del" x-endpoint="{{ path('admin_user_edit_comment', {id: citizen.user.id, cid: citizen.id}) }}" class="pointer" src="{{ asset('build/images/icons/lock.gif') }}" alt="lock" />
                    {% elseif is_granted('ROLE_CROW') %}
                        <span style="color: red">[ ... ]</span>
                    {% endif %}
                </div>
                <div class="padded cell rw-12 hide-desktop hide-lg hide-md comment">
                    {% if citizen.cod is not null %}
                        <i>{{citizen.cod.label|trans({}, 'game')}}</i>
                    {% else %}
                        <i>{{'Unbekannte Todesursache'|trans({}, 'game')}}</i>
                    {% endif %}
                    {% if not citizen.lastWords is empty %}
                        : <span class="small">"{{ citizen.lastWords|replace({'{gotKilled}': '...der Mörder .. ist.. IST.. AAARGHhh..'|trans({},'game')}) }}"</span>
                    {% endif %}
                    {% if citizen.comment is not empty %}
                        <br />{{citizen.comment}}
                    {% endif %}
                </div>
            </div>
        {% endfor %}
    </div>
</div>
<script>
    $.html.addEventListenerAll("[data-report-url]", "click", function(event,element){
        event.preventDefault();
        event.stopPropagation();

        let form = $.html.createElement('<div class="modal-form" id="modal-form" />');
        form.append($.html.createElement( '<p class="small bold"></p>', '{{ 'Bist du sicher, dass du diesen Post an die Moderatoren melden willst?'|trans({},'global')|e('js') }}' ));

        let sec_p = $.html.createElement('<p class="small"/>', '{{ 'Wenn möglich gib bitte einen Grund für deine Meldung an:'|trans({},'global')|e('js') }}');
        sec_p.append( $.html.createElement('<div><label><input type="radio" name="report_reason" value="1" />' + '{{ 'Cheating'|trans({},'global')|e('js') }}' + '</label></div>') )
        sec_p.append( $.html.createElement('<div><label><input type="radio" name="report_reason" value="2" />' + '{{ 'Flooding oder Spam'|trans({},'global')|e('js') }}' + '</label></div>') )
        sec_p.append( $.html.createElement('<div><label><input type="radio" name="report_reason" value="4" />' + '{{ 'Beleidigungen / Unangemessener Ausdruck'|trans({},'global')|e('js') }}' + '</label></div>') )
        sec_p.append( $.html.createElement('<div><label><input type="radio" name="report_reason" value="5" />' + '{{ 'Pornographie'|trans({},'global')|e('js') }}' + '</label></div>') )
        sec_p.append( $.html.createElement('<div><label><input type="radio" name="report_reason" value="6" />' + '{{ 'Hassrede'|trans({},'global')|e('js') }}' + '</label></div>') )
        sec_p.append( $.html.createElement('<div><label><input type="radio" name="report_reason" value="7" />' + '{{ 'Verbreitung persönlicher Informationen'|trans({},'global')|e('js') }}' + '</label></div>') )
        sec_p.append( $.html.createElement('<div><label><input type="radio" name="report_reason" value="8" />' + '{{ 'Verletzung von Copyright'|trans({},'global')|e('js') }}' + '</label></div>') )
        sec_p.append( $.html.createElement('<div><label><input type="radio" name="report_reason" value="9" />' + '{{ 'Aufruf zu Gesetzesverstößen'|trans({},'global')|e('js') }}' + '</label></div>') )
        sec_p.append( $.html.createElement('<div><label><input type="radio" name="report_reason" value="10" />' + '{{ 'Ermutigung von Selbstmord oder Selbstverletzung'|trans({},'global')|e('js') }}' + '</label></div>') )
        sec_p.append( $.html.createElement('<p class="small"/>', '{{ 'Zusätzliche Informationen zu deiner Meldung (optional):'|trans({},'global')|e('js') }}') )
        sec_p.append( $.html.createElement('<div><textarea maxlength="255" style="min-height: 70px; max-height: 120px; height: 70px;" name="report_details"></textarea></div>') )

        form.append(sec_p)

        $.html.popup('{{ 'Unangemessenen Inhalt melden'|trans({},'global')|e('js') }}', form, null, [
            [ '{{ 'Inhalt melden'|trans({},'global')|e('js') }}',  [ ['click', (e_sub, elem_sub) => {
                const reason = document.querySelector('[name="report_reason"]:checked') ? parseInt(document.querySelector('[name="report_reason"]:checked').value) : 0;
                const detail = document.querySelector('[name="report_details"]') ? document.querySelector('[name="report_details"]').value : '';
                if (reason > 0) {
                    $.html.triggerPopupPop(elem_sub);
                    $.ajax.easySend( element.dataset.reportUrl, {reason, details: detail }, () => $.ajax.load(null, '{{ return_to|e('js') }}') );
                } else $.html.error('{{ 'Bitte wähle einen Grund für deine Meldung aus.'|trans({},'global')|e('js') }}')
            }] ] ],
            [ '{{ 'Abbrechen'|trans({},'global')|e('js') }}', [ ['click', (e_sub, elem_sub) => $.html.triggerPopupPop(elem_sub)] ] ]
        ] );

    });
</script>
{% if is_granted('ROLE_CROW') %}
    <script>
        (function() {
            $.html.addEventListenerAll('div.button[x-action="unrank"]', 'click', (e,elem) => {
                if (!confirm('{{ 'Bestätigen?'|trans({},'global')|e('js') }}')) return;
                $.ajax.easySend('{{ path('admin_town_town_ranking_control', {tid: town.id, act: 1}) }}', {'flag': elem.getAttribute('x-flag')}, () => $.ajax.load(null, '{{ return_to|e('js') }}'));
            });

            {% if not town.imported %}
                $.html.addEventListenerAll('#rename', 'click', (e,elem) => {
                    if (!confirm('{{ 'Bestätigen?'|trans({},'global')|e('js') }}')) return;
                    $.ajax.easySend('{{ path('admin_town_town_lang_control', {tid: town.id}) }}', {lang: '{{ town.language|e('js') }}', rename: true}, () => $.ajax.load(null, '{{ return_to|e('js') }}'));
                });

                $.html.addEventListenerAll('#relang', 'click', (e,elem) => {
                    const new_lang = prompt( '{{ 'Sprache wechseln'|trans({},'admin')|e('js') }}', '{{ town.language|e('js') }}' )
                    if (!new_lang) return;
                    $.ajax.easySend('{{ path('admin_town_town_lang_control', {tid: town.id}) }}', {lang: new_lang, rename: false}, () => $.ajax.load(null, '{{ return_to|e('js') }}'));
                });
            {% endif %}

            $.html.addEventListenerAll('div.button[x-action="unrank_redact"]', 'click', (e,elem) => {
                if (!confirm('{{ 'Bestätigen?'|trans({},'global')|e('js') }}')) return;
                $.ajax.easySend('{{ path('admin_town_town_ranking_control', {tid: town.id, act: 0}) }}', {'flag': elem.getAttribute('x-flag')}, () => $.ajax.load(null, '{{ return_to|e('js') }}'));
            });

            $.html.addEventListenerAll('#event', 'click', (e,elem) => {
                if (!confirm('{{ 'Bestätigen?'|trans({},'global')|e('js') }}')) return;
                $.ajax.easySend('{{ path('admin_town_event_tag_control', {tid: town.id, act: 1}) }}', {}, () => $.ajax.load(null, '{{ return_to|e('js') }}'));
            });

            $.html.addEventListenerAll('#event_redact', 'click', (e,elem) => {
                if (!confirm('{{ 'Bestätigen?'|trans({},'global')|e('js') }}')) return;
                $.ajax.easySend('{{ path('admin_town_event_tag_control', {tid: town.id, act: 0}) }}', {}, () => $.ajax.load(null, '{{ return_to|e('js') }}'));
            });

            $.html.addEventListenerAll('[x-endpoint][x-action="unrank"]', 'click', (e,elem) => {
                if (!confirm('{{ 'Bestätigen?'|trans({},'global')|e('js') }}')) return;
                $.ajax.easySend(elem.getAttribute('x-endpoint'), {'flag': elem.getAttribute('x-flag')}, () => $.ajax.load(null, '{{ return_to|e('js') }}'));
            });

            $.html.addEventListenerAll('[x-model][x-endpoint][x-action]', 'click', (e,elem) => {
                const action = elem.getAttribute('x-action');
                let text = null;
                if (action === 'del' && !confirm('{{ 'Bestätigen?'|trans({},'global')|e('js') }}')) return;
                if (action === 'edit' && (text = prompt('{{ 'Bearbeiten'|trans({},'admin') }}', elem.getAttribute('x-original'))) === null) return;

                $.ajax.easySend(elem.getAttribute('x-endpoint'), {mod: elem.getAttribute('x-model'), txt: text}, () => $.ajax.load(null, '{{ return_to|e('js') }}'));
            })
        })();
    </script>
{% endif %}