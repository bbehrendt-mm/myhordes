{% extends "ajax/ajax_plain.html.twig" %}
{% block ajax_base %}
    <div>
        {% if is_deleted %}
            <strong class="warning">{{ 'Dieses MyHordes-Konto wurde gelöscht.'|trans({}, 'soul') }}</strong>
        {% endif %}
        {% if is_deleted or not dummy  %}
            {% if not during_attack %}
                {# @var \App\Entity\User user #}
                {% if app.user.id != user.id and not app.user.activeCitizen is null and not user.activeCitizen is null and app.user.activeCitizen.town == user.activeCitizen.town and app.user.activeCitizen.zone is null %}
                    <span class="link" x-ajax-href="{{ path('town_visit', {"id": user.activeCitizen.id}) }}"><img src="{{ asset('build/images/icons/home.gif') }}" alt="" /> {{ 'Haus ansehen'|trans({}, 'soul') }}</span>
                {% endif %}
                <span class="link" x-ajax-href="{{ path('soul_visit', {"id": user.id}) }}"><img src="{{ asset("build/images/icons/small_zombie.gif") }}" alt="" /> {{ 'Profil auf MyHordes'|trans({}, 'soul') }}</span>
            {% endif %}
            {% if is_granted("ROLE_CROW") %}
                <span class="link" x-ajax-href="{{ path('admin_users_account_view', {id: user.id}) }}"><img alt="" src="{{ asset('build/images/icons/small_admin.gif') }}">{{ 'Admin Dashboard'|trans({},'admin') }}</span>
            {% endif %}
            {% if not dummy %}
            <div class="link-blocks">
                {% if not user.eternalID is null %}
                    <a class="link-block" href="https://eternal-twin.net/users/{{ user.eternalID }}">
                            <img src="{{ asset('build/images/eternal-twin/icon_small.png') }}" alt="" /><br />
                            {{ 'Profil Eternal-Twin'|trans({}, 'soul') }}
                    </a>
                {% endif %}
                {% if app.user == user %}
                    <div class="link-block empty"></div>
                    <div class="link-block empty"></div>
                {% else %}
                    <a class="link-block" x-action="send-pm" x-user-connect="ulink_{{ user.id }}">
                        <img src="{{ asset('build/images/icons/mail.png') }}" alt="" /><br />
                        {{ 'Schreiben'|trans({}, 'soul') }}
                    </a>
                    {% if not isFriend %}
                        <a class="link-block" x-action="add-friend" x-friend-id="{{ user.id }}">
                            <img src="{{ asset('build/images/icons/addContact.png') }}" alt="" /><br />
                            {{ 'Kontakt hinzufügen'|trans({}, 'soul') }}
                        </a>
                    {% else %}
                        <a class="link-block" x-action="remove-friend" x-friend-id="{{ user.id }}">
                            <img src="{{ asset('build/images/icons/removeContact.png') }}" alt="" /><br />
                            {{ 'Kontakt löschen'|trans({}, 'soul') }}
                        </a>
                    {% endif %}
                {% endif %}
                {% if user.eternalID is null %}
                    <div class="link-block empty"></div>
                {% endif %}
            </div>

            {% if app.user.id != user.id and not app.user.activeCitizen is null and not user.activeCitizen is null and app.user.activeCitizen.town == user.activeCitizen.town and user.activeCitizen.alias %}
                <div class="friend-relation using-alias mt-1">{{ 'Dieser Bürger verwendet in der aktuellen Stadt einen alternativen Spitznamen.'|trans({},'global') }}</div>
            {% endif %}

            {% if super %}
                <div class="note note-important">{{ 'Dieser Spieler ist ein Administrator auf diesem Server.'|trans({},'global') }}</div>
            {% elseif admin %}
                <div class="note note-important">{{ 'Dieser Spieler ist ein Entwickler von MyHordes.'|trans({},'global') }}</div>
            {% elseif oracle %}
                <div class="note note-important">{{ 'Dieser Spieler ist ein Orakel auf MyHordes.'|trans({},'global') }}</div>
            {% elseif anim %}
                <div class="note note-important">{{ 'Dieser Spieler ist ein Animateur auf MyHordes.'|trans({},'global') }}</div>
            {% elseif team %}
                <div class="note note-important">{{ 'Dieser Spieler ist Mitglied des Entwickler-Teams von MyHordes.'|trans({},'global') }}</div>
            {% endif %}

            {% if not user|is_granted('ROLE_CROW') and app.user != user %}
                <div class="row">
                    <div class="cell rw-12 right">
                        <a class="link inline small" x-friend-id="{{ user.id }}" x-action="report_user">{{ 'Spieler melden'|trans({'{user}': user.name},'global') }}</a>
                        {% if not app.user|related(user,constant('App\\Entity\\SocialRelation::SocialRelationTypeBlock')) %}
                            <a class="link inline small" x-friend-id="{{ user.id }}" x-action="block_user">{{ 'Spieler blockieren'|trans({'{user}': user.name},'global') }}</a>
                        {% else %}
                            <a class="link inline small" x-friend-id="{{ user.id }}" x-action="unblock_user">{{ 'Blockade aufheben'|trans({'{user}': user.name},'global') }}</a>
                        {% endif %}
                    </div>
                </div>
            {% endif %}

            <hr class="dashed" />
            {% endif %}
        {% endif %}
        {% if not is_deleted %}
        <div class="row">
            <div class="cell rw-4">
                {% include "ajax/soul/playeravatar.html.twig" with {user: user} only %}
            </div>
            <div class="cell rw-8 row user-infos">
                <div class="row-flex v-center gap">
                    {% if crow and dummy %}
                        <div class="cell rw-12">{{ 'Ich beobachte euch...'|trans({},'game') }}</div>
                    {% elseif not dummy %}
                        {% if user.flag is not null %}
                            <div class="cell"><div class="user-flag small"><img alt="{{ user.flag }}" src="{{ asset('build/images/lang/any/' ~ user.flag ~ '.svg' ) }}"/></div></div>
                        {% elseif user.language is not null %}
                            <div class="cell"><img src="{{ asset("build/images/lang/" ~ user.language ~ ".png") }}" alt="{{ user.language }}" /></div>
                        {% endif %}
                        {% if user.preferredPronoun == constant("\\App\\Entity\\User::PRONOUN_MALE") %}
                            <div class="cell"><img src="{{ asset('build/images/icons/male.png') }}" alt="{{ 'Männlich'|trans({},'global') }}" /></div>
                        {% elseif user.preferredPronoun == constant("\\App\\Entity\\User::PRONOUN_FEMALE") %}
                            <div class="cell"><img src="{{ asset('build/images/icons/female.png') }}" alt="{{ 'Weiblich'|trans({},'global') }}" /></div>
                        {% endif %}
                    {% endif %}
                </div>
            </div>
        </div>
        {% if not userDesc is null and userDesc != "" %}
            <div class="row">
                <div class="userDesc">
                    {{ userDesc|raw }}
                </div>
            </div>
        {% endif %}
        {% if not isFriend and app.user != user and not dummy %}
            <div class="friend-relation not-friend mt-1">{{ 'Dieser Spieler gehört nicht zu deinen Kontakten.'|trans({}, 'soul') }}</div>
        {% endif %}
        {% endif %}
    </div>

    {{ include('ajax/flash.html.twig') }}

    <script>
        $.html.addEventListenerAll('#user-tooltip a[x-action="block_user"]','click',(e,elem) => {
            e.preventDefault();
            let source = event.target;
            let user_id = elem.getAttribute('x-friend-id');
            if (confirm(
                '{{ 'Wenn du diesen Spieler blockierst, kann er dir keine neuen Nachrichten schicken. Werdet ihr beide von einer dritten Person in eine Gruppennachricht hinzugefügt, so werden Beiträge des blockierten Spielers standartmäßig für dich versteckt.'|trans({},'global')|e('js') }}' +
                '\n\n{{ 'Möchtest du fortfahren?'|trans({},'global')|e('js') }}'
            ))
                var url = '{{ path('soul_block_control', {id: 0, action: 1}) }}';
            url = url.replace("0", user_id);
            $.ajax.easySend( url, {},
                function () {
                    $.ajax.load(target, "{{ path('soul_tooltip') }}", false, {'id': user_id});
                } );
        });

        $.html.addEventListenerAll('#user-tooltip a[x-action="unblock_user"]','click',(e,elem) => {
            e.preventDefault();
            let source = event.target;
            let user_id = elem.getAttribute('x-friend-id');
            if (confirm('{{ 'Bestätigen?'|trans({},'global')|e('js') }}'))
                var url = '{{ path('soul_block_control', {id: 0, action: 0}) }}';
            url = url.replace("0", user_id);
            $.ajax.easySend( url, {},
                function () {
                    $.ajax.load(target, "{{ path('soul_tooltip') }}", false, {'id': user_id});
                });
        });

        $.html.addEventListenerAll('#user-tooltip a[x-action="add-friend"]', 'click', (e, elem) => {
            let source = event.target;
            let user_id = elem.getAttribute('x-friend-id');
            $.ajax.easySend( '{{ path('soul_friend_control', {action: 1}) }}', {'id': user_id},
                function () {
                    $.ajax.load(target, "{{ path('soul_tooltip') }}", false, {'id': user_id}, function(){
                        let userElements = document.querySelectorAll('.username[x-user-id="' + user_id + '"]');
                        for(let i = 0 ; i < userElements.length ; i++)
                            userElements[i].classList.add("is-friend");
                    });
                });
        });

        $.html.addEventListenerAll('#user-tooltip a[x-action="remove-friend"]', 'click', (e, elem) => {
            let source = event.target;
            let user_id = elem.getAttribute('x-friend-id');
            $.ajax.easySend( '{{ path('soul_friend_control', {action: 0}) }}', {'id': user_id},
                function () {
                    $.ajax.load(target, "{{ path('soul_tooltip') }}", false, {'id': user_id}, function(){
                        let userElements = document.querySelectorAll('.username[x-user-id="' + user_id + '"]');
                        for(let i = 0 ; i < userElements.length ; i++)
                            userElements[i].classList.remove("is-friend");
                    });
                });
        });

        $.html.addEventListenerAll('#user-tooltip a[x-action="send-pm"]', 'click', (e, elem) => {
            if (document.body.dataset.host === 'pm') {
                window.location.href = '{{ path('home_pm') }}/' + elem.getAttribute('x-user-connect');
            } else {
                const p = document.getElementById('postbox');
                if (p) {
                    p.setAttribute('x-post-command', elem.getAttribute('x-user-connect'));
                    p.click();
                } else alert('{{ 'Fehler beim Laden des Posteingangs.'|trans({},'global') }}')
            }
        });

        $.html.addEventListenerAll('#user-tooltip [x-ajax-href]', 'click', (e, elem) => {
            if (document.body.dataset.host === 'pm') {
                window.location.href = elem.getAttribute('x-ajax-href');
                e.preventDefault();
                e.cancelBubble = true;
            } else {
                let post = document.getElementById('post-office');
                if (post) {
                    post.classList.remove('visible');
                    document.body.style.overflow = null;
                    $.msg.togglePing(true);
                    $.msg.toggleFetch(false);
                    $.msg.restoreFetchEndpoint();
                    $.msg.setFetchRK(null);
                    $.msg.execute();
                }
            }
        });

        $.html.addEventListenerAll('#user-tooltip a[x-action="report_user"]', 'click', function(e,elem) {
            let form = $.html.createElement('<div class="modal-form" id="modal-form" />');
            form.append($.html.createElement( '<p class="small bold"></p>', '{{ 'Bist du sicher, dass du diesen Spieler an die Moderatoren melden willst?'|trans({},'global')|e('js') }}' ));
            form.append($.html.createElement( '<p class="small"></p>', '{{ 'Wenn du eine Nachricht oder einen Foren-Post dieses Spielers melden willst, benutze bitte stattdessen die Melden-Funktion der entsprechenden Nachricht.'|trans({},'global')|e('js') }}' ));

            let sec_p = $.html.createElement('<p class="small"/>', '{{ 'Wenn möglich gib bitte einen Grund für deine Meldung an:'|trans({},'global')|e('js') }}');
            sec_p.append( $.html.createElement('<div><label><input checked type="radio" name="report_reason" value="0" />' + '{{ 'Keinen Grund angeben'|trans({},'global')|e('js') }}' + '</label></div>') )
            sec_p.append( $.html.createElement('<div><label><input type="radio" name="report_reason" value="11" />' + '{{ 'Unangemessene Profilbeschreibung'|trans({},'global')|e('js') }}' + '</label></div>') )
            sec_p.append( $.html.createElement('<div><label><input type="radio" name="report_reason" value="12" />' + '{{ 'Unangemessener Avatar'|trans({},'global')|e('js') }}' + '</label></div>') )
            sec_p.append( $.html.createElement('<div><label><input type="radio" name="report_reason" value="13" />' + '{{ 'Unangemessener Name'|trans({},'global')|e('js') }}' + '</label></div>') )
            sec_p.append( $.html.createElement('<p class="small"/>', '{{ 'Zusätzliche Informationen zu deiner Meldung (optional):'|trans({},'global')|e('js') }}') )
            sec_p.append( $.html.createElement('<div><textarea maxlength="255" style="min-height: 70px; max-height: 120px; height: 70px;" name="report_details"></textarea></div>') )

            form.append(sec_p)

            $.html.popup('{{ 'Unangemessenen Inhalt melden'|trans({},'global')|e('js') }}', form, null, [
                [ '{{ 'Inhalt melden'|trans({},'global')|e('js') }}',  [ ['click', (e_sub, elem_sub) => {
                    const reason = document.querySelector('[name="report_reason"]:checked') ? parseInt(document.querySelector('[name="report_reason"]:checked').value) : 0;
                    const detail = document.querySelector('[name="report_details"]') ? document.querySelector('[name="report_details"]').value : '';
                    $.html.triggerPopupPop(elem_sub);
                    $.ajax.easySend( '{{ url('soul_report_user', { 'sid': user.id}) }}', {reason: reason, details: detail }, ()=>{document.location.reload();} );
                }] ] ],
                [ '{{ 'Abbrechen'|trans({},'global')|e('js') }}', [ ['click', (e_sub, elem_sub) => $.html.triggerPopupPop(elem_sub)] ] ]
            ] );
        });
    </script>
{% endblock %}