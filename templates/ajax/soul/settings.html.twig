{% extends "ajax/soul/shell.html.twig" %}
{% block title %}{{'Einstellungen'|trans({}, 'game')}}{% endblock %}
{% block soul_content %}
    <div class="row">

        {% if et_ready and app.user.eternalID is null %}
            <div class="cell rw-12 padded">
                <h5>{{ 'Über EternalTwin einloggen'|trans({},'login') }}</h5>
                <div class="eternalMergeBanner">
                    <div class="row">
                        <div class="cell rw-2 padded">
                            <img class="fit" alt="" src="{{ asset('build/images/eternal-twin/icon_large.png') }}">
                        </div>
                        <div class="cell rw-10 padded">
                            <strong>{{ 'MyHordes ist ein stolzer Bestandteil des EternalTwin-Netzwerkes!'|trans({},'soul') }}</strong>
                            {{ 'Um MyHordes auch in Zukunft weiter spielen zu können, musst du deinen alten MyHordes-Account mit einem EternalTwin-Account verknüpfen.'|trans({},'soul') }}
                            {{ 'Deine Seele bleibt bei der Verknüpfung mit EternalTwin selbstverständlich vollständig erhalten.'|trans({},'login') }}
                            <br />
                            <a class="button" target="_self" href="{{ url('gateway-etwin') }}">{{ 'EternalTwin-Account verknüpfen'|trans({},'soul') }}</a>
                        </div>
                    </div>
                </div>
            </div>
        {% endif %}

        {% if not app.user.tosAccepted or not app.user.tosUpdateAccepted %}
            <div class="cell rw-12 padded">
                <div class="note critical">
                    {{ 'Du hast den Nutzungsbedingungen von MyHordes noch nicht zugestimmt. Beachte, dass du diese Warnung nicht für immer ignorieren kannst.'|trans({},'login') }}
                    <a href="#" x-ajax-href="{{ url('public_accept_tos') }}">{{ 'Zum Zustimmungsdialog wechseln'|trans({},'login') }}</a>
                </div>
            </div>
        {% endif %}

        <div class="cell rw-12 padded">
            <div class="tab-floater">
                <ul class="tabs plain" x-tab-group="user-settings-tabs" x-tab-control>
                    <li class="tab" x-tab-id="profile"><div class="tab-link">
                        <img alt="" src="{{ asset('build/images/icons/small_user.gif') }}" />
                        <span class="hide-md hide-sm">{{ 'Profil und Avatar'|trans({},'soul') }}</span>
                    </div></li>
                    <li class="tab" x-tab-id="security"><div class="tab-link">
                        <img alt="" src="{{ asset('build/images/icons/lock.gif') }}" />
                        <span class="hide-md hide-sm">{{ 'Account und Sicherheit'|trans({},'soul') }}</span>
                    </div></li>
                    {% if show_importer %}
                        <li class="tab" x-tab-id="soul-import"><div class="tab-link">
                            <img alt="" src="{{ asset('build/images/icons/small_ghost_red.gif') }}" />
                            <span class="hide-md hide-sm">{{ 'Seelenimport'|trans({},'soul') }}</span>
                        </div></li>
                    {% endif %}
                    <li class="tab" x-tab-id="general-settings"><div class="tab-link">
                            <img alt="" src="{{ asset('build/images/icons/title/r_repair.gif') }}" />
                            <span class="hide-md hide-sm">{{ 'Allgemein'|trans({},'soul') }}</span>
                        </div></li>
                    <li class="tab" x-tab-id="browser-settings"><div class="tab-link">
                            <img alt="" src="{{ asset('build/images/building/small_eden.gif') }}" />
                            <span class="hide-md hide-sm">{{ 'Browser'|trans({},'soul') }}</span>
                        </div></li>
                    <li class="tab" x-tab-id="expert-settings"><div class="tab-link">
                        <img alt="" src="{{ asset('build/images/icons/small_archive.gif') }}" />
                        <span class="hide-md hide-sm">{{ 'Erweitert'|trans({},'soul') }}</span>
                    </div></li>
                </ul>
            </div>
        </div>

        <div class="cell rw-12 padded">

            {% if (swapPivots is defined and swapPivots is not empty) %}
                <h5 style="color: red">{{ 'Account wechseln'|trans({},'global') }}</h5>
                <ul>
                    {% for pivot in swapPivots %}
                        <li><a class="link" target="_self" href="{{ url('home', {'_switch_user': pivot.secondary.username}) }}"><span style="color: red">{{ pivot.secondary.name }}</span></a></li>
                    {% endfor %}
                </ul>
            {% endif %}

            <div x-tab-target x-tab-group="user-settings-tabs" x-tab-id="profile">
                <h5>{{ 'Dein Profil'|trans({},'soul') }}</h5>
                <div class="row">
                    <div class="padded cell rw-3 rw-md-4 rw-sm-12">
                        <div class="note note-lightest">
                            <label for="user_displayname">{{ 'Dein Spielername'|trans({}, 'soul') }}</label>
                        </div>
                    </div>
                    <div class="padded cell rw-9 rw-md-8 rw-sm-12">
                        <input {% if app.user|restricted(constant('App\\Entity\\AccountRestriction::RestrictionProfileDisplayName')) or (app.user.eternalID is not null and not app.user.noAutomaticNameManagement) or next_name_change_days > 0 %}disabled{% endif %} id="user_displayname" type="text" value="{% if app.user.displayName is not null %}{{ app.user.displayName }}{% else %}{{ app.user.name }}{% endif %}" />
                    </div>
                    {% if (app.user.eternalID is null or app.user.noAutomaticNameManagement) and app.user.displayName is not null and app.user.displayName != app.user.username %}
                        <div class="padded cell ro-3 rw-9 ro-md-4 rw-md-8 ro-sm-0 rw-sm-12">
                            <div  class="note warning-box">
                                {{ 'Um dich einzuloggen, musst du nach wie vor deinen <b>ursprünglichen Namen</b> verwenden: <i>{name}</i>.'|trans({name: app.user.username},'login')|raw }}
                            </div>
                        </div>
                    {% endif %}
                    {% if not app.user|restricted(constant('App\\Entity\\AccountRestriction::RestrictionProfileDisplayName')) and app.user.eternalID is null and next_name_change_days > 0 %}
                        <div class="padded cell rw-9 ro-3 rw-md-8 ro-md-4 rw-sm-12 ro-sm-0 small">{{ 'Du kannst deinen Spielernamen erst in {days} Tagen erneut ändern.'|trans({days: next_name_change_days}, 'soul') }}</div>
                    {% endif %}
                    <div id="name-warning-box" class="padded cell ro-3 rw-9 ro-md-4 rw-md-8 ro-sm-0 rw-sm-12 {% if app.user.eternalID is null %}hidden{% endif %}">
                        <div  class="note warning-box">
                            {% if app.user.eternalID is null or app.user.noAutomaticNameManagement %}
                                {{ 'WARNUNG: Du kannst deinen Spielernamen nicht jederzeit ändern, wähle ihn also weiße, denn du wirst ihn für mehrere Monate behalten. Um anderen Spielern zu helfen dich zu finden wird der Verlauf deiner Spielernamen in deinem Profil angezeigt.'|trans({}, 'soul') }}
                            {% else %}
                                {{ 'Du kannst deinen Spielernamen nicht ändern, weil du einen zugehörigen Eternal Twin Account hast. Du musst zu deinem Eternal Twin-Konto gehen, um deinen Spielernamen zu ändern.'|trans({}, 'soul') }}<br/><br/>
                                {{ 'Achtung: Die maximale Länge eines Spielernamens auf MyHordes beträgt 16 Zeichen. Wenn du auf Eternaltwin einen längeren Namen wählst, kannst du diesen nicht auf MyHordes übertragen.'|trans({}, 'soul') }}
                            {% endif %}
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="padded cell rw-3 rw-md-4 rw-sm-12">
                        <div class="note note-lightest">
                            <label>
                                {{ 'Bevorzugte Pronomen'|trans({}, 'global') }}
                                <a class="help-button"><div class="tooltip help">{{ 'Hier kannst du festlegen, welche Personalpronomen das Spiel verwenden soll, wenn es sich auf dich bezieht (z.B. "männlich" für "er", "ihn", etc und "weiblich" für "sie", "ihr", etc).<br /><em>Diese Einstellung beeinflusst, wie dir und anderen Spielern bestimmte Texte angezeigt werden, wenn die Option "Neue Übersetzungen verwenden" aktiv ist.</em>.'|trans({},'global')|raw }}</div>{{ 'Hilfe'|trans({},'global') }}</a>
                            </label>
                        </div>
                    </div>
                    <div class="cell rw-9 rw-md-8 rw-sm-12">
                        <div class="row-flex wrap">
                            <div class="padded cell"><label class="small"><input {{ app.user.preferredPronoun == constant('App\\Entity\\User::PRONOUN_MALE') ? 'checked' : '' }} type="radio" name="user_pronoun" value="male" /> {{ 'Männlich'|trans({},'global') }}</label></div>
                            <div class="padded cell"><label class="small"><input {{ app.user.preferredPronoun == constant('App\\Entity\\User::PRONOUN_FEMALE') ? 'checked' : '' }} type="radio" name="user_pronoun" value="female" /> {{ 'Weiblich'|trans({},'global') }}</label></div>
                            <div class="padded cell"><label class="small"><input {{ app.user.preferredPronoun is null or app.user.preferredPronoun == constant('App\\Entity\\User::PRONOUN_NONE') ? 'checked' : '' }} type="radio" name="user_pronoun" value="none" /> {{ 'Keine Präferenz'|trans({},'global') }}</label></div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="padded cell rw-3 rw-md-4 rw-sm-12">
                        <div class="note note-lightest">
                            <label>{{ 'Dein Icon'|trans({}, 'global') }}</label>
                        </div>
                    </div>
                    <div class="padded cell rw-9 rw-md-8 rw-sm-12">
                        <input  id="user_icon" type="hidden" value="{% if app.user.activeIcon is null %}-1{% else %}{{ app.user.activeIcon.id }}{% endif %}">
                        {% if app.user.activeIcon is not null %}
                            {% if app.user.activeIcon.prototype %}
                                <img id="user_current_icon" alt="" src="{{ asset('build/images/icons/title/' ~ app.user.activeIcon.prototype.icon ~ '.gif') }}" />
                            {% elseif app.user.activeIcon.customIcon is not null %}
                                <img id="user_current_icon" alt="" src="{{ url('app_web_customicon', {uid: app.user.id, aid: app.user.activeIcon.id, name: app.user.activeIcon.customIconName, ext: app.user.activeIcon.customIconFormat}) }}" />
                            {% endif %}
                        {% else %}
                            <img id="user_current_icon" alt="" src="" style="display: none" />
                        {% endif %}
                        <span id="show_icon_sel" class="pointer small"><img alt="" src="{{ asset('build/images/forum/edit.png') }}"><div class="tooltip help">{{ 'Auswählen'|trans({},'global')|raw }}</div></span>
                        <div id="icon_sel" style="display: none">
                            {% set has_icon = false %}
                            {% for award in app.user.awards %}
                                {% if award.prototype is not null and award.prototype.icon is not null %}
                                    {% set has_icon = true %}
                                    <img {% if app.user|restricted(constant('App\\Entity\\AccountRestriction::RestrictionProfileTitle')) and app.user.activeIcon != award %}disabled{% endif %} class="pointer" x-title-icon="{{ award.id }}" alt="" src="{{ asset('build/images/icons/title/' ~ award.prototype.icon ~ '.gif') }}" />
                                {% elseif award.customIcon is not null %}
                                    {% set has_icon = true %}
                                    <img {% if app.user|restricted(constant('App\\Entity\\AccountRestriction::RestrictionProfileTitle')) and app.user.activeIcon != award %}disabled{% endif %} class="pointer" x-title-icon="{{ award.id }}" alt="" src="{{ url('app_web_customicon', {uid: app.user.id, aid: award.id, name: award.customIconName, ext: award.customIconFormat}) }}" />
                                {% endif %}

                            {% endfor %}
                            {% if has_icon %}
                                <span x-title-icon="-1" class="small pointer">[{{ 'Kein Icon'|trans({},'soul') }}]</span>
                            {% else %}<span class="small bold">{{ 'Du hast noch kein Icon freigeschaltet!'|trans({},'soul') }}</span>{% endif %}
                            <br /><span id="hide_icon_sel" class="pointer small"><img alt="" src="{{ asset('build/images/icons/small_remove.gif') }}"><div class="tooltip help">{{ 'Abbrechen'|trans({},'global')|raw }}</div></span>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="padded cell rw-3 rw-md-4 rw-sm-12">
                        <div class="note note-lightest">
                            <label>{{ 'Deine Flagge'|trans({}, 'soul') }}</label>
                        </div>
                    </div>
                    <div class="padded cell rw-9 rw-md-8 rw-sm-12">
                        <div class="row-flex v-center">
                            <input  id="user_flag" type="hidden" value="{% if app.user.flag is null %}{% else %}{{ app.user.flag }}{% endif %}">
                            {% if app.user.flag is not null %}
                                <div class="user-flag" id="user_current_flag"><img alt="{{ app.user.flag }}" src="{{ asset('build/images/lang/any/' ~ app.user.flag ~ '.svg' ) }}"/></div>
                            {% else %}
                                <div class="user-flag hidden" id="user_current_flag"><img alt="" src=""/></div>
                            {% endif %}
                            <span id="show_flag_sel" class="pointer small"><img alt="" src="{{ asset('build/images/forum/edit.png') }}"><div class="tooltip help">{{ 'Auswählen'|trans({},'global')|raw }}</div></span>
                        </div>
                        <div id="flag_sel" class="row-flex wrap v-center gap-small space" style="display: none; margin-top: 5px;">
                            {% for flag in flags %}
                                <div class="user-flag cell pointer" id="user_current_flag" data-flag="{{ flag }}"><img alt="{{ flag }}" src="{{ asset('build/images/lang/any/' ~ flag ~ '.svg' ) }}"/></div>
                            {% endfor %}
                            <span data-flag="" class="small pointer">[{{ 'Spracheinstellung verwenden'|trans({},'soul') }}]</span>
                            <br /><span id="hide_flag_sel" class="pointer small"><img alt="" src="{{ asset('build/images/icons/small_remove.gif') }}"><div class="tooltip help">{{ 'Abbrechen'|trans({},'global')|raw }}</div></span>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="padded cell rw-3 rw-md-4 rw-sm-12">
                        <div class="note note-lightest">
                            <label for="user_title">{{ 'Dein Titel'|trans({}, 'global') }}</label>
                        </div>
                    </div>
                    <div class="padded cell rw-9 rw-md-8 rw-sm-12">
                        <select id="user_title">
                            <option {% if app.user.activeTitle is null %}selected{% endif %} value="-1">--- {{ 'Kein Titel'|trans({},'soul') }} ---</option>
                            {%  set title_translation_key_suffix = '' %}
                            {%  if app.user.preferredPronounTitle == constant('App\\Entity\\User::PRONOUN_FEMALE') %}
                                {%  set title_translation_key_suffix = '_f'  %}
                            {% endif %}
                            {% for id,list in app.user.awards.values|group_titles %}

                                {% set has_title = false %}
                                {% for award in list %}
                                    {% if award.customTitle is not null or (award.prototype is not null and award.prototype.title is not null) %}
                                        {% set has_title = true %}
                                    {% endif %}
                                {% endfor %}

                                {% if has_title %}
                                    <optgroup
                                            {% if id == 'custom' %}
                                                label="{{ 'Einzigartige Errungenschaften'|trans({},'game') }}"
                                            {% elseif id == 'single' %}
                                                label="{{ 'Besondere Errungenschaften'|trans({},'game') }}"
                                            {% else %}
                                                label="{{ list[0].prototype.associatedPicto.label|trans({}, 'game')|raw|trim }}"
                                            {% endif %}
                                    >
                                        {% for award in list %}
                                            {% if award.customTitle is not null %}
                                                <option {% if app.user|restricted(constant('App\\Entity\\AccountRestriction::RestrictionProfileTitle')) and app.user.activeTitle != award %}disabled{% endif %} {% if app.user.activeTitle == award %}selected{% endif %} value="{{ award.id }}">{{ award.customTitle }}</option>
                                            {% elseif award.prototype is not null and award.prototype.title is not null %}
                                                <option {{ {
                                                        'data-name-default': (award.prototype.title~title_translation_key_suffix)|trans({},'game'),
                                                        'data-name-lde': (award.prototype.title~title_translation_key_suffix)|trans({},'game','de'),
                                                        'data-name-len': (award.prototype.title~title_translation_key_suffix)|trans({},'game','en'),
                                                        'data-name-lfr': (award.prototype.title~title_translation_key_suffix)|trans({},'game','fr'),
                                                        'data-name-les': (award.prototype.title~title_translation_key_suffix)|trans({},'game','es'),
                                                }|attributes }} {% if app.user|restricted(constant('App\\Entity\\AccountRestriction::RestrictionProfileTitle')) and app.user.activeTitle != award %}disabled{% endif %} {% if app.user.activeTitle == award %}selected{% endif %} value="{{ award.id }}">
                                                    {{ award|translated_title(app.user,app.user) }}
                                                </option>
                                            {% endif %}
                                        {% endfor %}
                                    </optgroup>
                                {% endif %}

                            {% endfor %}
                        </select>
                    </div>
                </div>
                <div class="row">
                    <div class="padded cell rw-3 rw-md-4 rw-sm-12">
                        <div class="note note-lightest">
                            <label>
                                {{ 'Bevorzugte Pronomen (Titel)'|trans({}, 'global')}}
                                <a class="help-button"><div class="tooltip help">{{ 'Das Geschlecht deines Titels.'|trans({},'global')|raw }}</div>{{ 'Hilfe'|trans({},'global') }}</a>
                            </label>
                        </div>
                    </div>
                    <div class="cell rw-9 rw-md-8 rw-sm-12">
                        <div class="row-flex wrap">
                            <div class="padded cell"><label class="small"><input {{ app.user.preferredPronounTitle == constant('App\\Entity\\User::PRONOUN_MALE') ? 'checked' : '' }} type="radio" name="user_pronoun_title" value="male" /> {{ 'Männlich'|trans({},'global') }}</label></div>
                            <div class="padded cell"><label class="small"><input {{ app.user.preferredPronounTitle == constant('App\\Entity\\User::PRONOUN_FEMALE') ? 'checked' : '' }} type="radio" name="user_pronoun_title" value="female" /> {{ 'Weiblich'|trans({},'global') }}</label></div>
                            <div class="padded cell"><label class="small"><input {{ app.user.preferredPronounTitle is null or app.user.preferredPronounTitle == constant('App\\Entity\\User::PRONOUN_NONE') ? 'checked' : '' }} type="radio" name="user_pronoun_title" value="none" /> {{ 'Keine Präferenz'|trans({},'global') }}</label></div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="padded cell rw-3 rw-md-4 rw-sm-12">
                        <div class="note note-lightest">
                            <label for="user_title_lang">{{ 'Andere Spieler sehen deinen Titel in ...'|trans({}, 'soul') }}</label>
                        </div>
                    </div>
                    <div class="padded cell rw-9 rw-md-8 rw-sm-12">
                        <select id="user_title_lang">
                            <option {% if app.user.setting( constant("\\App\\Enum\\UserSetting::TitleLanguage") ) == '_them' %}selected{% endif%} value="_them">{{ 'ihrer eigenen Sprache'|trans({},'soul') }}</option>
                            <option {% if app.user.setting( constant("\\App\\Enum\\UserSetting::TitleLanguage") ) == '_me' %}selected{% endif%} value="_me">{{ 'meiner Sprache'|trans({},'soul') }}</option>
                            <option {% if app.user.setting( constant("\\App\\Enum\\UserSetting::TitleLanguage") ) == 'de' %}selected{% endif%} value="de">{{ 'Deutsch'|trans({},'global') }}</option>
                            <option {% if app.user.setting( constant("\\App\\Enum\\UserSetting::TitleLanguage") ) == 'en' %}selected{% endif%} value="en">{{ 'Englisch'|trans({},'global') }}</option>
                            <option {% if app.user.setting( constant("\\App\\Enum\\UserSetting::TitleLanguage") ) == 'es' %}selected{% endif%} value="es">{{ 'Spanisch'|trans({},'global') }}</option>
                            <option {% if app.user.setting( constant("\\App\\Enum\\UserSetting::TitleLanguage") ) == 'fr' %}selected{% endif%} value="fr">{{ 'Französisch'|trans({},'global') }}</option>
                        </select>
                    </div>
                </div>
                <div class="row">
                    <div class="padded cell rw-3 rw-md-4 rw-sm-12">
                        <div class="note note-lightest">
                            <label for="user_desc">{{ 'Deine Beschreibung'|trans({}, 'global') }}</label>
                        </div>
                    </div>
                    <div class="padded cell rw-9 rw-md-8 rw-sm-12">
                        <textarea id="user_desc" style="min-height: 100px;"></textarea>
                    </div>
                </div>
                <div class="row">
                    <div class="padded cell ro-3 rw-9 ro-md-4 rw-md-8 ro-sm-0 rw-sm-12">
                        <button id="save_profile_header">{{ 'Speichern'|trans({},'global') }}</button>
                    </div>
                </div>

                {% if app.user|restricted(constant('App\\Entity\\AccountRestriction::RestrictionGameplayLang')) %}
                    <h5>
                    {{ 'Dein Team'|trans({},'soul') }}
                    {{ help_btn('Damit das Ranking am Ende einer Season fair bleibt, musst du dich einer der existierenden Gemeinschaften zuordnen. Die Anzahl der Städte, die du pro Season mit einer anderen als deiner gewählten Gemeinschaft spielen kannst, ist begrenzt. Solange du dieses Limit noch nicht erreicht hast, kannst du deine Gemeinschaft jederzeit wechseln.'|trans({},'soul')) }}
                </h5>
                    <div class="row">
                    <div class="padded cell rw-3 rw-md-4 rw-sm-12">
                        <div class="note note-lightest">
                            <label>{{ 'Aktuelles Team'|trans({}, 'soul') }}</label>
                        </div>
                    </div>
                    <div class="padded cell rw-9 rw-md-8 rw-sm-12">
                        <div class="row-flex v-center">
                            <input id="user_team" type="hidden" value="{% if app.user.team is null %}{% else %}{{ app.user.team }}{% endif %}">
                            {% if app.user.team is not null %}
                                <img id="user_current_team" class="pointer" alt="{{ app.user.team }}" src="{{ asset('build/images/lang/' ~ app.user.team ~ '.png' ) }}"/>
                            {% else %}
                                <img id="user_current_team" alt="" src="" class="hidden pointer"/>
                            {% endif %}
                            {% if app.user.team is null or  not app.user|restricted(constant('App\\Entity\\AccountRestriction::RestrictionGameplayLang')) %}
                                <span id="show_team_sel" class="pointer small"><img alt="" src="{{ asset('build/images/forum/edit.png') }}"><div class="tooltip help">{{ 'Auswählen'|trans({},'global')|raw }}</div></span>
                            {% endif %}
                        </div>
                        <div id="team_sel" class="row-flex wrap v-center gap-small space" style="display: none; margin-top: 5px;">
                            {% for flag in langs %}
                                {% if flag['code'] != 'ach' %}
                                    <img alt="{{ flag['label']|trans({},'global') }}" title="{{ flag['label']|trans({},'global') }}" src="{{ asset('build/images/lang/' ~ flag['code'] ~ '.png' ) }}" data-team="{{ flag['code'] }}" class="pointer"/>
                                {% endif %}
                            {% endfor %}
                            <span id="hide_team_sel" class="pointer small"><img alt="" src="{{ asset('build/images/icons/small_remove.gif') }}"><div class="tooltip help">{{ 'Abbrechen'|trans({},'global')|raw }}</div></span>
                        </div>
                    </div>
                </div>
                    {# {% if app.user.team %}
                    <div class="row">
                        <div class="padded cell rw-3 rw-md-4 rw-sm-12">
                            <div class="note note-lightest">
                                <label>{{ 'Städte in meinem Team'|trans({}, 'soul') }}</label>
                            </div>
                        </div>
                        <div class="padded cell rw-1 rw-md-2 rw-sm-4">
                            <i class="small"><b>{{ team_tickets_in }}</b></i>
                        </div>
                        {% if team_tickets_limit >= 0 %}
                            <div class="padded cell rw-8 rw-md-6 rw-sm-8">
                                {% if team_tickets_in < team_tickets_limit %}
                                    <div class="note green-note no-margin">{{ 'Du kannst dein Team aktuell wechseln, wenn du möchtest.'|trans({},'soul') }}</div>
                                {% else %}
                                    <div class="note note-critical no-margin">{{ 'Du hast in dieser Saison bereits zu viele Städte für dein Team gespielt, um dein Team noch wechseln zu können.'|trans({},'soul') }}</div>
                                {% endif %}
                            </div>
                        {% endif %}
                    </div>
                    <div class="row">
                        <div class="padded cell rw-3 rw-md-4 rw-sm-12">
                            <div class="note note-lightest">
                                <label>{{ 'Städte in anderen Teams'|trans({}, 'soul') }}</label>
                            </div>
                        </div>
                        <div class="padded cell rw-1 rw-md-2 rw-sm-4">
                            <i class="small">
                                {{ team_tickets_out }}
                                {% if team_tickets_limit >= 0 %}
                                    / <b>{{ team_tickets_limit }}</b>
                                {% endif %}
                            </i>
                        </div>
                        {% if team_tickets_limit >= 0 %}
                            <div class="padded cell rw-8 rw-md-6 rw-sm-8">
                                {% if team_tickets_out < team_tickets_limit %}
                                    <div class="note green-note no-margin">{{ 'Du kannst aktuell weiterhin Städte eines anderen Teams betreten.'|trans({},'soul') }}</div>
                                {% else %}
                                    <div class="note note-critical no-margin">{{ 'Du hast in dieser Saison bereits zu viele Städte von anderen Teams gespielt. Bis zum Ende der Saison kannst du nur noch Städte deines eigenen Teams betreten.'|trans({},'soul') }}</div>
                                {% endif %}
                            </div>
                        {% endif %}
                    </div>
                {% else %}
                    <div class="row">
                        <div class="padded cell rw-3 rw-md-4 rw-sm-12">
                            <div class="note note-lightest">
                                <label>{{ 'Bereits gespielte Städte'|trans({}, 'soul') }}</label>
                            </div>
                        </div>
                        <div class="padded cell rw-1 rw-md-2 rw-sm-4">
                            <i class="small">
                                {{ team_tickets_out }}
                                {% if team_tickets_limit >= 0 %}
                                    / <b>{{ team_tickets_limit }}</b>
                                {% endif %}
                            </i>
                        </div>
                        <div class="padded cell rw-8 rw-md-6 rw-sm-8">
                            {% if team_tickets_out < team_tickets_limit %}
                                <div class="note green-note no-margin">{{ 'Du kannst aktuell weiterhin Städte betreten, ohne ein Team wählen zu müssen.'|trans({},'soul') }}</div>
                            {% else %}
                                <div class="note note-critical no-margin">{{ 'Bevor du weitere Städte betreten kannst, musst du dich einem Team anschließen.'|trans({},'soul') }}</div>
                            {% endif %}
                        </div>
                    </div>
                {% endif %} #}
                    <div class="row">
                        <div class="padded cell ro-3 rw-9 ro-md-4 rw-md-8 ro-sm-0 rw-sm-12">
                            <button id="save_team" class="hidden">{{ 'Speichern'|trans({},'global') }}</button>
                        </div>
                    </div>
                {% endif %}

                <h5>
                    {{ 'Dein Avatar'|trans({},'soul') }}
                    {{ help_btn(
                        'Die maximale Größe der Bilddatei, die du für deinen Avatar hochladen kannst, beträgt <b>{size}</b>.'|trans({size: avatar_max_size[0]},'soul') ~ '<br />' ~
                        'Nach dem Upload wird der Server dein Bild möglicherweise komprimieren (z.B. indem die Größe reduziert oder Animationsframe optimiert werden).'|trans({},'soul') ~ '<br />' ~
                        'Der Server muss in der Lage sein, dein Bild auf höchstens <b>{size}</b> zu komprimieren - andernfalls kann es nicht gespeichert werden.'|trans({size: avatar_max_size[1]},'soul')  ~ '<br /><br />' ~
                        'Wenn du ein animiertes Bild mit einer Auflösung größer als 200×200 Pixel hochlädst, darf dieses aus nicht mehr als 256 '|trans({size: avatar_max_size[1]},'soul')  ~ '<br /><br />' ~
                        'Die folgenden Bildformate werden unterstützt:'|trans({},'soul') ~ ' <b>JPEG</b>, <b>GIF</b>, <b>BMP</b>, <b>PNG</b>, <b>WEBP</b>, <b>AVIF</b>'
                    ) }}
                </h5>
                <hordes-avatar-creator data-max-size="{{ avatar_max_size[2] }}"></hordes-avatar-creator>
            </div>

            <div x-tab-target x-tab-group="user-settings-tabs" x-tab-id="security">
                    <h5>{{ 'Login und Sicherheit'|trans({},'soul') }}</h5>
                    <div class="row">
                        <div class="cell padded rw-4 rw-sm-12">
                            <div class="note note-lightest"><label for="app_mail">{% trans from 'soul' %}E-Mail-Adresse{% endtrans %}</label></div>
                        </div>
                        <div class="cell padded rw-8 rw-sm-12">
                            <input id="app_mail" type="text" disabled value="{{ app.user.email }}{% if app.user.pendingEmail is not null %} ({{ app.user.pendingEmail }}){% endif %}" />
                        </div>
                    </div>
                    {% if app.user.pendingEmail is null %}
                        <div class="row">
                            <div class="cell padded rw-4 rw-sm-12">
                                <div class="note note-lightest">{% trans from 'soul' %}E-Mail-Adresse ändern{% endtrans %}</div>
                            </div>

                            <div class="cell rw-8 rw-sm-12">
                                <div class="row">
                                    <div class="cell padded rw-6"><label><input id="app_email_change_new1" placeholder="{{ 'Neue E-Mail-Adresse'|trans({},'soul') }}" type="email" value="" /></label></div>
                                    <div class="cell padded rw-6"><label><input id="app_email_change_new2" placeholder="{{ 'E-Mail-Adresse wiederholen'|trans({},'soul') }}" type="email" value="" /></label></div>
                                    <div class="cell padded rw-12">
                                        <div class="note warning-box">
                                            {{ 'Du musst deine neue E-Mail Adresse validieren, bevor du sie verwenden kannst.'|trans({}, 'soul') }}
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    {% else %}
                        <div class="row">
                            <div class="cell padded rw-4 rw-sm-12">
                                <div class="note note-lightest">{% trans from 'soul' %}Validierungs-Token{% endtrans %}</div>
                            </div>
                            <div class="cell rw-8 rw-sm-12">
                                <div class="row">
                                    <div class="cell padded rw-12">
                                        <label><input id="email_validation_token" type="text" placeholder="abcdef123456" /></label>
                                    </div>
                                    <div class="cell padded rw-6">
                                        <button id="resend_token">{{ 'Validierung erneut senden'|trans({},'soul') }}</button>
                                    </div>
                                    <div class="cell padded rw-6">
                                        <button id="cancel_token">{{ 'Änderung der E-Mail Adresse abbrechen'|trans({},'soul') }}</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    {% endif %}
                    {% if app.user.password is not null %}
                        <div class="row">
                            <div class="cell padded rw-4 rw-sm-12">
                                <div class="note note-lightest">{% trans from 'soul' %}Passwort ändern{% endtrans %}</div>
                            </div>
                            <div class="cell rw-8 rw-sm-12">
                                <div class="row">
                                    <div class="cell padded rw-6"><label><input id="app_pw_change_new1" placeholder="{{ 'Neues Passwort'|trans({},'soul') }}" type="password" value="" /></label></div>
                                    <div class="cell padded rw-6"><label><input id="app_pw_change_new2" placeholder="{{ 'Neues Passwort wiederholen'|trans({},'soul') }}" type="password" value="" /></label></div>
                                    <div class="cell padded rw-6"><label><input id="app_pw_change_old" placeholder="{{ 'Aktuelles Passwort'|trans({},'soul') }}" type="password" value="" /></label></div>
                                </div>
                            </div>
                        </div>
                    {% endif %}
                    {% if app.user.password is not null or app.user.pendingEmail is null %}
                        <div class="row">
                            <div class="padded cell rw-8 ro-4 rw-sm-12 ro-sm-0">
                                <button id="acc_ch_details">{{ 'Account-Infos aktualisieren'|trans({},'soul') }}</button>
                            </div>
                        </div>
                    {% endif %}
                    <br />
                    {% if app.user.password is null %}
                        <div class="row">
                            <div class="cell padded rw-4 rw-sm-12">
                                <div class="note note-lightest">{{ 'Passwort-Login'|trans({},'soul') }}</div>
                            </div>
                            <div class="padded cell rw-8 rw-sm-12">
                                <button data-fetch="{{ path('rest_user_security_add_local_login') }}"
                                        data-fetch-method="post"
                                        data-fetch-load="{{ path('soul_settings') }}"
                                        data-fetch-confirm="{{ 'Bestätigen?'|trans({},'global') }}"
                                        data-fetch-message="message"
                                >{{ 'Passwort-Login aktivieren'|trans({},'soul') }}</button>
                                <p class="small">{{ 'Wenn du möchtest, kannst du dich zusätzlich auch direkt via MyHordes einloggen. Wenn du diese Option aktivierst, schicken wir dir ein Passwort zum Einloggen an deine E-Mail Adresse.'|trans({},'soul') }}</p>
                            </div>
                        </div>
                    {% endif %}
                    <div class="row">
                        <div class="cell padded rw-4 rw-sm-12">
                            <div class="note note-lightest">{% trans from 'soul' %}Überall ausloggen{% endtrans %}</div>
                        </div>
                        <div class="cell padded rw-8 rw-sm-12">
                            <button id="acc_unremember_me">{{ 'Auf allen Browsern & Geräten abmelden'|trans({},'soul') }}</button>
                            <p class="small">{% trans from 'soul' %}Hiermit kannst du dich von allen Geräten und Browsern abmelden, auf denen du aktuell eingeloggt bist. Die "Login merken" Funktion wird hierdurch ebenfalls auf den betroffenen Geräten deaktiviert.{% endtrans %}</p>
                            {% if is_granted('ROLE_ETERNAL') %}
                                <div class="note note-warning">{{ 'Denke daran, dich ebenfalls aus deinem EternalTwin Account auszuloggen!'|trans({},'soul') }}</div>
                            {% endif %}
                        </div>
                    </div>

                    <h5>{{ 'Account löschen'|trans({},'soul') }}</h5>
                    {% if app.user.password is null %}
                        <div class="note note-warning">{{ 'Aus Sicherheitsgründen muss dein Account über ein Passwort verfügen, um gelöscht werden zu können. Wenn du deinen Account löschen möchtest, aktiviere bitte zunächst den Passwort-Login.'|trans({},'soul') }}</div>
                    {% else %}
                        <form class="row">
                            <div class="padded cell rw-4">
                                <div class="note note-lightest"><label for="acc_del_input">{{ 'Aktuelles Passwort'|trans({},'login') }}</label></div>
                            </div>
                            <div class="padded cell rw-4"><input id="acc_del_input" name="pw" type="password" /></div>
                            <div class="padded cell rw-4"><button data-fetch="{{ path('rest_user_security_delete_account') }}"
                                                                  data-fetch-method="delete"
                                                                  data-fetch-load="{{ path('soul_settings') }}"
                                                                  data-fetch-confirm="{{ 'Bist du sicher, dass du deinen Account jetzt löschen möchtest? Dieser Vorgang kann nicht rückgängig gemacht werden!'|trans({},'soul') }}"
                                                                  data-fetch-message="message"
                                ><img alt="" src="{{ asset('build/images/icons/small_trash_red.png') }}" /> {{ 'Meinen Account löschen'|trans({},'soul') }}</button></div>
                        </form>
                        <div class="note note-warning">{{ 'Das Löschen deines Accounts geschieht mit einer Verzögerung von 24 - 48 Stunden. Wenn Du dich vor Ablauf dieser Frist erneut einloggst, wird die Löschung abgebrochen. Du kannst nach dem Löschen deines Accounts keinen neuen Account mit der gleichen E-Mail Adresse und/oder dem gleichen Eternaltwin Konto anlegen!'|trans({},'soul') }}</div>

                    {% endif %}

                </div>

            {% if show_importer %}
                <div x-tab-target x-tab-group="user-settings-tabs" x-tab-id="soul-import">
                    <div class="row">
                        <div class="cell rw-6 ro-3 rw-md-8 ro-md-2 rw-sm-12 ro-sm-0">
                            {% if importer_readonly %}
                                <h5>{{ 'Importierte Seelen'|trans({},'soul') }}</h5>
                            {% else %}
                                <h5>{{ 'Seele importieren'|trans({},'soul') }}</h5>
                            {% endif %}
                            <div class="importSoulBanner">
                                <h4>{{ 'Willkommen bei MyHordes!'|trans({},'welcome') }}</h4>
                                <p>
                                    {{ 'Hast du ein Seele bei {hordes}, {dv}, {d2n} oder {zn}?'|trans({
                                        '{hordes}': '<i>Hordes</i>', '{dv}': '<i>Die Verdammten</i>', '{d2n}': '<i>Die2Nite</i>', '{zn}': '<i>Zombinoia</i>'
                                    },'soul')|raw }}
                                    {% if importer_readonly %}
                                        {{ '<b>Wenn du sie in der Vergangenheit importiert hast</b>, kannst du sie dir hier ansehen!'|trans({},'soul')|raw }}
                                    {% else %}
                                        <b>{{ 'Dann musst du nicht von Vorne beginnen!'|trans({},'soul') }}</b> {{ 'Importiere deine Seele und mache dort weiter, wo du aufgehört hast.'|trans({},'soul') }}
                                    {% endif %}
                                </p>
                                <button class="bigbutton" x-ajax-href="{{ url('soul_import') }}">
                                    <img class="float-left" alt="" src="{{ asset('build/images/icons/small_ghost_blue.gif') }}">
                                    {% if importer_readonly %}
                                        <span>{{ 'Importierte Seelen'|trans({},'soul') }}</span>
                                    {% else %}
                                        <span>{{ 'Seele importieren'|trans({},'soul') }}</span>
                                    {% endif %}
                                    <img class="right" alt="" src="{{ asset('build/images/icons/small_ghost_blue.gif') }}">
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            {% endif %}

            <div x-tab-target x-tab-group="user-settings-tabs" x-tab-id="general-settings">
                {% if app.user.language is defined %}
                    {% set preferredLanguage = app.user.language %}
                {% else %}
                    {% set preferredLanguage = 'de' %}
                {% endif %}

                {% if app.user.adminLang is defined and not app.user.adminLang is null %}
                    {% set preferredAdminLanguage = app.user.adminLang %}
                {% else %}
                    {% set preferredAdminLanguage = preferredLanguage %}
                {% endif %}

                <div class="row">
                    <div class="padded cell rw-12">
                        <h5>{{ 'Standardsprache'|trans({},'soul') }}</h5>
                        <div class="language-picker">
                            {% for lang in langs %}
                                <div class="note note-lightest">
                                    <input x-lang-setting {% if preferredLanguage == lang['code'] %}checked{% endif%} value="{{ lang['code'] }}" type="radio" name="setting_preferred_language" id="setting_preferred_language_{{ lang['code'] }}">&nbsp;<label for="setting_preferred_language_{{ lang['code'] }}">{{ lang['label']|trans({}, 'global') }}</label>
                                    {% if lang["tooltip"] != '' and lang['tooltip'] != null %}
                                        <div class="tooltip help">
                                            {{ lang['tooltip']|trans({}, 'global') }}
                                        </div>
                                    {% endif %}
                                </div>
                            {% endfor %}
                        </div>
                    </div>
                </div>
                {% if is_granted("ROLE_CROW") %}
                    <div class="row">
                        <div class="padded cell rw-12">
                            <h5>{{ 'Sprache der Admin-Oberfläche'|trans({},'soul') }}</h5>
                            <div class="language-picker">
                                {% for lang in langs %}
                                    <div class="note note-lightest">
                                        <input x-setting {% if preferredAdminLanguage == lang['code'] %}checked{% endif%} value="{{ lang['code'] }}" type="radio" name="admin_setting_preferred_language" id="admin_setting_preferred_language_{{ lang['code'] }}">&nbsp;<label for="admin_setting_preferred_language_{{ lang['code'] }}">{{ lang['label']|trans({}, 'global') }}</label>
                                        {% if lang["tooltip"] != '' and lang['tooltip'] != null %}
                                            <div class="tooltip help">
                                                {{ lang['tooltip']|trans({}, 'global') }}
                                            </div>
                                        {% endif %}
                                    </div>
                                {% endfor %}
                            </div>
                        </div>
                    </div>
                {% endif %}
                <div class="row">
                    <div class="cell rw-12">
                        <h5>{{ 'Benachrichtigungen'|trans({},'soul') }}</h5>
                        <div class="row">
                            <div class="padded cell rw-12">
                                <div class="note note-lightest">
                                    <input x-setting {% if not app.user.noAutoFollowThreads %}checked{% endif%} type="checkbox" id="setting_auto_follow">&nbsp;<label for="setting_auto_follow">{{'Neuen Threads automatisch abonnieren'|trans({}, 'soul')}}</label>
                                    {{help_btn("Ist diese Option aktiviert, abonnierst du automatisch allen Threads, die du selbst erstellt hast. Du kannst das Abonnement deiner Threads jederzeit manuell beenden."|trans({}, 'soul'))}}
                                </div>
                            </div>
                            <div class="padded cell rw-12">
                                <div class="note note-lightest">
                                    <input x-setting {% if app.user.setting( constant("\\App\\Enum\\UserSetting::NotifyMeOnFriendRequest") ) %}checked{% endif%} type="checkbox" id="setting_notify_on_friend">&nbsp;<label for="setting_notify_on_friend">{{'Benachrichrichtigung erhalten, wenn jemand mich als Freund hinzufügt'|trans({}, 'soul')}}</label>
                                </div>
                            </div>
                            <div class="padded cell rw-12">
                                <div class="note note-lightest">
                                    <label for="setting_notify_on_mention">{{'Benachrichrichtigung erhalten, wenn ich in einem Forenpost markiert werde'|trans({}, 'soul')}}</label>&nbsp;
                                    <select class="small" x-setting id="setting_notify_on_mention">
                                        <option value="0" {% if app.user.setting( constant("\\App\\Enum\\UserSetting::NotifyMeWhenMentioned") ) == 0 %}selected{% endif%}>{{ 'Deaktiviert'|trans({}, 'soul') }}</option>
                                        <option value="1" {% if app.user.setting( constant("\\App\\Enum\\UserSetting::NotifyMeWhenMentioned") ) == 1 %}selected{% endif%}>{{ 'Nur in Stadtforen'|trans({}, 'soul') }}</option>
                                        <option value="3" {% if app.user.setting( constant("\\App\\Enum\\UserSetting::NotifyMeWhenMentioned") ) == 3 %}selected{% endif%}>{{ 'Nur in Weltforen'|trans({}, 'soul') }}</option>
                                        <option value="2" {% if app.user.setting( constant("\\App\\Enum\\UserSetting::NotifyMeWhenMentioned") ) == 2 %}selected{% endif%}>{{ 'In allen Foren'|trans({}, 'soul') }}</option>
                                    </select>
                                    &nbsp;
                                    {{help_btn('Zum Schutz vor Spam wirst du unabhängig von dieser Einstellung keine Benachrichtigung erhalten, wenn in einem Post mehr als 5 Spieler (10 in Stadtforen) markiert sind.'|trans({}, 'soul'))}}
                                </div>
                            </div>
                        </div>

                        <h5>{{ 'Darstellung'|trans({},'soul') }}</h5>
                        <div class="row">
                            <div class="padded cell rw-12">
                                <div class="note note-lightest">
                                    <input x-setting {% if app.user.preferSmallAvatars %}checked{% endif%} type="checkbox" id="setting_prefer_classic_avatars">&nbsp;<label for="setting_prefer_classic_avatars">{{ 'Bevorzugt komprimierte Profilbilder anzeigen'|trans({}, 'soul') }}</label>
                                </div>
                            </div>
                            <div class="padded cell rw-12">
                                <div class="note note-lightest">
                                    <input x-setting {% if app.user.disableFx %}checked{% endif%} type="checkbox" id="setting_disable_fx">&nbsp;<label for="setting_disable_fx">{{ 'Animationen verringern'|trans({}, 'soul') }}</label> <a class="help-button"><div class="tooltip help">{{ 'Mache hier einen Haken, wenn die Landkarte nur sehr langsam geladen wird.<br /><em>Mit dieser Option senkst du die Qualität der Spielkartenanimationen.</em>.'|trans({},'soul')|raw }}</div>{{ 'Hilfe'|trans({},'global') }}</a>
                                </div>
                            </div>
                            <div class="padded cell rw-12">
                                <div class="note note-lightest">
                                    <input x-setting {% if app.user.useICU %}checked{% endif%} type="checkbox" id="setting_use_icu">&nbsp;<label for="setting_use_icu">{{'Neue Übersetzungen verwenden'|trans({}, 'soul')}}</label>
                                    {{help_btn("Mit dem neuen Übersetzungssystem werden Texte akkurater in deiner Sprache dargestellt (zum Beispiel die passende Verwendung von Singular und Plural-Formen). Deaktiviere diese Option, um die originalen Texte aus Die Verdammten zu sehen."|trans({}, 'soul'))}}
                                </div>
                            </div>
                            <div class="padded cell rw-12">
                                <div class="note note-lightest">
                                    <input x-setting {% if app.user.setting( constant("\\App\\Enum\\UserSetting::LimitTownListSize") ) %}checked{% endif%} type="checkbox" id="setting_limit_town_size">&nbsp;<label for="setting_limit_town_size">{{'Standartmäßig nur 10 Städte auf der Seelenseite anzeigen'|trans({}, 'soul')}}</label>
                                </div>
                            </div>
                        </div>

                        <h5>{{ 'Layout'|trans({},'soul') }}</h5>
                        <div class="row">
                            <div class="padded cell rw-12">
                                <div class="note note-lightest">
                                    <input x-setting {% if app.user.classicBankSort %}checked{% endif%} type="checkbox" id="setting_classic_bank_sort">&nbsp;<label for="setting_classic_bank_sort">{{'Gegenstände in der Bank nach Anzahl sortieren'|trans({}, 'soul')}}</label>
                                    {{help_btn("Standartmäßig sortiert MyHordes Gegenstände in der Bank nach ihrem Typ. Aktiviere diese Option, wenn du die Sortierung von DieVerdammten bevorzugst, bei der Gegenstände primär nach ihrer Anzahl sortiert werden."|trans({}, 'soul'))}}
                                </div>
                            </div>
                            <div class="padded cell rw-12">
                                <div class="note note-lightest">
                                    <input x-setting {% if app.user.setting( constant("\\App\\Enum\\UserSetting::ReorderTownLocationButtons") ) %}checked{% endif%} type="checkbox" id="setting_reorder-location-buttons-town">&nbsp;<label for="setting_reorder-location-buttons-town">{{'Orte in der Stadt platzsparend anordnen (mobil)'|trans({}, 'soul')}}</label>
                                    {{help_btn("Verwendet ein alternatives Layout für die verschiedenen Orte in der Stadt (Baustelle, dein Haus, etc) auf mobilen Geräten. Auf Desktops, Laptops oder Tablets mit größerem Display hat diese Einstellung keinen Effekt."|trans({}, 'soul'))}}
                                </div>
                            </div>
                            <div class="padded cell rw-12">
                                <div class="note note-lightest">
                                    <input x-setting {% if app.user.setting( constant("\\App\\Enum\\UserSetting::ReorderActionButtonsBeyond") ) %}checked{% endif%} type="checkbox" id="setting_reorder-action-buttons-beyond">&nbsp;<label for="setting_reorder-action-buttons-beyond">{{'Aktionen in der Außenwelt platzsparend anordnen (mobil)'|trans({}, 'soul')}}</label>
                                    {{help_btn("Verwendet ein alternatives Layout für viele Aktionsschaltflächen in der Außenwelt auf mobilen Geräten. Auf Desktops, Laptops oder Tablets mit größerem Display hat diese Einstellung keinen Effekt. Dieses Layout spart Platz, zeigt aber für einige Schaltflächen nur noch ein Icon und keine Beschriftung mehr an. Diese Einstellung sollte daher nur von erfahrenen Spielern aktiviert werden."|trans({}, 'soul'))}}
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div x-tab-target x-tab-group="user-settings-tabs" x-tab-id="browser-settings">
                <div class="row">
                    <div class="cell rw-12">
                        <h5>{{ 'Browser-Einstellungen'|trans({},'soul') }}</h5>
                        <div class="row">
                            <div class="padded cell rw-12">
                                <div class="help">
                                    {% trans from 'soul' %}
                                        Die folgenden Einstellungen werden in deinem Browser gespeichert und sind damit nur für dein aktuelles Gerät und deinen aktuellen Browser gültig.
                                    {% endtrans %}
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="padded cell rw-12">
                                <div class="note note-lightest">
                                    <input x-browser-setting="notificationAsPopup" type="checkbox" id="setting_browser_notificationStyle">&nbsp;<label for="setting_browser_notificationStyle">{{ 'Benachrichtigungen als Popups anzeigen'|trans({}, 'soul') }}</label>
                                </div>
                            </div>
                            <div class="padded cell rw-12">
                                <div class="note note-lightest">
                                    <input x-browser-setting="usePostBackup" type="checkbox" id="setting_browser_postBackup">&nbsp;<label for="setting_browser_postBackup">{{ 'Texteditor-Inhalte zur Sicherheit zwischenspeichern'|trans({}, 'soul') }}</label>
                                </div>
                            </div>
                            <div class="padded cell rw-12">
                                <div class="note note-lightest">
                                    <input x-browser-setting="advancedPMEditor" type="checkbox" id="setting_browser_advancedPMEditor">&nbsp;<label for="setting_browser_advancedPMEditor">{{ 'Standartmäßig die erweiterte Editor-Ansicht für PNs verwenden'|trans({}, 'soul') }}</label>
                                </div>
                            </div>
                            <div class="padded cell rw-12">
                                <div class="note note-lightest">
                                    <input x-browser-setting="autoParseLinks" type="checkbox" id="setting_browser_autoParseLinks">&nbsp;<label for="setting_browser_autoParseLinks">{{ 'Links in eigenen Posts automatisch klickbar machen'|trans({}, 'soul') }}</label>
                                </div>
                            </div>
                            <div class="padded cell rw-12">
                                <div class="note note-lightest">
                                    <input x-browser-setting="twoTapTooltips" type="checkbox" id="setting_browser_twoTapTooltips">&nbsp;<label for="setting_browser_twoTapTooltips">{{ 'Tooltips auf mobilen Geräten durch antippen anzeigen'|trans({}, 'soul') }}</label>
                                    {{help_btn("Ist diese Einstellung aktiviert, öffnet das erste Antippen eines Objekts dessen Tooltip - erst das zweite Antippen führt die eigentliche Aktion durch. Ist die Einstellung deaktiviert, führt das erste Antippen die Aktion direkt aus - um den Tooptip zu öffnen, muss das Objekt länger gedrückt werden. Dies bezieht sich ausschließlich auf Geräte mit Finger- oder Stifteingabe. Bei Mauseingaben hat diese Einstellung keinen Effekt."|trans({}, 'soul'))}}
                                </div>
                            </div>
                            <div class="padded cell rw-12">
                                <div class="note note-lightest">
                                    <input x-browser-setting="extendConstructions" type="checkbox" id="setting_browser_extendConstructions">&nbsp;<label for="setting_browser_extendConstructions">{{ 'Resourcen für Baustellen immer komplett anzeigen'|trans({}, 'soul') }}</label>
                                    {{help_btn("Für einige Baustellen werden viele verschiedene Arten von Ressourcen benötigt, so dass es schwierig ist, sie alle in einer Zeile anzuzeigen. Diese Option legt fest, ob die Resourcen immer vollständig angezeigt oder individuell ausklappbar sein sollen."|trans({}, 'soul'))}}
                                </div>
                            </div>
                            <div class="padded cell rw-4 rw-md-6 rw-sm-12">
                                <div class="note note-lightest">
                                    <label for="setting_browser_iconZoom">{{ 'Icon-Zoom auf mobilen Geräten'|trans({}, 'soul') }}</label>
                                    {{help_btn("Um Items in deinem Rucksack und der Bank auf einem mobilen Gerät einfacher mit dem Finger auswählen zu können, kannst du deren Größe anpassen. Diese Einstellung betrifft nur mobile Geräte mit einem kleinen Bildschirm, beispielsweise Smartphones."|trans({}, 'soul'))}}
                                </div>
                            </div>
                            <div class="padded cell rw-8 rw-md-6 rw-sm-12">
                                <select id="setting_browser_iconZoom">
                                    <option value="1-00">x1 ({{ 'Zoom deaktiviert'|trans({}, 'soul') }})</option>
                                    <option value="1-25">x1.25</option>
                                    <option value="1-50">x1.5</option>
                                    <option value="1-75">x1.75</option>
                                    <option value="2-00">x2</option>
                                </select>
                            </div>
                        </div>
                        <div class="row">
                            <div class="padded cell rw-4 rw-md-6 rw-sm-12">
                                <div class="note note-lightest">
                                    <label for="setting_browser_forumFontSize">{{ 'Schriftgröße im Forum'|trans({}, 'soul') }}</label>
                                </div>
                            </div>
                            <div class="padded cell rw-8 rw-md-6 rw-sm-12">
                                <select id="setting_browser_forumFontSize">
                                    <option value="twinoid">{{ 'Sehr klein'|trans({}, 'soul') }}</option>
                                    <option value="small">{{ 'Klein'|trans({}, 'soul') }}</option>
                                    <option value="normal">{{ 'Normal'|trans({}, 'soul') }}</option>
                                    <option value="large">{{ 'Gross'|trans({}, 'soul') }}</option>
                                    <option value="very-large">{{ 'Sehr gross'|trans({}, 'soul') }}</option>
                                </select>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div x-tab-target x-tab-group="user-settings-tabs" x-tab-id="expert-settings">
                <h5>{{ 'Externe Anwendungen'|trans({},'soul') }}</h5>
                <div class="row">
                    <div class="cell padded rw-4 rw-sm-12">
                        <div class="note note-lightest"><label for="app_ext">{% trans from 'soul' %}Externe ID für Apps{% endtrans %}</label> <a class="help-button"><div class="tooltip help">{{ 'Diese ID übergibst du der Seite oder dem Programm, dem du einen (Lese-)Zugriff auf deine Spieldaten in "MyHordes" geben möchtest. Das sind Informationen zu deiner Stadt, dem Bürgerverzeichnis, der Weltkarte etc.'|trans({},'global') }}</div>{{ 'Hilfe'|trans({},'global') }}</a></div>
                    </div>
                    <div class="cell padded rw-4 rw-sm-12">
                        <input id="app_ext" type="text" readonly value="{% if app.user.externalId != '' %}{{ app.user.externalId }}{% else %}not set{% endif %}" />
                    </div>
                    <div class="cell padded rw-4 rw-sm-12">
                        <button id="generate-external-id">{{ 'Neue ID generieren'|trans({}, 'soul') }}</button>
                        <button id="delete-external-id">{{ 'ID löschen'|trans({}, 'soul') }}</button>
                        <p class="small">{% trans from 'soul' %}Mit dem Löschen der ID verhinderst Du den Zugriff externer Apps auf Deine Daten.{% endtrans %}</p>
                    </div>
                </div>
                {% if is_granted("ROLE_ADMIN") %}
                    <h5>{{ 'Standardrolle im Forum'|trans({},'soul') }}</h5>
                    <div class="row">
                        <div class="padded cell rw-12">
                            <div class="note note-lightest">
                                <input x-default-role-setting {% if app.user.postAsDefault == "DEV" %}checked{% endif%} type="checkbox" id="setting_default_forum_role">&nbsp;<label for="setting_default_forum_role">{{ 'Standardmäßig als dev posten'|trans({}, 'soul') }}</label>
                            </div>
                        </div>
                    </div>
                {% endif %}
                {% if is_granted("ROLE_CROW") %}
                    <h5>{{ 'Moderationseinstellungen'|trans({}, 'soul') }}</h5>
                    <div class="row">
                        <div class="padded cell rw-12">
                            <div class="note note-lightest">
                                <input x-open-mod-tools-window {% if app.user.openModToolsSameWindow %}checked{% endif%} type="checkbox" id="setting_open_same_window">&nbsp;<label for="setting_open_same_window">{{ 'Moderationslinks im selben Fenster öffnen'|trans({}, 'soul') }}</label>
                            </div>
                        </div>
                    </div>
                {% endif %}
            </div>
        </div>
    </div>
{% endblock %}
{% block js %}
    {{ parent() }}
    <script>

        const confirmConfig = function() {
            $.html.notice('{{ 'Deine Einstellung wurde gespeichert.'|trans({},'soul')|e('js') }}')
        }

        Array.from(document.querySelectorAll('input[x-browser-setting]')).forEach(function(e) {
            switch (e.getAttribute('type')) {
                case 'checkbox':
                    e.checked = $.client.config.get(e.getAttribute('x-browser-setting')).get();
                    e.addEventListener('change', function() {
                        $.client.config.get(e.getAttribute('x-browser-setting')).set(e.checked);
                        confirmConfig();
                    } );
                    break;
                default: return;
            }
        })

        $.html.forEach('#setting_browser_iconZoom', e => e.value = $.client.config.iconZoom.get());
        $.html.addEventListenerAll('#setting_browser_iconZoom', 'change', function(e,elem) {
            const old_classes = document.body.classList;
            old_classes.forEach(c => {
                if (c.substring(0,10) === 'icon-zoom-') document.body.classList.remove(c);
            });

            document.body.classList.add('icon-zoom-' + elem.value);
            $.client.config.iconZoom.set(elem.value);
            confirmConfig();
        });

        $.html.forEach('#setting_browser_forumFontSize', e => e.value = $.client.config.forumFontSize.get());
        $.html.addEventListenerAll('#setting_browser_forumFontSize', 'change', function(e,elem) {
            const old_classes = document.body.classList;
            old_classes.forEach(c => {
                if (c.substring(0,11) === 'forum-font-') document.body.classList.remove(c);
            });

            document.body.classList.add('forum-font-' + elem.value);
            $.client.config.forumFontSize.set(elem.value);
            confirmConfig();
        });

        $.html.addEventListenerAll('#acc_ch_details', 'click', function(e) {
            e.preventDefault();
            let pw_old  = document.getElementById('app_pw_change_old')?.value ?? '';
            let pw_new1 = document.getElementById('app_pw_change_new1')?.value ?? '';
            let pw_new2 = document.getElementById('app_pw_change_new2')?.value ?? '';
            let email_new1 = document.getElementById('app_email_change_new1')?.value ?? '';
            let email_new2 = document.getElementById('app_email_change_new2')?.value ?? '';

            let email_token = '';
            {% if app.user.pendingEmail is not null %}
                email_token = document.getElementById('email_validation_token').value;
            {% endif %}

            if (pw_new1 !== '' && pw_new1 !== pw_new2) {
                $.html.error('{{ 'Die eingegebenen Passwörter stimmen nicht überein.'|trans({},'login')|e('js') }}');
                return;
            }

            if (pw_new1 !== '' && pw_new1.length < 6) {
                $.html.error('{{ 'Dein Passwort muss mindestens { limit } Zeichen umfassen.'|trans({'{{ limit }}': 6},'login')|e('js') }}');
                return;
            }

            if (email_new1 !== '' && email_new1 !== email_new2) {
                $.html.error('{{ 'Die eingegebenen E-Mail Adressen stimmen nicht überein.'|trans({},'login')|e('js') }}');
                return;
            }

            if (email_new1 !== '' && !$.html.validateEmail(email_new1)) {
                $.html.error('{{ 'Die eingegebene E-Mail Adresse ist nicht korrekt.'|trans({},'login')|e('js') }}');
                return;
            }

            $.ajax.easySend( '{{ path('api_soul_change_account_details') }}', {'pw': pw_old, 'pw_new': pw_new1, 'email_new': email_new1, 'email_token': email_token},
                function () {
                    $.ajax.load(null, pw_new1 !== '' ? '{{ path('public_login') }}' : '{{ path('soul_settings') }}', true);
                } )
        });
        {% if app.user.pendingEmail is not null %}
        $.html.addEventListenerAll('#resend_token', 'click', function(e) {
            e.preventDefault();

            $.ajax.easySend( '{{ path('api_soul_resend_token_email') }}', {},
                function () {
                    $.ajax.load(null, '{{ path('soul_settings') }}', true);
                } )
        });

        $.html.addEventListenerAll('#cancel_token', 'click', function(e) {
            e.preventDefault();

            $.ajax.easySend( '{{ path('api_soul_cancel_email_token') }}', {},
                function () {
                    $.ajax.load(null, '{{ path('soul_settings') }}', true);
                } )
        });
        {% endif %}

        $.html.addEventListenerAll('#acc_unremember_me', 'click', function(e) {
            $.ajax.easySend( '{{ path('api_soul_unremember_me') }}', {},
                function () {
                    window.location.reload()
                } )
        });

        $.html.addEventListenerAll('#generate-external-id', 'click', function(e) {
            e.preventDefault();
            $.ajax.easySend( '{{ path('api_soul_settings_generateid') }}', [],
                function () {
                    $.ajax.load(null, '{{ path('soul_settings') }}', true);
                } )
        });
        $.html.addEventListenerAll('#delete-external-id', 'click', function(e) {
            e.preventDefault();
            $.ajax.easySend( '{{ path('api_soul_settings_deleteid') }}', [],
                function () {
                    $.ajax.load(null, '{{ path('soul_settings') }}', true);
                } )
        });

        $.html.addEventListenerAll('[x-setting]', 'change', function(e,elem) {
            $.ajax.easySend( '{{ path('api_soul_common') }}', {
                    sma: document.getElementById('setting_prefer_classic_avatars').checked,
                    disablefx: document.getElementById('setting_disable_fx').checked,
                    useicu: document.getElementById('setting_use_icu').checked,
                    autofollow: document.getElementById('setting_auto_follow').checked,
                    clasort: document.getElementById('setting_classic_bank_sort').checked,
                    town10: document.getElementById('setting_limit_town_size').checked,
                    notify: document.getElementById('setting_notify_on_mention').value,
                    notifyFriend: document.getElementById('setting_notify_on_friend').checked,
                    beyondAltLayout: document.getElementById('setting_reorder-action-buttons-beyond').checked,
                    townAltLayout: document.getElementById('setting_reorder-location-buttons-town').checked,
                    {% if is_granted("ROLE_CROW") %}
                    adminLang: document.querySelector("input[name=admin_setting_preferred_language]:checked").value
                    {% endif %}
                },
                function () {
                    $.ajax.load(null, '{{ path('soul_settings') }}', true);
                } )
        });
        $.html.addEventListenerAll('[x-lang-setting]', 'change', function(e,elem) {
            $.ajax.easySend( '{{ path('api_soul_set_language') }}', {
                lang: document.querySelector("input[name=setting_preferred_language]:checked").value
                },
                function () {
                    window.location.href = '{{ url('soul_settings') }}';
                } )
        });

        {% if is_granted("ROLE_ADMIN") %}
        $.html.addEventListenerAll('[x-default-role-setting]', 'change', function(e,elem) {
            $.ajax.easySend( '{{ path('api_soul_defaultrole') }}', {
                    dev: document.getElementById('setting_default_forum_role').checked
                },
                function () {
                    $.ajax.load(null, '{{ path('soul_settings') }}', true);
                } )
        });
        {% endif %}

        {% if is_granted("ROLE_CROW") %}
        $.html.addEventListenerAll('[x-open-mod-tools-window]', 'change', function(e,elem) {
            $.ajax.easySend( '{{ path('api_soul_mod_tools_window') }}', {
                    same_window: document.getElementById('setting_open_same_window').checked
                },
                function () {
                    $.ajax.load(null, '{{ path('soul_settings') }}', true);
                } )
        });
        {% endif %}

        $.html.addEventListenerAll('#user_displayname', 'input', () => $.html.forEach('#name-warning-box', e => e.classList.remove('hidden')))

        $.html.addEventListenerAll('#user_title_lang', 'change', () => {
            const lang = document.getElementById('user_title_lang').value;
            $.html.forEach( '#user_title option[data-name-default]', e => {
                e.innerText = e.dataset['nameL' + lang] ?? e.dataset['nameDefault'];
            } );
        })

        $.html.addEventListenerAll('#save_profile_header', 'click', () => {
            const title = parseInt(document.getElementById('user_title').value);
            const title_lang = document.getElementById('user_title_lang').value;
            const icon  = parseInt(document.getElementById('user_icon').value);
            const flag  = document.getElementById('user_flag').value;
            const pronounSel = document.querySelector('input[name="user_pronoun"]:checked');
            const pronoun = pronounSel ? pronounSel.value : 'none';
            const pronounTitleSel = document.querySelector('input[name="user_pronoun_title"]:checked');
            const pronounTitle = pronounTitleSel ? pronounTitleSel.value : 'none';

            if (icon >= 0 && title < 0) {
                $.html.error('{{ 'Du kannst kein Icon ohne einen Titel wählen.'|trans({},'soul')|e('js') }}');
                return;
            }

            $.ajax.easySend('{{ path('api_soul_header')|e('js') }}', {
                title, title_lang, icon, flag, pronoun, pronounTitle,
                desc: $.html.twinoParser.parseToString(document.getElementById('user_desc').value, s => [null,s], {autoLinks: $.client.config.autoParseLinks.get()}),
                displayName: document.getElementById('user_displayname').value
            }, () => {
                $.html.notice('{{ 'Deine Einstellung wurde gespeichert.'|trans({},'soul')|e('js') }}');
                $.ajax.load(null, '{{ path('soul_settings')|e('js') }}');
            });
        });

        $.html.addEventListenerAll('#show_icon_sel', 'click', (e,elem) => {
            elem.style.display = 'none';
            document.getElementById('icon_sel').style.display = null;
        });
        $.html.addEventListenerAll('#hide_icon_sel', 'click', () => {
            document.getElementById('show_icon_sel').style.display = null;
            document.getElementById('icon_sel').style.display = 'none';
        });
        $.html.addEventListenerAll('[x-title-icon]', 'click', (e,elem) => {
            const id = parseInt(elem.getAttribute('x-title-icon'));
            let target = document.getElementById('user_current_icon');
            if (id < 0) {
                target.setAttribute('src','');
                target.style.display = 'none';
            } else {
                target.setAttribute('src',elem.getAttribute('src'));
                target.style.display = null;
            }
            document.getElementById('user_icon').value = id;
            document.getElementById('show_icon_sel').style.display = null;
            document.getElementById('icon_sel').style.display = 'none';
        });

        $.html.addEventListenerAll('#show_flag_sel', 'click', (e,elem) => {
            elem.style.display = 'none';
            document.getElementById('flag_sel').style.display = null;
        });
        $.html.addEventListenerAll('#hide_flag_sel', 'click', () => {
            document.getElementById('show_flag_sel').style.display = null;
            document.getElementById('flag_sel').style.display = 'none';
        });
        $.html.addEventListenerAll('[data-flag]', 'click', (e,elem) => {
            const id = elem.dataset.flag;
            let target = document.getElementById('user_current_flag');
            if (id === '') {
                target.firstElementChild.setAttribute('src','');
                target.firstElementChild.setAttribute('alt','');
                target.classList.add('hidden');
            } else {
                target.firstElementChild.setAttribute('src',elem.firstElementChild.getAttribute('src'));
                target.firstElementChild.setAttribute('alt',id);
                target.classList.remove('hidden');
            }
            document.getElementById('user_flag').value = id;
            document.getElementById('show_flag_sel').style.display = null;
            document.getElementById('flag_sel').style.display = 'none';
        });

        $.html.addEventListenerAll('#show_team_sel', 'click', (e,elem) => {
            elem.style.display = 'none';
            document.getElementById('team_sel').style.display = null;
        });
        $.html.addEventListenerAll('#hide_team_sel', 'click', () => {
            document.getElementById('show_team_sel').style.display = null;
            document.getElementById('team_sel').style.display = 'none';
        });
        $.html.addEventListenerAll('[data-team]', 'click', (e,elem) => {
            const id = elem.dataset.team;
            let target = document.getElementById('user_current_team');
            if (id === '') {
                target.setAttribute('src','');
                target.setAttribute('alt','');
                target.classList.add('hidden');
            } else {
                target.setAttribute('src',elem.getAttribute('src'));
                target.setAttribute('alt',id);
                target.classList.remove('hidden');
            }
            document.getElementById('user_team').value = id;
            document.getElementById('show_team_sel').style.display = null;
            document.getElementById('team_sel').style.display = 'none';
            document.getElementById('save_team')?.classList.remove('hidden');
        });

        $.html.addEventListenerAll('#save_team', 'click', () => {
            const team = document.getElementById('user_team').value;

            $.ajax.easySend('{{ path('api_soul_team')|e('js') }}', {
                team
            }, () => {
                $.html.notice('{{ 'Deine Einstellung wurde gespeichert.'|trans({},'soul')|e('js') }}');
                $.ajax.load(null, '{{ path('soul_settings')|e('js') }}');
            });
        });

        document.getElementById('user_desc').value = $.html.twinoParser.parseFrom('{{ user_desc|e('js') }}', $.html.twinoParser.OpModeRaw);
    </script>
{% endblock %}