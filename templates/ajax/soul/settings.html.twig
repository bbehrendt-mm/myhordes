{% extends "ajax/soul/shell.html.twig" %}
{% block title %}{{'Einstellungen'|trans({}, 'game')}}{% endblock %}
{% block soul_content %}
    <div class="row">

        {% if et_ready and app.user.eternalID is null %}
            <div class="cell rw-12 padded">
                <h5>{{ 'Über EternalTwin einloggen'|trans({},'login') }}</h5>
                <div class="eternalMergeBanner">
                    <div class="row">
                        <div class="cell rw-2 padded">
                            <img class="fit" alt="" src="{{ asset('build/images/eternal-twin/icon_large.png') }}">
                        </div>
                        <div class="cell rw-10 padded">
                            <strong>{{ 'MyHordes ist ein stolzer Bestandteil des EternalTwin-Netzwerkes!'|trans({},'soul') }}</strong>
                            {{ 'Um MyHordes auch in Zukunft weiter spielen zu können, musst du deinen alten MyHordes-Account mit einem EternalTwin-Account verknüpfen.'|trans({},'soul') }}
                            {{ 'Deine Seele bleibt bei der Verknüpfung mit EternalTwin selbstverständlich vollständig erhalten.'|trans({},'login') }}
                            <br />
                            <a class="button" target="_self" href="{{ url('gateway-etwin') }}">{{ 'EternalTwin-Account verknüpfen'|trans({},'soul') }}</a>
                        </div>
                    </div>
                </div>

            </div>
        {% endif %}

        <div class="cell rw-12 padded">
            <h5>{{ 'Dein Profil'|trans({},'soul') }}</h5>
            <div class="row">
                <div class="padded cell rw-3 rw-md-4 rw-sm-12">
                    <div class="note note-lightest">
                        <label>{{ 'Dein Icon'|trans({}, 'global') }}</label>
                    </div>
                </div>
                <div class="padded cell rw-9 rw-md-8 rw-sm-12">
                    <input  id="user_icon" type="hidden" value="{% if app.user.activeIcon is null %}-1{% else %}{{ app.user.activeIcon.id }}{% endif %}">
                    {% if app.user.activeIcon is not null %}
                        <img id="user_current_icon" alt="" src="{{ asset('build/images/icons/title/' ~ app.user.activeIcon.prototype.icon ~ '.gif') }}" />
                    {% else %}
                        <img id="user_current_icon" alt="" src="" style="display: none" />
                    {% endif %}
                    <span id="show_icon_sel" class="pointer small"><img alt="" src="{{ asset('build/images/forum/edit.png') }}"><div class="tooltip help">{{ 'Auswählen'|trans({},'global')|raw }}</div></span>
                    <div id="icon_sel" style="display: none">
                        {% set has_icon = false %}
                        {% for award in app.user.awards %}
                            {% if award.prototype is not null and award.prototype.icon is not null %}
                                {% set has_icon = true %}
                                <img {% if app.user|restricted(constant('App\\Entity\\AccountRestriction::RestrictionProfileTitle')) and app.user.activeIcon != award %}disabled{% endif %} class="pointer" x-title-icon="{{ award.id }}" alt="" src="{{ asset('build/images/icons/title/' ~ award.prototype.icon ~ '.gif') }}" />
                            {% endif %}
                        {% endfor %}
                        {% if has_icon %}
                            <span x-title-icon="-1" class="small pointer">[{{ 'Kein Icon'|trans({},'soul') }}]</span>
                        {% else %}<span class="small bold">{{ 'Du hast noch kein Icon freigeschaltet!'|trans({},'soul') }}</span>{% endif %}
                        <br /><span id="hide_icon_sel" class="pointer small"><img alt="" src="{{ asset('build/images/icons/small_remove.gif') }}"><div class="tooltip help">{{ 'Abbrechen'|trans({},'global')|raw }}</div></span>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="padded cell rw-3 rw-md-4 rw-sm-12">
                    <div class="note note-lightest">
                        <label for="user_title">{{ 'Dein Titel'|trans({}, 'global') }}</label>
                    </div>
                </div>
                <div class="padded cell rw-9 rw-md-8 rw-sm-12">
                    <select id="user_title">
                        <option {% if app.user.activeTitle is null %}selected{% endif %} value="-1">--- {{ 'Kein Titel'|trans({},'soul') }} ---</option>
                        {% for award in app.user.awards %}
                            {% if award.prototype is not null and award.prototype.title is not null %}
                                <option {% if app.user|restricted(constant('App\\Entity\\AccountRestriction::RestrictionProfileTitle')) and app.user.activeTitle != award %}disabled{% endif %} {% if app.user.activeTitle == award %}selected{% endif %} value="{{ award.id }}">{{ award.prototype.title|trans({},'game') }}</option>
                            {% endif %}
                        {% endfor %}
                    </select>
                </div>
            </div>
            <div class="row">
                <div class="padded cell rw-3 rw-md-4 rw-sm-12">
                    <div class="note note-lightest">
                        <label for="user_desc">{{ 'Deine Beschreibung'|trans({}, 'global') }}</label>
                    </div>
                </div>
                <div class="padded cell rw-9 rw-md-8 rw-sm-12">
                    <textarea id="user_desc" style="min-height: 100px;"></textarea>
                </div>
            </div>
            <div class="row">
                <div class="padded cell ro-3 rw-9 ro-md-4 rw-md-8 ro-sm-0 rw-sm-12">
                    <button id="save_profile_header">{{ 'Speichern'|trans({},'global') }}</button>
                </div>
            </div>

            <h5>{{ 'Dein Avatar'|trans({},'soul') }}</h5>
            <div class="row">
                <div class="padded cell rw-3 rw-md-4 rw-sm-12">
                    <div class="note note-lightest">
                        <label for="user_title">{{ 'Avatar'|trans({}, 'global') }}</label>
                    </div>
                </div>
                <div class="padded cell rw-9 rw-md-8 rw-sm-12">
                    <div class="row">
                        <div class="padded cell rw-3 rw-lg-4 rw-md-12">
                            {% if app.user.avatar is not null %}
                                <div class="center">
                                    {% if not app.user.avatar.classic %}
                                        <span class="small">{{ 'Normale Anzeige'|trans({},'soul') }}</span><br />
                                    {% endif %}
                                    <div class="avatar no-arma">
                                        <img alt="" src="{{ path('app_web_avatar', {'uid': app.user.id, 'name': app.user.avatar.filename, 'ext': app.user.avatar.format}) }}">
                                    </div>
                                </div>
                            {% else %}
                                <div class="help">
                                    {{ 'Damit andere Spieler dich besser erkennen, kannst du hier ein Profilbild hochladen'|trans({},'soul') }}
                                </div>
                            {% endif %}
                        </div>
                        <div class="padded cell rw-9 rw-lg-8 rw-md-12">
                            {% if app.user.avatar is not null and not app.user.avatar.classic %}
                                <div class="hide-md hide-sm">
                                    <span class="small">{{ 'Komprimierte Anzeige'|trans({},'soul') }}</span><br />
                                    <div class="avatar small no-arma">
                                        <img alt="" src="{{ path('app_web_avatar', {'uid': app.user.id, 'name': app.user.avatar.smallName, 'ext': app.user.avatar.format}) }}">
                                    </div>
                                </div>
                                <div class="hide-desktop hide-lg center">
                                    <span class="small">{{ 'Komprimierte Anzeige'|trans({},'soul') }}</span><br />
                                    <div class="avatar small no-arma">
                                        <img alt="" src="{{ path('app_web_avatar', {'uid': app.user.id, 'name': app.user.avatar.smallName, 'ext': app.user.avatar.format}) }}">
                                    </div>
                                </div>
                                <br />
                            {% endif %}

                            <input class="hidden" type="file" id="avatar_file_select" accept=".gif,.jpg,.jpeg,.jif,.jfif,.png,.webp,.bmp">

                            {% if app.user.avatar is not null %}
                                <label {% if app.user|restricted(constant('App\\Entity\\AccountRestriction::RestrictionProfileAvatar')) %}disabled{% endif %} class="button" for="avatar_file_select">{{ 'Neues Profilbild hochladen'|trans({},'soul') }}</label>
                                <button id="avatar_del">{{ 'Profilbild löschen'|trans({},'soul') }}</button>

                                {% if not app.user.avatar.classic %}
                                    <button {% if app.user|restricted(constant('App\\Entity\\AccountRestriction::RestrictionProfileAvatar')) %}disabled{% endif %} class="hide-mobile" id="avatar_com" x-avatar-com-toggle>{{ 'Komprimierte Anzeige bearbeiten'|trans({},'soul') }}</button>
                                    <div id="avatar_com_edit" class="row hidden hide-mobile">
                                        <div class="padded cell rw-6">
                                            <div class="help">
                                                {% trans from 'soul' %}
                                                    Wähle aus, welcher Teil deines Profilbilds für die komprimierte Darstellung verwendet werden soll.
                                                    Bewege den Ausschnitt mit der Maus und vergrößere oder verkleinere ihn mit dem Mausrad.
                                                {% endtrans %}
                                            </div>
                                        </div>
                                        <div class="padded cell rw-6 center">
                                            <div class="avatar no-arma full">
                                                <div class="crop" id="crop_bar"><div id="crop-bar-inner"></div></div>
                                                <img alt="" src="{{ path('app_web_avatar', {'uid': app.user.id, 'name': app.user.avatar.filename, 'ext': app.user.avatar.format}) }}">
                                            </div>
                                            <div class="right">
                                                <button id="avatar_com_save" class="inline small">{{ 'Speichern'|trans({},'global') }}</button>
                                                <button x-avatar-com-toggle class="inline small">{{ 'Abbrechen'|trans({},'global') }}</button>
                                            </div>
                                        </div>
                                    </div>

                                {% endif %}
                            {% else %}
                                <label {% if app.user|restricted(constant('App\\Entity\\AccountRestriction::RestrictionProfileAvatar')) %}disabled{% endif %} class="button" for="avatar_file_select">{{ 'Profilbild hochladen'|trans({},'soul') }}</label>
                            {% endif %}
                        </div>
                    </div>
                </div>
            </div>

            {% if app.user.language is defined %}
                {% set preferredLanguage = app.user.language %}
            {% else %}
                {% set preferredLanguage = 'de' %}
            {% endif %}

            <div class="row">
                <div class="padded cell rw-12">
                    <h5>{{ 'Standardsprache'|trans({},'soul') }}</h5>
                    <div class="language-picker">
                        <div class="note note-lightest">
                            <input x-lang-setting {% if preferredLanguage == 'de' %}checked{% endif%} value="de" type="radio" name="setting_preferred_language" id="setting_preferred_language_de">&nbsp;<label for="setting_preferred_language_de">{{ 'Deutsch'|trans({}, 'global') }}</label>
                        </div>
                        <div class="note note-lightest">
                            <input x-lang-setting {% if preferredLanguage == 'fr' %}checked{% endif%} value="fr" type="radio" name="setting_preferred_language" id="setting_preferred_language_fr">&nbsp;<label for="setting_preferred_language_fr">{{ 'Französisch'|trans({}, 'global') }}</label>
                        </div>
                        <div class="note note-lightest">
                            <input x-lang-setting {% if preferredLanguage == 'en' %}checked{% endif%} value="en" type="radio" name="setting_preferred_language" id="setting_preferred_language_en">&nbsp;<label for="setting_preferred_language_en">{{ 'Englisch'|trans({}, 'global') }}</label>
                        </div>
                        <div class="note note-lightest">
                            <input x-lang-setting {% if preferredLanguage == 'es' %}checked{% endif%} value="es" type="radio" name="setting_preferred_language" id="setting_preferred_language_es">&nbsp;<label for="setting_preferred_language_es">{{ 'Spanisch'|trans({}, 'global') }}</label>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="cell rw-6 rw-lg-12">
                    <h5>{{ 'Darstellung'|trans({},'soul') }}</h5>
                    <div class="row">
                        <div class="padded cell rw-12">
                            <div class="note note-lightest">
                                <input x-setting {% if app.user.preferSmallAvatars %}checked{% endif%} type="checkbox" id="setting_prefer_classic_avatars">&nbsp;<label for="setting_prefer_classic_avatars">{{ 'Bevorzugt komprimierte Profilbilder anzeigen'|trans({}, 'soul') }}</label>
                            </div>
                        </div>
                        <div class="padded cell rw-12">
                            <div class="note note-lightest">
                                <input x-setting {% if app.user.disableFx %}checked{% endif%} type="checkbox" id="setting_disable_fx">&nbsp;<label for="setting_disable_fx">{{ 'Animationen verringern'|trans({}, 'soul') }}</label> <a class="help-button"><div class="tooltip help">{{ 'Mache hier einen Haken, wenn die Landkarte nur sehr langsam geladen wird.<br /><em>Mit dieser Option senkst du die Qualität der Spielkartenanimationen.</em>.'|trans({},'soul')|raw }}</div>{{ 'Hilfe'|trans({},'global') }}</a>
                            </div>
                        </div>
                    </div>

                    <h5>{{ 'Browser-Einstellungen'|trans({},'soul') }}</h5>
                    <div class="row">
                        <div class="padded cell rw-12">
                            <div class="help">
                                {% trans from 'soul' %}
                                    Die folgenden Einstellungen werden in deinem Browser gespeichert und sind damit nur für dein aktuelles Gerät und deinen aktuellen Browser gültig.
                                {% endtrans %}
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="padded cell rw-12">
                            <div class="note note-lightest">
                                <input x-browser-setting="notificationAsPopup" type="checkbox" id="setting_browser_notificationStyle">&nbsp;<label for="setting_browser_notificationStyle">{{ 'Benachrichtigungen als Popups anzeigen'|trans({}, 'soul') }}</label>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="cell rw-6 rw-lg-12">
                    <div class="importSoulBanner">
                        <h4>{{ 'Willkommen bei MyHordes!'|trans({},'welcome') }}</h4>
                        <p>
                            {{ 'Hast du ein Seele bei %hordes%, %dv%, %d2n% oder %zn%?'|trans({
                                '%hordes%': '<i>Hordes</i>', '%dv%': '<i>Die Verdammten</i>', '%d2n%': '<i>Die2Nite</i>', '%zn%': '<i>Zombinoia</i>'
                            },'soul')|raw }}
                            <b>{{ 'Dann musst du nicht von Vorne beginnen!'|trans({},'soul') }}</b> {{ 'Importiere deine Seele und mache dort weiter, wo du aufgehört hast.'|trans({},'soul') }}
                        </p>
                        <button class="bigbutton" x-ajax-href="{{ url('soul_import') }}">
                            <img class="float-left" alt="" src="{{ asset('build/images/icons/small_ghost_blue.gif') }}">
                            <span>{{ 'Seele importieren'|trans({},'soul') }}</span>
                            <img class="right" alt="" src="{{ asset('build/images/icons/small_ghost_blue.gif') }}">
                        </button>
                    </div>
                </div>
            </div>

            {% if is_granted("ROLE_ADMIN") %}
                <h5>{{ 'Standardrolle im Forum'|trans({},'soul') }}</h5>
                <div class="row">
                    <div class="padded cell rw-12">
                        <div class="note note-lightest">
                            <input x-default-role-setting {% if app.user.postAsDefault == "DEV" %}checked{% endif%} type="checkbox" id="setting_default_forum_role">&nbsp;<label for="setting_default_forum_role">{{ 'Standardmäßig als dev posten'|trans({}, 'soul') }}</label>
                        </div>
                    </div>
                </div>
            {% endif %}

            {% if not is_granted('ROLE_ETERNAL') %}
                <h5>{{ 'Login und Sicherheit'|trans({},'soul') }}</h5>
                <div class="row">
                    <div class="cell padded rw-4 rw-sm-12">
                        <div class="note note-lightest"><label for="app_mail">{% trans from 'soul' %}E-Mail-Adresse{% endtrans %}</label></div>
                    </div>
                    <div class="cell padded rw-8 rw-sm-12">
                        <input id="app_mail" type="text" disabled value="{{ app.user.email }}" />
                    </div>
                </div>
                <div class="row">
                    <div class="cell padded rw-4 rw-sm-12">
                        <div class="note note-lightest">{% trans from 'soul' %}Passwort ändern{% endtrans %}</div>
                    </div>
                    <div class="cell rw-8 rw-sm-12">
                        <div class="row">
                            <div class="cell padded rw-6"><label><input id="app_pw_change_new1" placeholder="{{ 'Neues Passwort'|trans({},'soul') }}" type="password" value="" /></label></div>
                            <div class="cell padded rw-6"><label><input id="app_pw_change_new2" placeholder="{{ 'Neues Passwort wiederholen'|trans({},'soul') }}" type="password" value="" /></label></div>
                            <div class="cell padded rw-6"><label><input id="app_pw_change_old" placeholder="{{ 'Aktuelles Passwort'|trans({},'soul') }}" type="password" value="" /></label></div>
                            <div class="cell padded rw-6"><button id="acc_ch_pw">{{ 'Passwort aktualisieren'|trans({},'soul') }}</button></div>
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="cell padded rw-4 rw-sm-12">
                        <div class="note note-lightest">{% trans from 'soul' %}Überall ausloggen{% endtrans %}</div>
                    </div>
                    <div class="cell padded rw-8 rw-sm-12">
                        <button id="acc_unremember_me">{{ 'Auf allen Browsern & Geräten abmelden'|trans({},'soul') }}</button>
                        <p class="small">{% trans from 'soul' %}Hiermit kannst du dich von allen Geräten und Browsern abmelden, auf denen du aktuell eingeloggt bist. Die "Login merken" Funktion wird hierdurch ebenfalls auf den betroffenen Geräten deaktiviert.{% endtrans %}</p>
                    </div>
                </div>
            {% endif %}

            <h5>{{ 'Externe Anwendungen'|trans({},'soul') }}</h5>
            <div class="row">
                <div class="cell padded rw-4 rw-sm-12">
                    <div class="note note-lightest"><label for="app_ext">{% trans from 'soul' %}Externe ID für Apps{% endtrans %}</label> <a class="help-button"><div class="tooltip help">{{ 'Diese ID übergibst du der Seite oder dem Programm, dem du einen (Lese-)Zugriff auf deine Spieldaten in "MyHordes" geben möchtest. Das sind Informationen zu deiner Stadt, dem Bürgerverzeichnis, der Weltkarte etc.'|trans({},'global') }}</div>{{ 'Hilfe'|trans({},'global') }}</a></div>
                </div>
                <div class="cell padded rw-4 rw-sm-12">
                    <input id="app_ext" type="text" readonly value="{% if app.user.externalId != '' %}{{ app.user.externalId }}{% else %}not set{% endif %}" />
                </div>
                <div class="cell padded rw-4 rw-sm-12">
                    <button id="generate-external-id">{{ 'Neue ID generieren'|trans({}, 'soul') }}</button>
                    <button id="delete-external-id">{{ 'ID löschen'|trans({}, 'soul') }}</button>
                    <p class="small">{% trans from 'soul' %}Mit dem Löschen der ID verhinderst Du den Zugriff externer Apps auf Deine Daten.{% endtrans %}</p>
                </div>
            </div>

            {% if not is_granted('ROLE_ETERNAL') %}
                <h5>{{ 'Account löschen'|trans({},'soul') }}</h5>
                <div class="row">
                    <div class="padded cell rw-4">
                        <div class="note note-lightest"><label for="acc_del_input">{{ 'Aktuelles Passwort'|trans({},'login') }}</label></div>
                    </div>
                    <div class="padded cell rw-4"><input id="acc_del_input" type="password" /></div>
                    <div class="padded cell rw-4"><button id="acc_del_btn"><i class="fa fa-trash"></i> {{ 'Meinen Account löschen'|trans({},'soul') }}</button></div>
                </div>
            {% endif %}

        </div>
    </div>
{% endblock %}
{% block js %}
    {{ parent() }}
    <script>

        const confirmConig = function() {
            $.html.notice('{{ 'Deine Einstellung wurde gespeichert.'|trans({},'soul')|e('js') }}')
        }

        Array.from(document.querySelectorAll('input[x-browser-setting]')).forEach(function(e) {
            switch (e.getAttribute('type')) {
                case 'checkbox':
                    e.checked = $.client.config.get(e.getAttribute('x-browser-setting')).get();
                    e.addEventListener('change', function() {
                        $.client.config.get(e.getAttribute('x-browser-setting')).set(e.checked);
                        confirmConig();
                    } );
                    break;
                default: return;
            }
        })

        $.html.addEventListenerAll('#acc_del_btn', 'click', function(e) {
            e.preventDefault();
            const pw = document.getElementById('acc_del_input').value;
            if (!confirm('{{ 'Bist du sicher, dass du deinen Account jetzt löschen möchtest? Dieser Vorgang kann nicht rückgängig gemacht werden!'|trans({},'soul')|e('js') }}'))
                return;

            $.ajax.easySend( '{{ path('api_soul_delete_account') }}', {'pw': pw},
                function () {
                    alert('{{ 'Du wirst nun ausgeloggt. Dein Account wird in 24-48 Stunden gelöscht. Bis dahin kannst du dich jederzeit erneut einloggen und dadurch die Löschung deines Accounts abbrechen.'|trans({},'soul')|e('js') }}');
                    $.ajax.load(null, '{{ path('public_welcome') }}', true);
                } )
        });


        $.html.addEventListenerAll('#acc_ch_pw', 'click', function(e) {
            e.preventDefault();
            const pw_old = document.getElementById('app_pw_change_old').value;
            const pw_new1 = document.getElementById('app_pw_change_new1').value;
            const pw_new2 = document.getElementById('app_pw_change_new2').value;

            if (pw_new1 !== pw_new2) {
                $.html.error('{{ 'Die eingegebenen Passwörter stimmen nicht überein.'|trans({},'login')|e('js') }}');
                return;
            }

            if (pw_new1.length < 6) {
                $.html.error('{{ 'Dein Passwort muss mindestens {{ limit }} Zeichen umfassen.'|trans({'{{ limit }}': 6},'login')|e('js') }}');
                return;
            }

            $.ajax.easySend( '{{ path('api_soul_change_password') }}', {'pw': pw_old, 'pw_new': pw_new1},
                function () {
                    $.ajax.load(null, '{{ path('public_login') }}', true);
                } )
        });

        $.html.addEventListenerAll('#acc_unremember_me', 'click', function(e) {
            $.ajax.easySend( '{{ path('api_soul_unremember_me') }}', {},
                function () {
                    window.location.reload()
                } )
        });

        $.html.addEventListenerAll('#generate-external-id', 'click', function(e) {
            e.preventDefault();
            $.ajax.easySend( '{{ path('api_soul_settings_generateid') }}', [],
                function () {
                    $.ajax.load(null, '{{ path('soul_settings') }}', true);
                } )
        });
        $.html.addEventListenerAll('#delete-external-id', 'click', function(e) {
            e.preventDefault();
            $.ajax.easySend( '{{ path('api_soul_settings_deleteid') }}', [],
                function () {
                    $.ajax.load(null, '{{ path('soul_settings') }}', true);
                } )
        });

        let del_btn = document.getElementById('avatar_del')
        if (del_btn) del_btn.addEventListener('click', function() {
            if (confirm('{{ 'Bestätigen?'|trans({},'global')|e('js') }}'))
                $.ajax.easySend( '{{ path('api_soul_avatar') }}', {up: 0},
                    function () {
                        $.ajax.load(null, '{{ path('soul_settings') }}', true);
                    } )
        });
        $.html.addEventListenerAll('[x-setting]', 'change', function(e,elem) {
            $.ajax.easySend( '{{ path('api_soul_common') }}', {
                    sma: document.getElementById('setting_prefer_classic_avatars').checked,
                    disablefx: document.getElementById('setting_disable_fx').checked,
                },
                function () {
                    $.ajax.load(null, '{{ path('soul_settings') }}', true);
                } )
        });
        $.html.addEventListenerAll('[x-lang-setting]', 'change', function(e,elem) {
            $.ajax.easySend( '{{ path('api_soul_set_language') }}', {
                lang: document.querySelector("input[name=setting_preferred_language]:checked").value
                },
                function () {
                    window.location.href = '{{ url('soul_settings') }}';
                } )
        });

        {% if is_granted("ROLE_ADMIN") %}
            $.html.addEventListenerAll('[x-default-role-setting]', 'change', function(e,elem) {
                $.ajax.easySend( '{{ path('api_soul_defaultrole') }}', {
                    dev: document.getElementById('setting_default_forum_role').checked
                    },
                    function () {
                        $.ajax.load(null, '{{ path('soul_settings') }}', true);
                    } )
            });
        {% endif %}

        document.getElementById('avatar_file_select').addEventListener('change', function(e) {
            if (e.target.files.length !== 1) {
                $.html.error('{{ 'Bitte wähle nur eine einzige Datei aus.'|trans({},'soul')|e('js') }}');
                return;
            }
            /** @var file File */
            const file = e.target.files[0];
            if (file.size >= 3145728) {
                $.html.error('{{ 'Die Datei ist zu groß.'|trans({},'soul')|e('js') }}');
                return;
            }

            const type_info = file.type.split('/',2);
            if (type_info.length < 2 || type_info[0] !== 'image') {
                $.html.error('{{ 'Dieses Dateiformat wird nicht unterstützt.'|trans({},'soul')|e('js') }}');
                return;
            }

            let reader = new FileReader();
            reader.onload = function(e) {
                $.ajax.easySend( '{{ path('api_soul_avatar') }}', {up: 1, mime: type_info[1], image: btoa(e.target.result)},
                    function () {
                        $.ajax.load(null, '{{ path('soul_settings') }}', true);
                    } )
            };
            reader.readAsBinaryString(file);
        });

        {% if app.user.avatar and not app.user.avatar.classic %}
            $.html.addEventListenerAll('[x-avatar-com-toggle]', 'click', function(e,elem) {
                let controls = document.getElementById('avatar_com_edit');
                let button   = document.getElementById('avatar_com');
                if (controls.classList.contains('hidden')) {
                    controls.classList.remove('hidden')
                    button.classList.add('hidden')
                } else {
                    controls.classList.add('hidden')
                    button.classList.remove('hidden')
                }
            });

            let sc_px = 0, sc_py = 0;
            let sc_dx = Math.min({{ app.user.avatar.x }}, {{ app.user.avatar.y*3 }}), sc_dy = Math.min({{ app.user.avatar.x/3 }}, {{ app.user.avatar.y }});

            $.html.addEventListenerAll('#avatar_com_save', 'click', function(e) {
                e.preventDefault();
                $.ajax.easySend( '{{ path('api_soul_small_avatar') }}', {x: sc_px, y: sc_py, dx: sc_dx, dy: sc_dy},
                    function () {
                        $.ajax.load(null, '{{ path('soul_settings') }}', true);
                    } )
            });

            let dc = document.getElementById('crop_bar');
            if (dc) {
                dc.style.width = sc_dx + 'px';
                dc.style.height  = sc_dy + 'px';
            }

            $.html.addEventListenerAll('#crop_bar', 'wheel', function(e,elem) {
                e.preventDefault();
                e.stopPropagation();
                const d = e.deltaY / Math.abs(e.deltaY);

                sc_dx = Math.max(45, Math.min(sc_dx - d*2, elem.parentElement.clientWidth ));
                sc_dy = sc_dx / 3;
                elem.style.width = sc_dx + 'px';
                elem.style.height  = sc_dy + 'px';

                sc_px = Math.max(0, Math.min(sc_px + d, elem.parentElement.clientWidth - elem.clientWidth ));
                sc_py = Math.max(0, Math.min(sc_py + d/3, elem.parentElement.clientHeight - elem.clientHeight))

                elem.style.left = sc_px + 'px';
                elem.style.top  = sc_py + 'px';
            });

            $.html.addEventListenerAll('#crop_bar', 'mousemove', function(e,elem) {

                if (e.buttons & 1) {
                    e.preventDefault();
                    e.stopPropagation();

                    sc_dx = Math.max(45, Math.min(sc_dx + e.movementX/2, elem.parentElement.clientWidth ))
                    sc_dy = sc_dx / 3;
                    elem.style.width = sc_dx + 'px';
                    elem.style.height  = sc_dy + 'px';

                    sc_px = Math.max(0, Math.min(sc_px - e.movementX/2, elem.parentElement.clientWidth - elem.clientWidth ))
                    sc_py = Math.max(0, Math.min(sc_py - e.movementY/2, elem.parentElement.clientHeight - elem.clientHeight))
                    elem.style.left = sc_px + 'px';
                    elem.style.top  = sc_py + 'px';
                }
            } )

            $.html.addEventListenerAll('#crop_bar>div', 'mousemove', function(e,elem) {

                let cb = elem.parentElement;
                if (e.buttons & 1) {
                    e.preventDefault();
                    e.stopPropagation();

                    sc_px = Math.max(0, Math.min(sc_px + e.movementX, cb.parentElement.clientWidth - cb.clientWidth ))
                    sc_py = Math.max(0, Math.min(sc_py + e.movementY, cb.parentElement.clientHeight - cb.clientHeight))

                    cb.style.left = sc_px + 'px';
                    cb.style.top  = sc_py + 'px';
                }
            } )
        {% endif %}

        $.html.addEventListenerAll('#save_profile_header', 'click', () => {
            $.ajax.easySend('{{ path('api_soul_header')|e('js') }}', {
                title: parseInt(document.getElementById('user_title').value),
                icon: parseInt(document.getElementById('user_icon').value),
                desc: $.html.twinoParser.parseToString(document.getElementById('user_desc').value, s => [null,s])
            }, () => {
                $.html.notice('{{ 'Deine Einstellung wurde gespeichert.'|trans({},'soul')|e('js') }}');
                $.ajax.load(null, '{{ path('soul_settings')|e('js') }}');
            });
        });

        $.html.addEventListenerAll('#show_icon_sel', 'click', (e,elem) => {
            elem.style.display = 'none';
            document.getElementById('icon_sel').style.display = null;
        });
        $.html.addEventListenerAll('#hide_icon_sel', 'click', () => {
            document.getElementById('show_icon_sel').style.display = null;
            document.getElementById('icon_sel').style.display = 'none';
        });
        $.html.addEventListenerAll('[x-title-icon]', 'click', (e,elem) => {
            const id = parseInt(elem.getAttribute('x-title-icon'));
            let target = document.getElementById('user_current_icon');
            if (id < 0) {
                target.setAttribute('src','');
                target.style.display = 'none';
            } else {
                target.setAttribute('src',elem.getAttribute('src'));
                target.style.display = null;
            }
            document.getElementById('user_icon').value = id;
            document.getElementById('show_icon_sel').style.display = null;
            document.getElementById('icon_sel').style.display = 'none';
        });
        document.getElementById('user_desc').value = $.html.twinoParser.parseFrom('{{ user_desc|e('js') }}', $.html.twinoParser.OpModeRaw);
    </script>
{% endblock %}