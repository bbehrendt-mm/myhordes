{% extends "ajax/soul/shell.html.twig" %}
{% block title %}{{ 'Meine Seele'|trans({}, 'game') }}{% endblock %}
{% block soul_content %}
    <div class="row me">
        {% include 'ajax/soul/badges.html.twig' with {badger: app.user} %}
        <div class="cell rw-12 center skills">
            <div class="bar">
                <div class="progresstext"><span class="text">{{ progress }}%</span></div>
                <div class="progressbar left">
                    <img alt="" src="{{ asset('build/images/soul/heroUp_bar.gif') }}" style="width : {{ progress }}%;"/>
                </div>

            </div>
            <div class="rp-context">
                {{ 'Letzter freigeschalteter Heldenvorteil:'|trans({}, 'game') }}
                <strong>{% if latestSkill is not null %}
                        {# @var latestSkill \App\Entity\HeroSkillPrototype #}
                        <img src="{{ asset('build/images/heroskill/' ~ latestSkill.icon ~ '.gif') }}" alt="">
                        {{ latestSkill.title|trans({}, 'game') }} {{ help_btn(latestSkill.description|trans({}, 'game')) }}
                    {% else %}
                        {{ 'Niemand'|trans({}, 'game') }}
                    {% endif %}</strong>
            </div>
            <div>
                <span class="small link"
                      x-ajax-href="{{ path('soul_heroskill') }}">{{ 'Alle freigeschalteten Vorteile anzeigen'|trans({}, 'game') }}</span>
            </div>
        </div>
        <div class="cell rw-5 rw-sm-12 center">
            {% include 'ajax/soul/distinctions.html.twig' with {pictos: pictos, points: points, user: app.user} %}
            <br />
            <a href="#" class="small" x-ajax-href="{{ path('soul_pictos_all', {id: app.user.id}) }}" >{{ 'Details'|trans({},'soul') }}</a>
        </div>
        <div class="cell padded rw-7 rw-sm-12">

            {% if app.user|restricted %}

                {% macro restriction_info(mask,name,desc) %}
                    {% if app.user|restricted(mask) %}
                        {% set end_date = app.user|restricted_until(mask) %}
                        {% if end_date is null %}
                            <li>{{ name }} {{ help_btn(desc ~ '<p><br/><i class="small">' ~ 'Dauerhafte Beschränkung'|trans({},'soul') ~ '</i></p>') }}</li>
                        {% else %}
                            <li>{{ name }} {{ help_btn(desc ~ '<p><br/><i class="small">' ~ 'Ende der Beschränkung: {date}'|trans({'{date}': '<br/>' ~ end_date|format_datetime('medium', 'short') },'soul') ~ '</i></p>') }}</li>
                        {% endif %}
                    {% endif %}
                {% endmacro %}

                <div class="note note-warning">
                    <b>{{ 'Dein Account ist eingeschränkt!'|trans({},'soul') }}</b><br/>
                    {{ 'Einschränkungen werden von Moderatoren aufgrund von Fehlverhalten auferlegt. Im Folgenden siehst du eine Liste mit Funktionen, die dir aktuell nicht zur Verfügung stehen.'|trans({},'soul') }}
                    <ul>
                        {{ _self.restriction_info(constant('App\\Entity\\AccountRestriction::RestrictionForum'), 'In Foren posten'|trans({},'soul'), 'Du verlierst die Schreibrechte im Stadtforum sowie allen Weltforen.'|trans({},'soul')) }}
                        {{ _self.restriction_info(constant('App\\Entity\\AccountRestriction::RestrictionTownCommunication'), 'Kommunikation in der Stadt'|trans({},'soul'), 'Du kannst keine Stadtnachrichten schreiben sowie das Schwarze Brett oder den Zonenchat verwenden.'|trans({},'soul')) }}
                        {% if not app.user|restricted(constant('App\\Entity\\AccountRestriction::RestrictionTownCommunication')) %}
                            {{ _self.restriction_info(constant('App\\Entity\\AccountRestriction::RestrictionBlackboard'), 'Schwarzes Brett'|trans({},'soul'), 'Du kannst das Schwarze Brett nicht verwenden.'|trans({},'soul')) }}
                        {% endif %}
                        {{ _self.restriction_info(constant('App\\Entity\\AccountRestriction::RestrictionGlobalCommunication'), 'Stadtübergreifende Kommunikation'|trans({},'soul'), 'Du kannst keine Nachrichten über das Nachrichtenzentrum versenden.'|trans({},'soul')) }}
                        {{ _self.restriction_info(constant('App\\Entity\\AccountRestriction::RestrictionComments'), 'Kommentare'|trans({},'soul'), 'Du kannst keine Letzten Worte übermitteln und keine Stadtkommentare verfassen.'|trans({},'soul')) }}
                        {{ _self.restriction_info(constant('App\\Entity\\AccountRestriction::RestrictionOrganization'), 'Gruppenorganisation'|trans({},'soul'), 'Du kannst keine Kleinen Koalitionen gründen oder ihnen beitreten.'|trans({},'soul')) }}
                        {{ _self.restriction_info(constant('App\\Entity\\AccountRestriction::RestrictionGameplay'), 'Spielen'|trans({},'soul'), 'Du kannst keinen Städten beitreten. Befindest du dich bereits in einer Stadt, kannst du dort keinerlei Aktionen mehr durchführen und keinen Stadtbildschirm aufrufen. Zudem verlierst du den Zugang zum Stadtforum.'|trans({},'soul')) }}
                        {{ _self.restriction_info(constant('App\\Entity\\AccountRestriction::RestrictionProfileAvatar'), 'Ändern des Avatars'|trans({},'soul'), 'Du kannst deinen Avatar nicht mehr bearbeiten. Falls du aktuell einen Avatar hast, kannst du diesen jedoch löschen.'|trans({},'soul')) }}
                        {{ _self.restriction_info(constant('App\\Entity\\AccountRestriction::RestrictionProfileTitle'), 'Ändern des Profiltitels'|trans({},'soul'), 'Du kannst deinen deinen Profil-Titel sowie Icon nicht länger ändern. Wenn du aktuell einen Titel oder ein Icon gesetzt hast, kannst du diese jedoch entfernen.'|trans({},'soul')) }}
                        {{ _self.restriction_info(constant('App\\Entity\\AccountRestriction::RestrictionProfileDescription'), 'Ändern der Profilbeschreibung'|trans({},'soul'), 'Du kannst deine Profilbeschreibung nicht länger ändern. Eine bestehende Profilbeschreibung kann jedoch gelöscht werden.'|trans({},'soul')) }}
                        {{ _self.restriction_info(constant('App\\Entity\\AccountRestriction::RestrictionProfileDisplayName'), 'Ändern des Spielernamens'|trans({},'soul'), 'Du kannst deinen Spielernamen nicht mehr ändern.'|trans({},'soul')) }}

                    </ul>
                    <i>{{ 'Dieser Hinweis ist nur für dich, nicht aber für Besucher auf deiner Seelenseite sichtbar.'|trans({},'soul') }}</i>
                </div>


            {% endif %}

            <div class="score"><img src="{{ asset('build/images/soul/small_score.gif') }}"
                                    alt=""/> {{ 'Seelenpunktzahl'|trans({}, 'global') }} :
                <strong>{{ '{points} Punkte'|trans({'{points}': app.user.allSoulPoints}, 'global') }}</strong> <a
                        class="help-button">
                    <div class="tooltip help">{{ 'Diese Punkte werden für die Seelenrangliste verwendet.'|trans({},'global') }}
                        <p style="color: #f0d79e;">
                            <i>{{ 'Abhängig von der Anzahl der Tage, die du überlebt hast, erhältst du nach jeder Partie eine bestimmte Anzahl an Punkten.'|trans({},'global') }}</i>
                        </p></div>{{ 'Hilfe'|trans({},'global') }}</a></div>

            {% if features is not empty %}
                <ul class="inventory soul">
                    <li class="title">{{ 'Spiritueller Rucksack'|trans({},'game') }}</li>
                    {% for feature in features %}
                        <li class="item">
                            <span class="item-icon"><img alt=""
                                                         src="{{ asset('build/images/pictos/' ~ feature.prototype.icon ~ '.gif') }}"/></span>
                            <div class="tooltip normal">
                                <h1>{{ feature.prototype.label|trans({},'items') }} <img alt=""
                                                                                         src="{{ asset('build/images/pictos/' ~ feature.prototype.icon ~ '.gif') }}"/>
                                </h1>
                                {{ feature.prototype.description|trans({},'items') }}
                                <hr>
                                <span class="small">
                                    {{ 'Freigeschaltet:'|trans({},'game') }}
                                    <b>
                                        {% if (feature.expirationMode == constant('App\\Entity\\FeatureUnlock::FeatureExpirationNone')) %}{{ 'Dauerhaft!'|trans({},'game') }}
                                        {% elseif (feature.expirationMode == constant('App\\Entity\\FeatureUnlock::FeatureExpirationSeason')) %}{{ 'Für diese Saison'|trans({},'game') }}
                                        {% elseif (feature.expirationMode == constant('App\\Entity\\FeatureUnlock::FeatureExpirationTimestamp')) %}{{ 'Bis {date}'|trans({'{date}': feature.timestamp|format_datetime('short', 'none')},'game') }}
                                        {% elseif (feature.expirationMode == constant('App\\Entity\\FeatureUnlock::FeatureExpirationTownCount')) %}{{ 'Für {num} weitere Städte'|trans({'{num}': feature.townCount},'game') }}
                                        {% else %}???{% endif %}
                                    </b>
                                </span>
                            </div>
                        </li>
                    {% endfor %}
                </ul>
            {% endif %}

            {% if app.user.activeCitizen is not null and app.user.activeCitizen.alive %}
                <div class="current">
                    <em>{{ 'Aktuelles Leben'|trans({}, 'global') }} : </em><br/><strong><img
                                src="{{ asset('build/images/soul/r_explor.gif') }}"
                                alt=""/> {{ app.user.activeCitizen.town.name }}</strong>
                    ({{ 'Tag {day}'|trans({ '{day}':app.user.activeCitizen.town.day }, 'game') }})
                </div>
            {% endif %}
            {% if user_desc %}
                <div class="personal_desc">
                    <div>{{ 'Persönliche Beschreibung'|trans({},'game') }}</div>
                    <div>« {{ user_desc|raw }} »</div>
                </div>
            {% endif %}

            <div class="town-history">
                <div id="town-list"></div>
                <div class="row">
                    <div class="cell padded rw-6">
                        <select name="season" id="season">
                            {% for season in seasons %}
                                {% if season.number > 0 %}
                                    <option value="{{ season.id }}">
                                        {{ 'Saison {n}'|trans({'{n}': season.number},'soul') }}
                                        - {{ ('Saison ' ~ season.number ~ '.' ~ season.subNumber)|trans({}, "season") }}
                                    </option>
                                {% endif %}
                            {% endfor %}
                            {% for season in seasons %}
                                {% if season.number == 0 and season.subnumber > 14 %}
                                    <option value="{{ season.id }}">
                                        {{ 'Beta-Saison'|trans({},'soul') }}
                                    </option>
                                {% endif %}
                            {% endfor %}
                            <option value="-1">{{ 'Alte Städte'|trans({}, "soul") }}</option>
                            {% for season in seasons %}
                                {% if season.number == 0 and season.subnumber <= 14 %}
                                    <option value="{{ season.id }}">
                                        {{ 'Gute Alte Zeit'|trans({},'soul') }} -
                                        {{ 'Saison {n}'|trans({'{n}': season.subNumber},'soul') }}
                                    </option>
                                {% endif %}
                            {% endfor %}
                        </select>
                    </div>
                    <div class="cell padded rw-6 right">
                        <input type="checkbox" name="limit-10" id="limit-10" {% if app.user.setting( constant("\\App\\Enum\\UserSetting::LimitTownListSize") ) %}checked{% endif %}/> <label for="limit-10"
                                                                                              class="small">{{ 'Nur 10 Städte anzeigen'|trans({}, 'soul') }}</label><br/>
                        <span class="link small"
                              x-ajax-href="{{ path('soul_game_history') }}">{{ 'Verlauf meiner Städte'|trans({}, 'soul') }}</span>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="cell padded rw-12 rw-sm-12">
                <div id="users-list-soul">
                    <h5>{{ 'Seele suchen'|trans({}, "soul") }}</h5>
                    <div><label><input type="text" id="users-search" style="margin-top: 5px"/></label>
                        <div class="tooltip help">{{ 'Gib den Pseudo des Bürgers ein.'|trans({},'soul') }}</div>
                    </div>
                    <div id="users-list"></div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="cell padded rw-12 rw-sm-12">
               {{ help_lnk('Die Seele in MyHordes'|trans({}, 'game'), 'help', {'name': 'your_soul'}) }}
            </div>
        </div>
    </div>
{% endblock %}
{% block js %}
    {{ parent() }}
    <script>
        let season_select = document.getElementById('season');
        $.ajax.no_history().load(document.getElementById('town-list'), '{{ path('soul_get_towns', {user_id: app.user.id}) }}', false, {
            season: season_select.value,
            limit10: document.getElementById("limit-10").checked
        });
        if (season_select)
            season_select.addEventListener('change', function (e) {
                $.ajax.no_history().load(document.getElementById('town-list'), '{{ path('soul_get_towns', {user_id: app.user.id}) }}', false, {
                    season: this.value,
                    limit10: document.getElementById("limit-10").checked
                })
            });

        let limit_checkbox = document.getElementById('limit-10');
        if (season_select)
            limit_checkbox.addEventListener('change', function (e) {
                $.ajax.no_history().load(document.getElementById('town-list'), '{{ path('soul_get_towns', {user_id: app.user.id}) }}', false, {
                    season: document.getElementById('season').value,
                    limit10: this.checked
                })
            });

        let typingTimer, doneTypingInterval = 500;
        let searchBox = document.getElementById('users-search');

        let enterPressed = false;
        const userSearchHandler = function () {
            if (searchBox.value.length >= 3)
                $.ajax.background().load(
                    document.getElementById('users-list'),
                    '{{ path('users_fuzzyfind') }}',
                    false,
                    {'name': searchBox.value},
                    function () {
                        $.html.addEventListenerAll('#users-list>.users-list-entry>div', 'click', function (e, elem) {
                            $.ajax.load(document.getElementById('content'), elem.getAttribute('x-soul-url'), true);
                        })
                    }
                );
            else document.getElementById('users-list').innerHTML = '';
        };

        const userSearchHandlerUp = function () {
            clearTimeout(typingTimer);
            typingTimer = setTimeout(userSearchHandler, doneTypingInterval);
        };

        const userSearchHandlerDown = e => {
            enterPressed = e.keyCode === 13;
            clearTimeout(typingTimer);
        };

        if (searchBox) {
            searchBox.addEventListener('keyup', userSearchHandlerUp);
            searchBox.addEventListener('keydown', userSearchHandlerDown);
            searchBox.addEventListener('focus', () => userSearchHandler());
            searchBox.addEventListener('blur', () => setTimeout(() => document.getElementById('users-list').innerHTML = '', 500));
        }

    </script>
{% endblock %}
